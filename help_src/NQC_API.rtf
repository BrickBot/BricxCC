{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier{\*\falt Courier New};}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\froman\fcharset128\fprq1{\*\panose 00000000000000000000}Mincho{\*\falt ??\'81fc};}
{\f16\fnil\fcharset129\fprq1{\*\panose 00000000000000000000}Batang{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}{\f17\fnil\fcharset134\fprq2{\*\panose 00000000000000000000}SimSun{\*\falt SimSun};}
{\f18\fnil\fcharset136\fprq2{\*\panose 00000000000000000000}PMingLiU{\*\falt !Ps2OcuAe};}{\f19\fmodern\fcharset128\fprq1{\*\panose 00000000000000000000}Gothic{\*\falt ?????};}
{\f20\fmodern\fcharset129\fprq1{\*\panose 00000000000000000000}Dotum{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7E};}
{\f21\fmodern\fcharset134\fprq1{\*\panose 00000000000000000000}SimHei{\*\falt o????????\'a1\'a7????2????????\'a1\'a7?????};}{\f22\fmodern\fcharset136\fprq1{\*\panose 00000000000000000000}MingLiU{\*\falt 2OcuAe};}
{\f23\froman\fcharset128\fprq1{\*\panose 00000000000000000000}MS Mincho{\*\falt ?l?r ??\'81fc};}
{\f24\froman\fcharset129\fprq1{\*\panose 00000000000000000000}Gulim{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f25\fmodern\fcharset128\fprq1{\*\panose 00000000000000000000}MS Gothic{\*\falt ?l?r ?S?V?b?N};}{\f26\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Century;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f28\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Angsana New;}{\f29\fswiss\fcharset0\fprq2{\*\panose 020b0304020202020204}Cordia New;}{\f30\fnil\fcharset0\fprq2 Mangal;}{\f31\fnil\fcharset0\fprq2 Latha;}
{\f32\froman\fcharset0\fprq2{\*\panose 010a0502050306030303}Sylfaen;}{\f33\froman\fcharset0\fprq2{\*\panose 00000400000000000000}Vrinda;}{\f34\fnil\fcharset0\fprq2 Raavi;}{\f35\fnil\fcharset0\fprq2 Shruti;}
{\f36\froman\fcharset0\fprq2{\*\panose 00000400000000000000}Sendnya;}{\f37\fnil\fcharset0\fprq2 Gautami;}{\f38\fnil\fcharset0\fprq2 Tunga;}{\f39\fscript\fcharset0\fprq2 Estrangelo Edessa;}
{\f40\froman\fcharset0\fprq2{\*\panose 01010100010101010101}Kartika;}{\f41\fswiss\fcharset134\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS;}{\f42\froman\fcharset0\fprq0{\*\panose 00000000000000000000}????????\'a1\'a7?????;}
{\f43\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f44\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@??;}{\f45\froman\fcharset0\fprq2 Times New Roman CYR;}{\f46\froman\fcharset0\fprq2 Times New Roman TUR;}
{\f47\fswiss\fcharset0\fprq2 Arial CYR;}{\f48\fswiss\fcharset0\fprq2 Arial TUR;}{\f49\fmodern\fcharset0\fprq1 Courier New CYR;}{\f50\fmodern\fcharset0\fprq1 Courier New TUR;}{\f51\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}
{\f52\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f53\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Estrangella Edessa;}{\f54\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times{\*\falt Times New Roman};}
{\f55\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f56\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus MT;}{\f57\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus MT Lt;}
{\f58\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Antique Olive Roman;}{\f59\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Antique Olive Compact;}{\f60\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Apple Chancery;}
{\f61\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}AvantGarde;}{\f62\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bodoni;}{\f63\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bodoni Poster;}
{\f64\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bodoni PosterCompressed;}{\f65\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ITC Bookman;}{\f66\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}Carta;}
{\f67\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Chicago;}{\f68\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Clarendon;}{\f69\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Clarendon Light;}
{\f70\froman\fcharset0\fprq2{\*\panose 0208090404030b020404}Cooper Black;}{\f71\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Copperplate32bc;}{\f72\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Copperplate33bc;}
{\f73\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Coronet;}{\f74\fswiss\fcharset0\fprq2{\*\panose 020b0504020202050204}Eurostile;}{\f75\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Eurostile Bold;}
{\f76\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Eurostile ExtendedTwo;}{\f77\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans;}{\f78\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans Condensed;}
{\f79\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans Light;}{\f80\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans ExtraBold;}{\f81\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Goudy;}
{\f82\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Goudy ExtraBold;}{\f83\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica Condensed;}{\f84\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica-Narrow;}
{\f85\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Hoefler Text Regular;}{\f86\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Hoefler Text Black;}{\f87\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}Hoefler Text Ornaments;}
{\f88\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Joanna MT;}{\f89\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic;}{\f90\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Lubalin Graph;}
{\f91\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Marigold;}{\f92\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Monaco;}{\f93\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Mona Lisa Recut;}
{\f94\froman\fcharset0\fprq2{\*\panose 00000000000000000000}NewCenturySchlbk;}{\f95\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Optima;}{\f96\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Oxford;}
{\f97\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Palatino;}{\f98\froman\fcharset0\fprq2{\*\panose 00000000000000000000}StempelGaramond Roman;}{\f99\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Tekton;}
{\f100\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 55;}{\f101\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 45 Light;}{\f102\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 57 Condensed;}
{\f103\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 47 CondensedLight;}{\f104\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers Extended;}{\f105\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ZapfChancery;}
{\f106\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}ZapfDingbats;}{\f107\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ACaslon Regular;}{\f108\froman\fcharset0\fprq2{\*\panose 00000000000000000000}AGaramond Bold;}
{\f109\froman\fcharset0\fprq2{\*\panose 00000000000000000000}AGaramond;}{\f110\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Americana;}{\f111\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Americana ExtraBold;}
{\f112\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Barmeno Bold;}{\f113\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Barmeno ExtraBold;}{\f114\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Barmeno Regular;}
{\f115\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Blackoak;}{\f116\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Formata Regular;}{\f117\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}
{\f118\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica Black;}{\f119\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica Light;}{\f120\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Kaufmann;}
{\f121\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Korinna;}{\f122\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Lithos Regular;}{\f123\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Parisian;}
{\f124\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Park Avenue;}{\f125\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}Poetica SuppOrnaments;}{\f126\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Trajan;}
{\f127\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}Woodtype Ornaments 2;}{\f128\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}{\f129\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}
{\f130\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f131\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f132\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}
{\f133\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}{\f134\froman\fcharset0\fprq2{\*\panose 02040502050505030304}Palatino Linotype;}{\f135\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}
{\f136\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f137\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Microsoft Sans Serif;}{\f138\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Batang;}
{\f139\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f140\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f141\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}
{\f142\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}{\f143\fscript\fcharset0\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f144\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}
{\f145\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Outlook;}{\f146\froman\fcharset136\fprq2{\*\panose 02020300000000000000}@PMingLiU;}{\f147\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}
{\f148\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f149\froman\fcharset0\fprq2{\*\panose 02020602060405030402}Berling Antiqua;}{\f150\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Bookdings;}
{\f151\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Frutiger Linotype;}{\f152\fswiss\fcharset134\fprq2{\*\panose 020b0604020202020204}@Arial Unicode MS;}{\f153\froman\fcharset0\fprq2{\*\panose 02090504030505020304}AmerType Md BT;}
{\f154\fswiss\fcharset0\fprq2{\*\panose 020b0402020204020303}Futura Lt BT;}{\f155\fswiss\fcharset0\fprq2{\*\panose 020b0903020204020204}Futura XBlk BT;}{\f156\froman\fcharset0\fprq2{\*\panose 02020502050305020303}GoudyOlSt BT;}
{\f157\froman\fcharset0\fprq2{\*\panose 0207060307050a020302}BernhardMod BT;}{\f158\froman\fcharset0\fprq2{\*\panose 02030904050306020704}Benguiat Bk BT;}{\f159\fswiss\fcharset0\fprq2{\*\panose 020b0802020204020204}Futura Md BT;}
{\f160\fdecor\fcharset0\fprq2{\*\panose 040409040d0702020402}Allegro BT;}{\f161\fscript\fcharset0\fprq2{\*\panose 03020702030807050705}TypoUpright BT;}{\f162\froman\fcharset0\fprq2{\*\panose 02040503050506040803}ZapfEllipt BT;}
{\f163\fdecor\fcharset0\fprq2{\*\panose 04030205020b02020502}BernhardFashion BT;}{\f164\froman\fcharset0\fprq2{\*\panose 02080503040505020303}Souvenir Lt BT;}{\f165\froman\fcharset0\fprq2{\*\panose 0204050203030b020204}Dauphin;}
{\f166\fswiss\fcharset0\fprq2{\*\panose 020e0705020203020404}CopprplGoth Bd BT;}{\f167\fswiss\fcharset0\fprq2{\*\panose 020b0807040502030204}Zurich BlkEx BT;}{\f168\fswiss\fcharset0\fprq2{\*\panose 020b0505020202020204}Zurich Ex BT;}
{\f169\fdecor\fcharset0\fprq2{\*\panose 04060705040702020204}Charlesworth;}{\f170\fdecor\fcharset0\fprq2{\*\panose 04040807060d02020704}Bremen Bd BT;}{\f171\fswiss\fcharset0\fprq2{\*\panose 020b0807020203060204}BankGothic Md BT;}
{\f172\fdecor\fcharset0\fprq2{\*\panose 04020604050203030203}GoudyHandtooled BT;}{\f173\fdecor\fcharset0\fprq2{\*\panose 040409050d0b02020403}FuturaBlack BT;}{\f174\fswiss\fcharset2\fprq2{\*\panose 020b0603050302020204}CommonBullets;}
{\f175\fscript\fcharset0\fprq2{\*\panose 03080702020302020206}OzHandicraft BT;}{\f176\fscript\fcharset0\fprq2{\*\panose 03030702030607090b03}ShelleyAllegro BT;}{\f177\froman\fcharset0\fprq2{\*\panose 02060303030505020204}Serifa Th BT;}
{\f178\fscript\fcharset0\fprq2{\*\panose 03090702030407020403}Staccato222 BT;}{\f179\fswiss\fcharset0\fprq2{\*\panose 020b0402020202020204}AvantGarde Bk BT;}{\f180\fswiss\fcharset0\fprq2{\*\panose 020b0602020202020204}AvantGarde Md BT;}
{\f181\froman\fcharset0\fprq2{\*\panose 02060503030505020204}Serifa BT;}{\f182\fdecor\fcharset0\fprq2{\*\panose 040b0500000000000000}LithographLight;}{\f183\fswiss\fcharset0\fprq2{\*\panose 020d0902020204020204}Kabel Ult BT;}
{\f184\fswiss\fcharset0\fprq2{\*\panose 020b0708030702060204}Swiss911 XCm BT;}{\f185\fswiss\fcharset0\fprq2{\*\panose 020d0402020204020904}Kabel Bk BT;}{\f186\fswiss\fcharset0\fprq2{\*\panose 020b0602020204020204}Humanst521 BT;}
{\f187\fmodern\fcharset0\fprq1{\*\panose 02070509020205020404}CourierThai;}{\f188\froman\fcharset0\fprq2{\*\panose 02040603070505020404}Lucida Bright;}{\f189\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}
{\f190\fmodern\fcharset0\fprq1{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f191\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Thonburi;}{\f192\fswiss\fcharset2\fprq2{\*\panose 020b0504020104020203}Andale Mono IPA;}
{\f193\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Lithograph;}{\f194\froman\fcharset0\fprq2{\*\panose 02070a02080905020204}PosterBodoni BT;}{\f195\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Icom symbols;}
{\f196\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}TI-83 Symbols;}{\f197\froman\fcharset2\fprq2{\*\panose 05050102010205020202}MT Extra;}{\f198\fmodern\fcharset0\fprq1{\*\panose 00000409000000000000}sshlinedraw;}
{\f199\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Sydnie;}{\f200\froman\fcharset0\fprq0{\*\panose 00000000000000000000}DMOACursiveArrowDot;}{\f201\froman\fcharset0\fprq0{\*\panose 00000000000000000000}DU<;}
{\f202\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}VisualUI;}{\f203\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}Sydnie Greek;}{\f204\fmodern\fcharset222\fprq1{\*\panose 00000000000000000000}CourierThai (Thai);}
{\f205\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Bright CE;}{\f206\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Bright Tur;}{\f207\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Bright Baltic;}
{\f208\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Sans CE;}{\f209\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Lucida Sans Cyr;}{\f210\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Lucida Sans Greek;}
{\f211\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Sans Tur;}{\f212\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Lucida Sans (Hebrew);}{\f213\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Lucida Sans (Arabic);}
{\f214\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Sans Baltic;}{\f215\fswiss\fcharset238\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter CE;}
{\f216\fswiss\fcharset204\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Cyr;}{\f217\fswiss\fcharset161\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Greek;}
{\f218\fswiss\fcharset162\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Tur;}{\f219\fswiss\fcharset177\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter (Hebrew);}
{\f220\fswiss\fcharset186\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Baltic;}{\f221\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}Thonburi (Thai);}{\f222\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}LinePrinter;}
{\f223\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers;}{\f224\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers Condensed;}{\f225\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Antique Olive;}
{\f226\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}CG Omega;}{\f227\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus Medium;}{\f228\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus Extra Bold;}
{\f229\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Clarendon Condensed;}{\f230\fswiss\fcharset0\fprq2{\*\panose 020b0503020202020204}Agency FB;}{\f231\fswiss\fcharset0\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}
{\f232\fdecor\fcharset0\fprq2{\*\panose 04020505051007020d02}Blackadder ITC;}{\f233\froman\fcharset0\fprq2{\*\panose 02070603080606020203}Bodoni MT;}{\f234\froman\fcharset0\fprq2{\*\panose 02070a03080606020203}Bodoni MT Black;}
{\f235\froman\fcharset0\fprq2{\*\panose 02070606080606020203}Bodoni MT Condensed;}{\f236\fscript\fcharset0\fprq2{\*\panose 03070402050302030203}Bradley Hand ITC;}{\f237\froman\fcharset0\fprq2{\*\panose 02040603050505030304}Calisto MT;}
{\f238\froman\fcharset0\fprq2{\*\panose 020a0402060406010301}Castellar;}{\f239\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f240\fswiss\fcharset0\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}
{\f241\fswiss\fcharset0\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f242\fdecor\fcharset0\fprq2{\*\panose 04040404050702020202}Curlz MT;}{\f243\fscript\fcharset0\fprq2{\*\panose 030303020407070d0804}Edwardian Script ITC;}
{\f244\froman\fcharset0\fprq2{\*\panose 02020904090505020303}Elephant;}{\f245\froman\fcharset0\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f246\fswiss\fcharset0\fprq2{\*\panose 020b0907030504020204}Eras Bold ITC;}
{\f247\fswiss\fcharset0\fprq2{\*\panose 020b0805030504020804}Eras Demi ITC;}{\f248\fswiss\fcharset0\fprq2{\*\panose 020b0402030504020804}Eras Light ITC;}{\f249\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020804}Eras Medium ITC;}
{\f250\fdecor\fcharset0\fprq2{\*\panose 04060505060202020a04}Felix Titling;}{\f251\fscript\fcharset0\fprq2{\*\panose 03060902040502070203}Forte;}{\f252\fswiss\fcharset0\fprq2{\*\panose 020b0503020102020204}Franklin Gothic Book;}
{\f253\fswiss\fcharset0\fprq2{\*\panose 020b0703020102020204}Franklin Gothic Demi;}{\f254\fswiss\fcharset0\fprq2{\*\panose 020b0706030402020204}Franklin Gothic Demi Cond;}{\f255\fswiss\fcharset0\fprq2{\*\panose 020b0903020102020204}Franklin Gothic Heavy;}
{\f256\fswiss\fcharset0\fprq2{\*\panose 020b0603020102020204}Franklin Gothic Medium;}{\f257\fswiss\fcharset0\fprq2{\*\panose 020b0606030402020204}Franklin Gothic Medium Cond;}{\f258\fscript\fcharset0\fprq2{\*\panose 03020402040607040605}French Script MT;}
{\f259\fdecor\fcharset0\fprq2{\*\panose 04040504061007020d02}Gigi;}{\f260\fswiss\fcharset0\fprq2{\*\panose 020b0902020104020203}Gill Sans MT Ext Condensed Bold;}{\f261\fswiss\fcharset0\fprq2{\*\panose 020b0502020104020203}Gill Sans MT;}
{\f262\fswiss\fcharset0\fprq2{\*\panose 020b0506020104020203}Gill Sans MT Condensed;}{\f263\fswiss\fcharset0\fprq2{\*\panose 020b0a02020104020203}Gill Sans Ultra Bold;}
{\f264\fswiss\fcharset0\fprq2{\*\panose 020b0a06020104020203}Gill Sans Ultra Bold Condensed;}{\f265\froman\fcharset0\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}
{\f266\froman\fcharset0\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f267\froman\fcharset0\fprq2{\*\panose 0202090407030b020401}Goudy Stout;}{\f268\fdecor\fcharset0\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}
{\f269\fswiss\fcharset0\fprq2{\*\panose 020e0502030308020204}Maiandra GD;}{\f270\fmodern\fcharset0\fprq2{\*\panose 02010509020102010303}OCR A Extended;}{\f271\fscript\fcharset0\fprq2{\*\panose 030303020206070c0b05}Palace Script MT;}
{\f272\fscript\fcharset0\fprq2{\*\panose 03070502060502030205}Papyrus;}{\f273\froman\fcharset0\fprq2{\*\panose 02020502060401020303}Perpetua;}{\f274\froman\fcharset0\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}
{\f275\fscript\fcharset0\fprq2{\*\panose 03060402040406080204}Pristina;}{\f276\fscript\fcharset0\fprq2{\*\panose 03070502040507070304}Rage Italic;}{\f277\froman\fcharset0\fprq2{\*\panose 02060603020205020403}Rockwell;}
{\f278\froman\fcharset0\fprq2{\*\panose 02060603050405020104}Rockwell Condensed;}{\f279\froman\fcharset0\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}{\f280\fscript\fcharset0\fprq2{\*\panose 03040602040607080904}Script MT Bold;}
{\f281\fswiss\fcharset0\fprq2{\*\panose 020b0602020104020603}Tw Cen MT;}{\f282\fswiss\fcharset0\fprq2{\*\panose 020b0606020104020203}Tw Cen MT Condensed;}{\f283\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}MS Reference Sans Serif;}
{\f284\fnil\fcharset2\fprq2{\*\panose 05000500000000000000}MS Reference Specialty;}{\f285\fswiss\fcharset0\fprq2{\*\panose 020b0803020202020204}Tw Cen MT Condensed Extra Bold;}{\f286\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}Bookshelf Symbol 7;}
{\f287\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Mural Script;}{\f288\froman\fcharset0\fprq0{\*\panose 00000000000000000000}TimesNewRoman,Bold;}{\f289\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Berling Antiqua CE;}
{\f290\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Berling Antiqua Tur;}{\f291\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Berling Antiqua Baltic;}
{\f292\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Frutiger Linotype CE;}{\f293\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Frutiger Linotype Tur;}
{\f294\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Frutiger Linotype Baltic;}{\f295\froman\fcharset238\fprq2{\*\panose 00000000000000000000}AmerType Md BT CE;}
{\f296\froman\fcharset161\fprq2{\*\panose 00000000000000000000}AmerType Md BT Greek;}{\f297\froman\fcharset162\fprq2{\*\panose 00000000000000000000}AmerType Md BT Tur;}{\f298\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Futura Lt BT CE;}
{\f299\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Futura Lt BT Greek;}{\f300\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Futura Lt BT Tur;}{\f301\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Futura XBlk BT CE;}
{\f302\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Futura XBlk BT Greek;}{\f303\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Futura XBlk BT Tur;}{\f304\froman\fcharset238\fprq2{\*\panose 00000000000000000000}GoudyOlSt BT CE;}
{\f305\froman\fcharset161\fprq2{\*\panose 00000000000000000000}GoudyOlSt BT Greek;}{\f306\froman\fcharset162\fprq2{\*\panose 00000000000000000000}GoudyOlSt BT Tur;}{\f307\froman\fcharset238\fprq2{\*\panose 00000000000000000000}BernhardMod BT CE;}
{\f308\froman\fcharset161\fprq2{\*\panose 00000000000000000000}BernhardMod BT Greek;}{\f309\froman\fcharset162\fprq2{\*\panose 00000000000000000000}BernhardMod BT Tur;}{\f310\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Benguiat Bk BT CE;}
{\f311\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Benguiat Bk BT Greek;}{\f312\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Benguiat Bk BT Tur;}{\f313\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Futura Md BT CE;}
{\f314\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Futura Md BT Greek;}{\f315\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Futura Md BT Tur;}{\f316\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}Allegro BT CE;}
{\f317\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}Allegro BT Greek;}{\f318\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}Allegro BT Tur;}{\f319\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}TypoUpright BT CE;}
{\f320\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}TypoUpright BT Greek;}{\f321\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}TypoUpright BT Tur;}{\f322\froman\fcharset238\fprq2{\*\panose 00000000000000000000}ZapfEllipt BT CE;}
{\f323\froman\fcharset161\fprq2{\*\panose 00000000000000000000}ZapfEllipt BT Greek;}{\f324\froman\fcharset162\fprq2{\*\panose 00000000000000000000}ZapfEllipt BT Tur;}{\f325\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}BernhardFashion BT CE;}
{\f326\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}BernhardFashion BT Greek;}{\f327\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}BernhardFashion BT Tur;}
{\f328\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Souvenir Lt BT CE;}{\f329\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Souvenir Lt BT Greek;}{\f330\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Souvenir Lt BT Tur;}
{\f331\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}CopprplGoth Bd BT CE;}{\f332\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}CopprplGoth Bd BT Greek;}
{\f333\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}CopprplGoth Bd BT Tur;}{\f334\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Zurich BlkEx BT CE;}{\f335\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Zurich BlkEx BT Greek;}
{\f336\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Zurich BlkEx BT Tur;}{\f337\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Zurich Ex BT CE;}{\f338\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Zurich Ex BT Greek;}
{\f339\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Zurich Ex BT Tur;}{\f340\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}Bremen Bd BT CE;}{\f341\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}Bremen Bd BT Greek;}
{\f342\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}Bremen Bd BT Tur;}{\f343\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}BankGothic Md BT CE;}{\f344\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}BankGothic Md BT Greek;}
{\f345\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}BankGothic Md BT Tur;}{\f346\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}GoudyHandtooled BT CE;}
{\f347\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}GoudyHandtooled BT Greek;}{\f348\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}GoudyHandtooled BT Tur;}
{\f349\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}FuturaBlack BT CE;}{\f350\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}FuturaBlack BT Greek;}{\f351\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}FuturaBlack BT Tur;}
{\f352\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}OzHandicraft BT CE;}{\f353\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}OzHandicraft BT Greek;}
{\f354\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}OzHandicraft BT Tur;}{\f355\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}ShelleyAllegro BT CE;}
{\f356\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}ShelleyAllegro BT Greek;}{\f357\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}ShelleyAllegro BT Tur;}
{\f358\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Serifa Th BT CE;}{\f359\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Serifa Th BT Greek;}{\f360\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Serifa Th BT Tur;}
{\f361\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}Staccato222 BT CE;}{\f362\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}Staccato222 BT Greek;}{\f363\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}Staccato222 BT Tur;}
{\f364\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}AvantGarde Bk BT CE;}{\f365\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}AvantGarde Bk BT Greek;}
{\f366\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}AvantGarde Bk BT Tur;}{\f367\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}AvantGarde Md BT CE;}
{\f368\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}AvantGarde Md BT Greek;}{\f369\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}AvantGarde Md BT Tur;}{\f370\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Serifa BT CE;}
{\f371\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Serifa BT Greek;}{\f372\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Serifa BT Tur;}{\f373\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Kabel Ult BT CE;}
{\f374\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Kabel Ult BT Greek;}{\f375\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Kabel Ult BT Tur;}{\f376\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Swiss911 XCm BT CE;}
{\f377\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Swiss911 XCm BT Greek;}{\f378\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Swiss911 XCm BT Tur;}{\f379\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Kabel Bk BT CE;}
{\f380\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Kabel Bk BT Greek;}{\f381\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Kabel Bk BT Tur;}{\f382\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Humanst521 BT CE;}
{\f383\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Humanst521 BT Greek;}{\f384\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Humanst521 BT Tur;}{\f385\froman\fcharset238\fprq2{\*\panose 00000000000000000000}PosterBodoni BT CE;}
{\f386\froman\fcharset161\fprq2{\*\panose 00000000000000000000}PosterBodoni BT Greek;}{\f387\froman\fcharset162\fprq2{\*\panose 00000000000000000000}PosterBodoni BT Tur;}{\f388\fnil\fcharset0\fprq2 MV Boli;}
{\f389\froman\fcharset222\fprq2{\*\panose 02020603050405020304}AngsanaUPC;}{\f390\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}BrowalliaUPC;}{\f391\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Browallia New;}
{\f392\fswiss\fcharset222\fprq2{\*\panose 020b0304020202020204}CordiaUPC;}{\f393\froman\fcharset222\fprq2{\*\panose 02020603050405020304}DilleniaUPC;}{\f394\froman\fcharset222\fprq2{\*\panose 02020603050405020304}EucrosiaUPC;}
{\f395\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}FreesiaUPC;}{\f396\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}IrisUPC;}{\f397\froman\fcharset222\fprq2{\*\panose 02020603050405020304}JasmineUPC;}
{\f398\froman\fcharset222\fprq2{\*\panose 02020603050405020304}KodchiangUPC;}{\f399\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}LilyUPC;}{\f400\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Aharoni;}
{\f401\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David;}{\f402\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David Transparent;}{\f403\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}FrankRuehl;}
{\f404\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Levenim MT;}{\f405\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam;}{\f406\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam Transparent;}
{\f407\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Miriam Fixed;}{\f408\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Fixed Miriam Transparent;}{\f409\fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Narkisim;}
{\f410\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Rod;}{\f411\fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Rod Transparent;}{\f412\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Traditional Arabic;}
{\f413\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Arabic Transparent;}{\f414\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Andalus;}{\f415\fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Simplified Arabic;}
{\f416\fmodern\fcharset178\fprq1{\*\panose 02010009000000000000}Simplified Arabic Fixed;}{\f417\froman\fcharset128\fprq2{\*\panose 02020600040205080304}MS PMincho;}{\f418\froman\fcharset128\fprq2{\*\panose 02020600040205080304}@MS PMincho;}
{\f419\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}@MS Gothic;}{\f420\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS PGothic;}{\f421\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS PGothic;}
{\f422\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS UI Gothic;}{\f423\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS UI Gothic;}{\f424\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}@Gulim;}
{\f425\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}GulimChe;}{\f426\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}@GulimChe;}{\f427\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}@Dotum;}
{\f428\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}DotumChe;}{\f429\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}@DotumChe;}{\f430\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}BatangChe;}
{\f431\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}@BatangChe;}{\f432\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Gungsuh;}{\f433\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Gungsuh;}
{\f434\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}GungsuhChe;}{\f435\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}@GungsuhChe;}{\f436\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}???;}
{\f437\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}@???;}{\f438\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}@NSimSun;}{\f439\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@??;}
{\f440\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimHei;}{\f441\fmodern\fcharset136\fprq1{\*\panose 02020309000000000000}@MingLiU;}{\f442\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}@SimSun Western;}
{\f443\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@NSimSun Western;}{\f444\froman\fcharset0\fprq0{\*\panose 00000000000000000000}(Use Asian text font){\*\falt Times New Roman};}
{\f445\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times New Roman (Hebrew);}{\f446\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times New Roman (Arabic);}
{\f447\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman (Vietnamese);}{\f448\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Arial (Hebrew);}{\f449\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Arial (Arabic);}
{\f450\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Arial (Vietnamese);}{\f451\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Courier New (Hebrew);}{\f452\fmodern\fcharset178\fprq1{\*\panose 00000000000000000000}Courier New (Arabic);}
{\f453\fmodern\fcharset163\fprq1{\*\panose 00000000000000000000}Courier New (Vietnamese);}{\f454\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Helvetica (Hebrew);}
{\f455\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Helvetica (Arabic);}{\f456\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Helvetica (Vietnamese);}
{\f457\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}MS Mincho Western{\*\falt ?l?r ??\'81fc};}{\f458\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}MS Mincho CE{\*\falt ?l?r ??\'81fc};}
{\f459\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}MS Mincho Cyr{\*\falt ?l?r ??\'81fc};}{\f460\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}MS Mincho Greek{\*\falt ?l?r ??\'81fc};}
{\f461\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}MS Mincho Tur{\*\falt ?l?r ??\'81fc};}{\f462\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}MS Mincho Baltic{\*\falt ?l?r ??\'81fc};}
{\f463\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Batang Western{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f464\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Batang CE{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f465\froman\fcharset204\fprq2{\*\panose 00000000000000000000}Batang Cyr{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f466\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Batang Greek{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f467\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Batang Tur{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f468\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Batang Baltic{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f469\froman\fcharset0\fprq2{\*\panose 00000000000000000000}PMingLiU Western{\*\falt !Ps2OcuAe};}{\f470\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}MS Gothic Western{\*\falt ?l?r ?S?V?b?N};}
{\f471\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}MS Gothic CE{\*\falt ?l?r ?S?V?b?N};}{\f472\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}MS Gothic Cyr{\*\falt ?l?r ?S?V?b?N};}
{\f473\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}MS Gothic Greek{\*\falt ?l?r ?S?V?b?N};}{\f474\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}MS Gothic Tur{\*\falt ?l?r ?S?V?b?N};}
{\f475\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}MS Gothic Baltic{\*\falt ?l?r ?S?V?b?N};}
{\f476\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Dotum Western{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7E};}
{\f477\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Dotum CE{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7E};}
{\f478\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Dotum Cyr{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7E};}
{\f479\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Dotum Greek{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7E};}
{\f480\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Dotum Tur{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7E};}
{\f481\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Dotum Baltic{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7E};}
{\f482\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}MingLiU Western{\*\falt 2OcuAe};}
{\f483\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Gulim Western{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f484\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Gulim CE{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f485\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Gulim Cyr{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f486\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Gulim Greek{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f487\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Gulim Tur{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}
{\f488\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Gulim Baltic{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E};}{\f489\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Century CE;}
{\f490\froman\fcharset204\fprq2{\*\panose 00000000000000000000}Century Cyr;}{\f491\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Century Greek;}{\f492\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Century Tur;}
{\f493\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Century Baltic;}{\f494\froman\fcharset222\fprq2{\*\panose 00000000000000000000}Angsana New (Thai);}{\f495\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}Cordia New (Thai);}
{\f496\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Arial Unicode MS Western;}{\f497\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Arial Unicode MS CE;}
{\f498\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Arial Unicode MS Cyr;}{\f499\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Arial Unicode MS Greek;}
{\f500\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Arial Unicode MS Tur;}{\f501\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Arial Unicode MS (Hebrew);}
{\f502\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Arial Unicode MS (Arabic);}{\f503\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Arial Unicode MS Baltic;}
{\f504\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Arial Unicode MS (Vietnamese);}{\f505\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}Arial Unicode MS (Thai);}
{\f506\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Tahoma (Hebrew);}{\f507\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Tahoma (Arabic);}{\f508\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Tahoma (Vietnamese);}
{\f509\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}Tahoma (Thai);}{\f510\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Verdana (Vietnamese);}{\f511\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}@\'cb\'ce\'cc\'e5 Western;}
{\f512\froman\fcharset0\fprq2 Times New Roman CE;}{\f513\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times New Roman CE (Hebrew);}{\f514\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times New Roman CE (Arabic);}
{\f515\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman CE (Vietnamese);}{\f516\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times New Roman CYR (Hebrew);}
{\f517\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times New Roman CYR (Arabic);}{\f518\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman CYR (Vietnamese;}{\f519\froman\fcharset0\fprq2 Times New Roman Greek;}
{\f520\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times New Roman Greek (Hebrew);}{\f521\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times New Roman Greek (Arabic);}
{\f522\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman Greek (Vietname;}{\f523\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times New Roman TUR (Hebrew);}
{\f524\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times New Roman TUR (Arabic);}{\f525\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman TUR (Vietnamese;}{\f526\froman\fcharset0\fprq2 Times New Roman Baltic;}
{\f527\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times New Roman Baltic (Hebrew);}{\f528\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times New Roman Baltic (Arabic);}
{\f529\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman Baltic (Vietnam;}{\f530\fswiss\fcharset0\fprq2 Arial CE;}{\f531\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Arial CE (Hebrew);}
{\f532\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Arial CE (Arabic);}{\f533\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Arial CE (Vietnamese);}{\f534\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Arial CYR (Hebrew);}
{\f535\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Arial CYR (Arabic);}{\f536\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Arial CYR (Vietnamese);}{\f537\fswiss\fcharset0\fprq2 Arial Greek;}
{\f538\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Arial Greek (Hebrew);}{\f539\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Arial Greek (Arabic);}
{\f540\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Arial Greek (Vietnamese);}{\f541\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Arial TUR (Hebrew);}{\f542\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Arial TUR (Arabic);}
{\f543\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Arial TUR (Vietnamese);}{\f544\fswiss\fcharset0\fprq2 Arial Baltic;}{\f545\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Arial Baltic (Hebrew);}
{\f546\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Arial Baltic (Arabic);}{\f547\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Arial Baltic (Vietnamese);}{\f548\fmodern\fcharset0\fprq1 Courier New CE;}
{\f549\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Courier New CE (Hebrew);}{\f550\fmodern\fcharset178\fprq1{\*\panose 00000000000000000000}Courier New CE (Arabic);}
{\f551\fmodern\fcharset163\fprq1{\*\panose 00000000000000000000}Courier New CE (Vietnamese);}{\f552\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Courier New CYR (Hebrew);}
{\f553\fmodern\fcharset178\fprq1{\*\panose 00000000000000000000}Courier New CYR (Arabic);}{\f554\fmodern\fcharset163\fprq1{\*\panose 00000000000000000000}Courier New CYR (Vietnamese);}{\f555\fmodern\fcharset0\fprq1 Courier New Greek;}
{\f556\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Courier New Greek (Hebrew);}{\f557\fmodern\fcharset178\fprq1{\*\panose 00000000000000000000}Courier New Greek (Arabic);}
{\f558\fmodern\fcharset163\fprq1{\*\panose 00000000000000000000}Courier New Greek (Vietnamese);}{\f559\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Courier New TUR (Hebrew);}
{\f560\fmodern\fcharset178\fprq1{\*\panose 00000000000000000000}Courier New TUR (Arabic);}{\f561\fmodern\fcharset163\fprq1{\*\panose 00000000000000000000}Courier New TUR (Vietnamese);}{\f562\fmodern\fcharset0\fprq1 Courier New Baltic;}
{\f563\fmodern\fcharset177\fprq1{\*\panose 00000000000000000000}Courier New Baltic (Hebrew);}{\f564\fmodern\fcharset178\fprq1{\*\panose 00000000000000000000}Courier New Baltic (Arabic);}
{\f565\fmodern\fcharset163\fprq1{\*\panose 00000000000000000000}Courier New Baltic (Vietnamese);}{\f566\froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times (Hebrew);}{\f567\froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times (Arabic);}
{\f568\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times (Vietnamese);}{\f569\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Lucida Sans Unicode (Hebrew);}
{\f570\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Palatino Linotype (Vietnamese);}{\f571\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Microsoft Sans Serif (Hebrew);}
{\f572\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Microsoft Sans Serif (Arabic);}{\f573\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Microsoft Sans Serif (Vietnames;}
{\f574\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}Microsoft Sans Serif (Thai);}{\f575\froman\fcharset0\fprq2{\*\panose 00000000000000000000}@Batang Western;}{\f576\froman\fcharset238\fprq2{\*\panose 00000000000000000000}@Batang CE;}
{\f577\froman\fcharset204\fprq2{\*\panose 00000000000000000000}@Batang Cyr;}{\f578\froman\fcharset161\fprq2{\*\panose 00000000000000000000}@Batang Greek;}{\f579\froman\fcharset162\fprq2{\*\panose 00000000000000000000}@Batang Tur;}
{\f580\froman\fcharset186\fprq2{\*\panose 00000000000000000000}@Batang Baltic;}{\f581\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@MS Mincho Western;}{\f582\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}@MS Mincho CE;}
{\f583\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}@MS Mincho Cyr;}{\f584\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}@MS Mincho Greek;}{\f585\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}@MS Mincho Tur;}
{\f586\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}@MS Mincho Baltic;}{\f587\froman\fcharset0\fprq2{\*\panose 00000000000000000000}@PMingLiU Western;}{\f588\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS Western;}
{\f589\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS CE;}{\f590\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS Cyr;}
{\f591\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS Greek;}{\f592\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS Tur;}
{\f593\fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS (Hebrew);}{\f594\fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS (Arabic);}
{\f595\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS Baltic;}{\f596\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS (Vietnamese);}
{\f597\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}@Arial Unicode MS (Thai);}{\f598\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Century Schoolbook CE;}
{\f599\froman\fcharset204\fprq2{\*\panose 00000000000000000000}Century Schoolbook Cyr;}{\f600\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Century Schoolbook Greek;}
{\f601\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Century Schoolbook Tur;}{\f602\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Century Schoolbook Baltic;}
{\f603\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Franklin Gothic Demi Cond Balti;}{\f604\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Franklin Gothic Medium Cond Gre;}
{\f605\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Franklin Gothic Medium Cond Bal;}{\f606\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Gill Sans Ultra Bold Condensed ;}
{\f607\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Tw Cen MT CE;}{\f608\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Tw Cen MT Condensed CE;}
{\f609\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}MS Reference Sans Serif (Vietna;}{\f610\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Tw Cen MT Condensed Extra Bold ;}
{\f611\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}Browallia New (Thai);}{\f612\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS PMincho Western;}{\f613\froman\fcharset238\fprq2{\*\panose 00000000000000000000}MS PMincho CE;}
{\f614\froman\fcharset204\fprq2{\*\panose 00000000000000000000}MS PMincho Cyr;}{\f615\froman\fcharset161\fprq2{\*\panose 00000000000000000000}MS PMincho Greek;}{\f616\froman\fcharset162\fprq2{\*\panose 00000000000000000000}MS PMincho Tur;}
{\f617\froman\fcharset186\fprq2{\*\panose 00000000000000000000}MS PMincho Baltic;}{\f618\froman\fcharset0\fprq2{\*\panose 00000000000000000000}@MS PMincho Western;}{\f619\froman\fcharset238\fprq2{\*\panose 00000000000000000000}@MS PMincho CE;}
{\f620\froman\fcharset204\fprq2{\*\panose 00000000000000000000}@MS PMincho Cyr;}{\f621\froman\fcharset161\fprq2{\*\panose 00000000000000000000}@MS PMincho Greek;}{\f622\froman\fcharset162\fprq2{\*\panose 00000000000000000000}@MS PMincho Tur;}
{\f623\froman\fcharset186\fprq2{\*\panose 00000000000000000000}@MS PMincho Baltic;}{\f624\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@MS Gothic Western;}{\f625\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}@MS Gothic CE;}
{\f626\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}@MS Gothic Cyr;}{\f627\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}@MS Gothic Greek;}{\f628\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}@MS Gothic Tur;}
{\f629\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}@MS Gothic Baltic;}{\f630\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS PGothic Western;}{\f631\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}MS PGothic CE;}
{\f632\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}MS PGothic Cyr;}{\f633\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}MS PGothic Greek;}{\f634\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}MS PGothic Tur;}
{\f635\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}MS PGothic Baltic;}{\f636\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}@MS PGothic Western;}{\f637\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}@MS PGothic CE;}
{\f638\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}@MS PGothic Cyr;}{\f639\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}@MS PGothic Greek;}{\f640\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}@MS PGothic Tur;}
{\f641\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}@MS PGothic Baltic;}{\f642\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS UI Gothic Western;}{\f643\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}MS UI Gothic CE;}
{\f644\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}MS UI Gothic Cyr;}{\f645\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}MS UI Gothic Greek;}{\f646\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}MS UI Gothic Tur;}
{\f647\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}MS UI Gothic Baltic;}{\f648\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}@MS UI Gothic Western;}{\f649\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}@MS UI Gothic CE;}
{\f650\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}@MS UI Gothic Cyr;}{\f651\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}@MS UI Gothic Greek;}{\f652\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}@MS UI Gothic Tur;}
{\f653\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}@MS UI Gothic Baltic;}{\f654\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}@Gulim Western;}{\f655\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}@Gulim CE;}
{\f656\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}@Gulim Cyr;}{\f657\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}@Gulim Greek;}{\f658\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}@Gulim Tur;}
{\f659\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}@Gulim Baltic;}{\f660\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}GulimChe Western;}{\f661\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}GulimChe CE;}
{\f662\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}GulimChe Cyr;}{\f663\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}GulimChe Greek;}{\f664\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}GulimChe Tur;}
{\f665\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}GulimChe Baltic;}{\f666\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@GulimChe Western;}{\f667\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}@GulimChe CE;}
{\f668\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}@GulimChe Cyr;}{\f669\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}@GulimChe Greek;}{\f670\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}@GulimChe Tur;}
{\f671\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}@GulimChe Baltic;}{\f672\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}@Dotum Western;}{\f673\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}@Dotum CE;}
{\f674\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}@Dotum Cyr;}{\f675\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}@Dotum Greek;}{\f676\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}@Dotum Tur;}
{\f677\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}@Dotum Baltic;}{\f678\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}DotumChe Western;}{\f679\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}DotumChe CE;}
{\f680\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}DotumChe Cyr;}{\f681\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}DotumChe Greek;}{\f682\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}DotumChe Tur;}
{\f683\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}DotumChe Baltic;}{\f684\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@DotumChe Western;}{\f685\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}@DotumChe CE;}
{\f686\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}@DotumChe Cyr;}{\f687\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}@DotumChe Greek;}{\f688\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}@DotumChe Tur;}
{\f689\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}@DotumChe Baltic;}{\f690\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}BatangChe Western;}{\f691\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}BatangChe CE;}
{\f692\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}BatangChe Cyr;}{\f693\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}BatangChe Greek;}{\f694\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}BatangChe Tur;}
{\f695\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}BatangChe Baltic;}{\f696\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@BatangChe Western;}{\f697\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}@BatangChe CE;}
{\f698\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}@BatangChe Cyr;}{\f699\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}@BatangChe Greek;}{\f700\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}@BatangChe Tur;}
{\f701\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}@BatangChe Baltic;}{\f702\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Gungsuh Western;}{\f703\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Gungsuh CE;}
{\f704\froman\fcharset204\fprq2{\*\panose 00000000000000000000}Gungsuh Cyr;}{\f705\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Gungsuh Greek;}{\f706\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Gungsuh Tur;}
{\f707\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Gungsuh Baltic;}{\f708\froman\fcharset0\fprq2{\*\panose 00000000000000000000}@Gungsuh Western;}{\f709\froman\fcharset238\fprq2{\*\panose 00000000000000000000}@Gungsuh CE;}
{\f710\froman\fcharset204\fprq2{\*\panose 00000000000000000000}@Gungsuh Cyr;}{\f711\froman\fcharset161\fprq2{\*\panose 00000000000000000000}@Gungsuh Greek;}{\f712\froman\fcharset162\fprq2{\*\panose 00000000000000000000}@Gungsuh Tur;}
{\f713\froman\fcharset186\fprq2{\*\panose 00000000000000000000}@Gungsuh Baltic;}{\f714\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}GungsuhChe Western;}{\f715\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}GungsuhChe CE;}
{\f716\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}GungsuhChe Cyr;}{\f717\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}GungsuhChe Greek;}{\f718\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}GungsuhChe Tur;}
{\f719\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}GungsuhChe Baltic;}{\f720\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@GungsuhChe Western;}{\f721\fmodern\fcharset238\fprq1{\*\panose 00000000000000000000}@GungsuhChe CE;}
{\f722\fmodern\fcharset204\fprq1{\*\panose 00000000000000000000}@GungsuhChe Cyr;}{\f723\fmodern\fcharset161\fprq1{\*\panose 00000000000000000000}@GungsuhChe Greek;}{\f724\fmodern\fcharset162\fprq1{\*\panose 00000000000000000000}@GungsuhChe Tur;}
{\f725\fmodern\fcharset186\fprq1{\*\panose 00000000000000000000}@GungsuhChe Baltic;}{\f726\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@\'d0\'c2\'cb\'ce\'cc\'e5 Western;}
{\f727\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@MingLiU Western;}{\f728\fscript\fcharset0\fprq2{\*\panose 03090702030407020403}Mistral;}{\f729\fscript\fcharset0\fprq2{\*\panose 03050502040202030202}Kristen ITC;}
{\f730\fdecor\fcharset0\fprq2{\*\panose 04040403030d02020704}Matisse ITC;}{\f731\fdecor\fcharset0\fprq2{\*\panose 04020404030d07020202}Tempus Sans ITC;}{\f732\fscript\fcharset0\fprq2{\*\panose 03020602050506090804}Vivaldi;}
{\f733\fdecor\fcharset0\fprq2{\*\panose 04090605060d06020702}Jokerman;}{\f734\fdecor\fcharset0\fprq2{\*\panose 04040403040a02020202}Juice ITC;}{\f735\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Reference 1;}
{\f736\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}MS Reference 2;}{\f737\fswiss\fcharset0\fprq2{\*\panose 020b0506030101010103}Abadi MT Condensed;}{\f738\fswiss\fcharset0\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}
{\f739\fswiss\fcharset0\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f740\fdecor\fcharset0\fprq2{\*\panose 04020705040a02060702}Algerian;}{\f741\fscript\fcharset0\fprq2{\*\panose 03080602030302030203}Andy;}
{\f742\froman\fcharset0\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f743\fdecor\fcharset0\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f744\fdecor\fcharset0\fprq2{\*\panose 04040a05050d02020502}Beesknees ITC;}
{\f745\froman\fcharset0\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f746\fscript\fcharset0\fprq2{\*\panose 030202020406070a0903}Bickley Script;}{\f747\fdecor\fcharset0\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}
{\f748\fswiss\fcharset0\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f749\fdecor\fcharset0\fprq2{\*\panose 04040905080b02020502}Broadway;}{\f750\fscript\fcharset0\fprq2{\*\panose 03060802040406070304}Brush Script MT;}
{\f751\fdecor\fcharset0\fprq2{\*\panose 04020404031007020602}Chiller;}{\f752\fdecor\fcharset0\fprq2{\*\panose 04020505060803040902}Edda;}{\f753\fdecor\fcharset0\fprq2{\*\panose 04030405020f02020502}Enviro;}
{\f754\fscript\fcharset0\fprq2{\*\panose 03060602040506080206}Fine Hand;}{\f755\fscript\fcharset0\fprq2{\*\panose 030804020302050b0404}Freestyle Script;}{\f756\fdecor\fcharset0\fprq2{\*\panose 04030604020f02020d02}Harlow Solid Italic;}
{\f757\fdecor\fcharset0\fprq2{\*\panose 04040505050a02020702}Harrington;}{\f758\fscript\fcharset0\fprq2{\*\panose 030604020304060b0204}Informal Roman;}{\f759\fdecor\fcharset0\fprq2{\*\panose 040307050d0c02020703}Kino MT;}
{\f760\fscript\fcharset0\fprq2{\*\panose 030304020206070d0d06}Kunstler Script;}{\f761\froman\fcharset0\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f762\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}
{\f763\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f764\fscript\fcharset0\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f765\froman\fcharset0\fprq2{\*\panose 02070704070505020303}Modern No. 20;}
{\f766\fmodern\fcharset0\fprq1{\*\panose 020b0609020202020204}OCRB;}{\f767\fscript\fcharset0\fprq2{\*\panose 03040902040508030806}Old English Text MT;}{\f768\fdecor\fcharset0\fprq2{\*\panose 04050602080702020203}Onyx;}
{\f769\fscript\fcharset0\fprq2{\*\panose 03080702040402020b04}Parade;}{\f770\fscript\fcharset0\fprq2{\*\panose 03040602040708040804}Parchment;}{\f771\fscript\fcharset0\fprq2{\*\panose 03060402040502070804}Pepita MT;}
{\f772\fswiss\fcharset0\fprq2{\*\panose 020b0606030402050204}Placard Condensed;}{\f773\fdecor\fcharset0\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f774\froman\fcharset0\fprq2{\*\panose 02080502050505020702}Poor Richard;}
{\f775\froman\fcharset0\fprq2{\*\panose 020a0606050403050204}Runic MT Condensed;}{\f776\fdecor\fcharset0\fprq2{\*\panose 04040a07060a02020202}Snap ITC;}{\f777\fscript\fcharset0\fprq2{\*\panose 03070502030502020203}Viner Hand ITC;}
{\f778\fscript\fcharset0\fprq2{\*\panose 03050402040407070305}Vladimir Script;}{\f779\froman\fcharset0\fprq2{\*\panose 02040502050405020303}MS Reference Serif;}{\f780\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana Ref;}
{\f781\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia Ref;}{\f782\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}RefSpecialty;}{\f783\fswiss\fcharset2\fprq2{\*\panose 050b0604020202020204}Arial Special G1;}
{\f784\fswiss\fcharset2\fprq2{\*\panose 050b0604020202020204}Arial Special G2;}{\f785\fswiss\fcharset2\fprq2{\*\panose 050b0506020202030204}Arial Narrow Special G1;}{\f786\fswiss\fcharset2\fprq2{\*\panose 050b0506020202030204}Arial Narrow Special G2;}
{\f787\froman\fcharset2\fprq2{\*\panose 05020603050405020304}Times New Roman Special G1;}{\f788\froman\fcharset2\fprq2{\*\panose 05020603050405020304}Times New Roman Special G2;}{\f789\fswiss\fcharset0\fprq2{\*\panose 020b0502040204020203}Segoe UI;}
{\f790\fswiss\fcharset0\fprq2{\*\panose 020b07060309020202be}FranklinGotTDemCon;}{\f791\froman\fcharset238\fprq2 Times New Roman CE;}{\f792\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f794\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f795\froman\fcharset162\fprq2 Times New Roman Tur;}{\f796\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f797\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f798\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f799\fswiss\fcharset238\fprq2 Arial CE;}{\f800\fswiss\fcharset204\fprq2 Arial Cyr;}{\f802\fswiss\fcharset161\fprq2 Arial Greek;}{\f803\fswiss\fcharset162\fprq2 Arial Tur;}{\f804\fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f805\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f806\fswiss\fcharset186\fprq2 Arial Baltic;}{\f807\fmodern\fcharset238\fprq1 Courier New CE;}{\f808\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f810\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f811\fmodern\fcharset162\fprq1 Courier New Tur;}{\f812\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f813\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f814\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f823\froman\fcharset238\fprq2 Times CE;}
{\f824\froman\fcharset204\fprq2 Times Cyr;}{\f826\froman\fcharset161\fprq2 Times Greek;}{\f827\froman\fcharset162\fprq2 Times Tur;}{\f828\froman\fcharset177\fprq2 Times (Hebrew);}{\f829\froman\fcharset178\fprq2 Times (Arabic);}
{\f830\froman\fcharset186\fprq2 Times Baltic;}{\f831\fswiss\fcharset238\fprq2 Helvetica CE;}{\f832\fswiss\fcharset204\fprq2 Helvetica Cyr;}{\f834\fswiss\fcharset161\fprq2 Helvetica Greek;}{\f835\fswiss\fcharset162\fprq2 Helvetica Tur;}
{\f836\fswiss\fcharset177\fprq2 Helvetica (Hebrew);}{\f837\fswiss\fcharset178\fprq2 Helvetica (Arabic);}{\f838\fswiss\fcharset186\fprq2 Helvetica Baltic;}{\f929\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}
{\f1007\fswiss\fcharset238\fprq2 Tahoma CE;}{\f1008\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f1010\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f1011\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f1012\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}
{\f1013\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f1014\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f1047\froman\fcharset238\fprq2 Sylfaen CE;}{\f1048\froman\fcharset204\fprq2 Sylfaen Cyr;}{\f1050\froman\fcharset161\fprq2 Sylfaen Greek;}
{\f1051\froman\fcharset162\fprq2 Sylfaen Tur;}{\f1054\froman\fcharset186\fprq2 Sylfaen Baltic;}{\f1135\fswiss\fcharset238\fprq2 Verdana CE;}{\f1136\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f1138\fswiss\fcharset161\fprq2 Verdana Greek;}
{\f1139\fswiss\fcharset162\fprq2 Verdana Tur;}{\f1142\fswiss\fcharset186\fprq2 Verdana Baltic;}{\f1151\froman\fcharset238\fprq2 Times New Roman CYR CE;}{\f1152\froman\fcharset204\fprq2 Times New Roman CYR Cyr;}
{\f1154\froman\fcharset161\fprq2 Times New Roman CYR Greek;}{\f1155\froman\fcharset162\fprq2 Times New Roman CYR Tur;}{\f1156\froman\fcharset177\fprq2 Times New Roman CYR (Hebrew);}{\f1157\froman\fcharset178\fprq2 Times New Roman CYR (Arabic);}
{\f1158\froman\fcharset186\fprq2 Times New Roman CYR Baltic;}{\f1159\froman\fcharset238\fprq2 Times New Roman TUR CE;}{\f1160\froman\fcharset204\fprq2 Times New Roman TUR Cyr;}{\f1162\froman\fcharset161\fprq2 Times New Roman TUR Greek;}
{\f1163\froman\fcharset162\fprq2 Times New Roman TUR Tur;}{\f1164\froman\fcharset177\fprq2 Times New Roman TUR (Hebrew);}{\f1165\froman\fcharset178\fprq2 Times New Roman TUR (Arabic);}{\f1166\froman\fcharset186\fprq2 Times New Roman TUR Baltic;}
{\f1167\fswiss\fcharset238\fprq2 Arial CYR CE;}{\f1168\fswiss\fcharset204\fprq2 Arial CYR Cyr;}{\f1170\fswiss\fcharset161\fprq2 Arial CYR Greek;}{\f1171\fswiss\fcharset162\fprq2 Arial CYR Tur;}{\f1172\fswiss\fcharset177\fprq2 Arial CYR (Hebrew);}
{\f1173\fswiss\fcharset178\fprq2 Arial CYR (Arabic);}{\f1174\fswiss\fcharset186\fprq2 Arial CYR Baltic;}{\f1175\fswiss\fcharset238\fprq2 Arial TUR CE;}{\f1176\fswiss\fcharset204\fprq2 Arial TUR Cyr;}{\f1178\fswiss\fcharset161\fprq2 Arial TUR Greek;}
{\f1179\fswiss\fcharset162\fprq2 Arial TUR Tur;}{\f1180\fswiss\fcharset177\fprq2 Arial TUR (Hebrew);}{\f1181\fswiss\fcharset178\fprq2 Arial TUR (Arabic);}{\f1182\fswiss\fcharset186\fprq2 Arial TUR Baltic;}
{\f1183\fmodern\fcharset238\fprq1 Courier New CYR CE;}{\f1184\fmodern\fcharset204\fprq1 Courier New CYR Cyr;}{\f1186\fmodern\fcharset161\fprq1 Courier New CYR Greek;}{\f1187\fmodern\fcharset162\fprq1 Courier New CYR Tur;}
{\f1188\fmodern\fcharset177\fprq1 Courier New CYR (Hebrew);}{\f1189\fmodern\fcharset178\fprq1 Courier New CYR (Arabic);}{\f1190\fmodern\fcharset186\fprq1 Courier New CYR Baltic;}{\f1191\fmodern\fcharset238\fprq1 Courier New TUR CE;}
{\f1192\fmodern\fcharset204\fprq1 Courier New TUR Cyr;}{\f1194\fmodern\fcharset161\fprq1 Courier New TUR Greek;}{\f1195\fmodern\fcharset162\fprq1 Courier New TUR Tur;}{\f1196\fmodern\fcharset177\fprq1 Courier New TUR (Hebrew);}
{\f1197\fmodern\fcharset178\fprq1 Courier New TUR (Arabic);}{\f1198\fmodern\fcharset186\fprq1 Courier New TUR Baltic;}{\f1207\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f1208\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}
{\f1210\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f1211\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f1214\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}{\f1231\fscript\fcharset238\fprq2 Comic Sans MS CE;}
{\f1232\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}{\f1234\fscript\fcharset161\fprq2 Comic Sans MS Greek;}{\f1235\fscript\fcharset162\fprq2 Comic Sans MS Tur;}{\f1238\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}
{\f1727\froman\fcharset238\fprq2 Garamond CE;}{\f1728\froman\fcharset204\fprq2 Garamond Cyr;}{\f1730\froman\fcharset161\fprq2 Garamond Greek;}{\f1731\froman\fcharset162\fprq2 Garamond Tur;}{\f1734\froman\fcharset186\fprq2 Garamond Baltic;}
{\f1823\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f1824\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f1826\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f1827\fmodern\fcharset162\fprq1 Lucida Console Tur;}
{\f1831\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f1832\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}{\f1834\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f1835\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}
{\f1836\fswiss\fcharset177\fprq2 Lucida Sans Unicode (Hebrew);}{\f1839\fswiss\fcharset238\fprq2 Arial Black CE;}{\f1840\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f1842\fswiss\fcharset161\fprq2 Arial Black Greek;}
{\f1843\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f1846\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f1847\fswiss\fcharset238\fprq2 Impact CE;}{\f1848\fswiss\fcharset204\fprq2 Impact Cyr;}{\f1850\fswiss\fcharset161\fprq2 Impact Greek;}
{\f1851\fswiss\fcharset162\fprq2 Impact Tur;}{\f1854\fswiss\fcharset186\fprq2 Impact Baltic;}{\f1855\froman\fcharset238\fprq2 Georgia CE;}{\f1856\froman\fcharset204\fprq2 Georgia Cyr;}{\f1858\froman\fcharset161\fprq2 Georgia Greek;}
{\f1859\froman\fcharset162\fprq2 Georgia Tur;}{\f1862\froman\fcharset186\fprq2 Georgia Baltic;}{\f1863\froman\fcharset238\fprq2 Palatino Linotype CE;}{\f1864\froman\fcharset204\fprq2 Palatino Linotype Cyr;}
{\f1866\froman\fcharset161\fprq2 Palatino Linotype Greek;}{\f1867\froman\fcharset162\fprq2 Palatino Linotype Tur;}{\f1870\froman\fcharset186\fprq2 Palatino Linotype Baltic;}{\f1871\fswiss\fcharset238\fprq2 Trebuchet MS CE;}
{\f1872\fswiss\fcharset204\fprq2 Trebuchet MS Cyr;}{\f1874\fswiss\fcharset161\fprq2 Trebuchet MS Greek;}{\f1875\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}{\f1878\fswiss\fcharset186\fprq2 Trebuchet MS Baltic;}
{\f1887\fswiss\fcharset238\fprq2 Microsoft Sans Serif CE;}{\f1888\fswiss\fcharset204\fprq2 Microsoft Sans Serif Cyr;}{\f1890\fswiss\fcharset161\fprq2 Microsoft Sans Serif Greek;}{\f1891\fswiss\fcharset162\fprq2 Microsoft Sans Serif Tur;}
{\f1892\fswiss\fcharset177\fprq2 Microsoft Sans Serif (Hebrew);}{\f1893\fswiss\fcharset178\fprq2 Microsoft Sans Serif (Arabic);}{\f1894\fswiss\fcharset186\fprq2 Microsoft Sans Serif Baltic;}{\f1903\froman\fcharset238\fprq2 Book Antiqua CE;}
{\f1904\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f1906\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f1907\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f1910\froman\fcharset186\fprq2 Book Antiqua Baltic;}
{\f1911\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f1912\froman\fcharset204\fprq2 Bookman Old Style Cyr;}{\f1914\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f1915\froman\fcharset162\fprq2 Bookman Old Style Tur;}
{\f1918\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f1919\fswiss\fcharset238\fprq2 Century Gothic CE;}{\f1920\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f1922\fswiss\fcharset161\fprq2 Century Gothic Greek;}
{\f1923\fswiss\fcharset162\fprq2 Century Gothic Tur;}{\f1926\fswiss\fcharset186\fprq2 Century Gothic Baltic;}{\f1927\fswiss\fcharset238\fprq2 Haettenschweiler CE;}{\f1928\fswiss\fcharset204\fprq2 Haettenschweiler Cyr;}
{\f1930\fswiss\fcharset161\fprq2 Haettenschweiler Greek;}{\f1931\fswiss\fcharset162\fprq2 Haettenschweiler Tur;}{\f1934\fswiss\fcharset186\fprq2 Haettenschweiler Baltic;}{\f1935\fscript\fcharset238\fprq2 Monotype Corsiva CE;}
{\f1936\fscript\fcharset204\fprq2 Monotype Corsiva Cyr;}{\f1938\fscript\fcharset161\fprq2 Monotype Corsiva Greek;}{\f1939\fscript\fcharset162\fprq2 Monotype Corsiva Tur;}{\f1942\fscript\fcharset186\fprq2 Monotype Corsiva Baltic;}
{\f2807\fswiss\fcharset238\fprq2 Franklin Gothic Book CE;}{\f2808\fswiss\fcharset204\fprq2 Franklin Gothic Book Cyr;}{\f2810\fswiss\fcharset161\fprq2 Franklin Gothic Book Greek;}{\f2811\fswiss\fcharset162\fprq2 Franklin Gothic Book Tur;}
{\f2814\fswiss\fcharset186\fprq2 Franklin Gothic Book Baltic;}{\f2815\fswiss\fcharset238\fprq2 Franklin Gothic Demi CE;}{\f2816\fswiss\fcharset204\fprq2 Franklin Gothic Demi Cyr;}{\f2818\fswiss\fcharset161\fprq2 Franklin Gothic Demi Greek;}
{\f2819\fswiss\fcharset162\fprq2 Franklin Gothic Demi Tur;}{\f2822\fswiss\fcharset186\fprq2 Franklin Gothic Demi Baltic;}{\f2823\fswiss\fcharset238\fprq2 Franklin Gothic Demi Cond CE;}{\f2824\fswiss\fcharset204\fprq2 Franklin Gothic Demi Cond Cyr;}
{\f2826\fswiss\fcharset161\fprq2 Franklin Gothic Demi Cond Greek;}{\f2827\fswiss\fcharset162\fprq2 Franklin Gothic Demi Cond Tur;}{\f2830\fswiss\fcharset186\fprq2 Franklin Gothic Demi Cond Baltic;}
{\f2831\fswiss\fcharset238\fprq2 Franklin Gothic Heavy CE;}{\f2832\fswiss\fcharset204\fprq2 Franklin Gothic Heavy Cyr;}{\f2834\fswiss\fcharset161\fprq2 Franklin Gothic Heavy Greek;}{\f2835\fswiss\fcharset162\fprq2 Franklin Gothic Heavy Tur;}
{\f2838\fswiss\fcharset186\fprq2 Franklin Gothic Heavy Baltic;}{\f2839\fswiss\fcharset238\fprq2 Franklin Gothic Medium CE;}{\f2840\fswiss\fcharset204\fprq2 Franklin Gothic Medium Cyr;}{\f2842\fswiss\fcharset161\fprq2 Franklin Gothic Medium Greek;}
{\f2843\fswiss\fcharset162\fprq2 Franklin Gothic Medium Tur;}{\f2846\fswiss\fcharset186\fprq2 Franklin Gothic Medium Baltic;}{\f2847\fswiss\fcharset238\fprq2 Franklin Gothic Medium Cond CE;}
{\f2848\fswiss\fcharset204\fprq2 Franklin Gothic Medium Cond Cyr;}{\f2850\fswiss\fcharset161\fprq2 Franklin Gothic Medium Cond Greek;}{\f2851\fswiss\fcharset162\fprq2 Franklin Gothic Medium Cond Tur;}
{\f2854\fswiss\fcharset186\fprq2 Franklin Gothic Medium Cond Baltic;}{\f2871\fswiss\fcharset238\fprq2 Gill Sans MT Ext Condensed Bold CE;}{\f2879\fswiss\fcharset238\fprq2 Gill Sans MT CE;}{\f2887\fswiss\fcharset238\fprq2 Gill Sans MT Condensed CE;}
{\f2895\fswiss\fcharset238\fprq2 Gill Sans Ultra Bold CE;}{\f3055\fswiss\fcharset238\fprq2 MS Reference Sans Serif CE;}{\f3056\fswiss\fcharset204\fprq2 MS Reference Sans Serif Cyr;}{\f3058\fswiss\fcharset161\fprq2 MS Reference Sans Serif Greek;}
{\f3059\fswiss\fcharset162\fprq2 MS Reference Sans Serif Tur;}{\f3062\fswiss\fcharset186\fprq2 MS Reference Sans Serif Baltic;}{\f4281\fmodern\fcharset0\fprq1 ??? Western;}{\f4887\froman\fcharset238\fprq2 Times New Roman CE CE;}
{\f4888\froman\fcharset204\fprq2 Times New Roman CE Cyr;}{\f4890\froman\fcharset161\fprq2 Times New Roman CE Greek;}{\f4891\froman\fcharset162\fprq2 Times New Roman CE Tur;}{\f4892\froman\fcharset177\fprq2 Times New Roman CE (Hebrew);}
{\f4893\froman\fcharset178\fprq2 Times New Roman CE (Arabic);}{\f4894\froman\fcharset186\fprq2 Times New Roman CE Baltic;}{\f4943\froman\fcharset238\fprq2 Times New Roman Greek CE;}{\f4944\froman\fcharset204\fprq2 Times New Roman Greek Cyr;}
{\f4946\froman\fcharset161\fprq2 Times New Roman Greek Greek;}{\f4947\froman\fcharset162\fprq2 Times New Roman Greek Tur;}{\f4948\froman\fcharset177\fprq2 Times New Roman Greek (Hebrew);}{\f4949\froman\fcharset178\fprq2 Times New Roman Greek (Arabic);}
{\f4950\froman\fcharset186\fprq2 Times New Roman Greek Baltic;}{\f4999\froman\fcharset238\fprq2 Times New Roman Baltic CE;}{\f5000\froman\fcharset204\fprq2 Times New Roman Baltic Cyr;}{\f5002\froman\fcharset161\fprq2 Times New Roman Baltic Greek;}
{\f5003\froman\fcharset162\fprq2 Times New Roman Baltic Tur;}{\f5004\froman\fcharset177\fprq2 Times New Roman Baltic (Hebrew);}{\f5005\froman\fcharset178\fprq2 Times New Roman Baltic (Arabic);}
{\f5006\froman\fcharset186\fprq2 Times New Roman Baltic Baltic;}{\f5031\fswiss\fcharset238\fprq2 Arial CE CE;}{\f5032\fswiss\fcharset204\fprq2 Arial CE Cyr;}{\f5034\fswiss\fcharset161\fprq2 Arial CE Greek;}{\f5035\fswiss\fcharset162\fprq2 Arial CE Tur;}
{\f5036\fswiss\fcharset177\fprq2 Arial CE (Hebrew);}{\f5037\fswiss\fcharset178\fprq2 Arial CE (Arabic);}{\f5038\fswiss\fcharset186\fprq2 Arial CE Baltic;}{\f5087\fswiss\fcharset238\fprq2 Arial Greek CE;}{\f5088\fswiss\fcharset204\fprq2 Arial Greek Cyr;}
{\f5090\fswiss\fcharset161\fprq2 Arial Greek Greek;}{\f5091\fswiss\fcharset162\fprq2 Arial Greek Tur;}{\f5092\fswiss\fcharset177\fprq2 Arial Greek (Hebrew);}{\f5093\fswiss\fcharset178\fprq2 Arial Greek (Arabic);}
{\f5094\fswiss\fcharset186\fprq2 Arial Greek Baltic;}{\f5143\fswiss\fcharset238\fprq2 Arial Baltic CE;}{\f5144\fswiss\fcharset204\fprq2 Arial Baltic Cyr;}{\f5146\fswiss\fcharset161\fprq2 Arial Baltic Greek;}
{\f5147\fswiss\fcharset162\fprq2 Arial Baltic Tur;}{\f5148\fswiss\fcharset177\fprq2 Arial Baltic (Hebrew);}{\f5149\fswiss\fcharset178\fprq2 Arial Baltic (Arabic);}{\f5150\fswiss\fcharset186\fprq2 Arial Baltic Baltic;}
{\f5175\fmodern\fcharset238\fprq1 Courier New CE CE;}{\f5176\fmodern\fcharset204\fprq1 Courier New CE Cyr;}{\f5178\fmodern\fcharset161\fprq1 Courier New CE Greek;}{\f5179\fmodern\fcharset162\fprq1 Courier New CE Tur;}
{\f5180\fmodern\fcharset177\fprq1 Courier New CE (Hebrew);}{\f5181\fmodern\fcharset178\fprq1 Courier New CE (Arabic);}{\f5182\fmodern\fcharset186\fprq1 Courier New CE Baltic;}{\f5231\fmodern\fcharset238\fprq1 Courier New Greek CE;}
{\f5232\fmodern\fcharset204\fprq1 Courier New Greek Cyr;}{\f5234\fmodern\fcharset161\fprq1 Courier New Greek Greek;}{\f5235\fmodern\fcharset162\fprq1 Courier New Greek Tur;}{\f5236\fmodern\fcharset177\fprq1 Courier New Greek (Hebrew);}
{\f5237\fmodern\fcharset178\fprq1 Courier New Greek (Arabic);}{\f5238\fmodern\fcharset186\fprq1 Courier New Greek Baltic;}{\f5287\fmodern\fcharset238\fprq1 Courier New Baltic CE;}{\f5288\fmodern\fcharset204\fprq1 Courier New Baltic Cyr;}
{\f5290\fmodern\fcharset161\fprq1 Courier New Baltic Greek;}{\f5291\fmodern\fcharset162\fprq1 Courier New Baltic Tur;}{\f5292\fmodern\fcharset177\fprq1 Courier New Baltic (Hebrew);}{\f5293\fmodern\fcharset178\fprq1 Courier New Baltic (Arabic);}
{\f5294\fmodern\fcharset186\fprq1 Courier New Baltic Baltic;}{\f6615\fscript\fcharset238\fprq2 Mistral CE;}{\f6616\fscript\fcharset204\fprq2 Mistral Cyr;}{\f6618\fscript\fcharset161\fprq2 Mistral Greek;}{\f6619\fscript\fcharset162\fprq2 Mistral Tur;}
{\f6622\fscript\fcharset186\fprq2 Mistral Baltic;}{\f7023\froman\fcharset238\fprq2 MS Reference Serif CE;}{\f7024\froman\fcharset204\fprq2 MS Reference Serif Cyr;}{\f7026\froman\fcharset161\fprq2 MS Reference Serif Greek;}
{\f7027\froman\fcharset162\fprq2 MS Reference Serif Tur;}{\f7030\froman\fcharset186\fprq2 MS Reference Serif Baltic;}{\f7031\fswiss\fcharset238\fprq2 Verdana Ref CE;}{\f7032\fswiss\fcharset204\fprq2 Verdana Ref Cyr;}
{\f7034\fswiss\fcharset161\fprq2 Verdana Ref Greek;}{\f7035\fswiss\fcharset162\fprq2 Verdana Ref Tur;}{\f7038\fswiss\fcharset186\fprq2 Verdana Ref Baltic;}{\f7039\froman\fcharset238\fprq2 Georgia Ref CE;}{\f7040\froman\fcharset204\fprq2 Georgia Ref Cyr;}
{\f7042\froman\fcharset161\fprq2 Georgia Ref Greek;}{\f7043\froman\fcharset162\fprq2 Georgia Ref Tur;}{\f7046\froman\fcharset186\fprq2 Georgia Ref Baltic;}{\f7103\fswiss\fcharset238\fprq2 Segoe UI CE;}{\f7104\fswiss\fcharset204\fprq2 Segoe UI Cyr;}
{\f7106\fswiss\fcharset161\fprq2 Segoe UI Greek;}{\f7107\fswiss\fcharset162\fprq2 Segoe UI Tur;}{\f7109\fswiss\fcharset178\fprq2 Segoe UI (Arabic);}{\f7110\fswiss\fcharset186\fprq2 Segoe UI Baltic;}{\f7111\fswiss\fcharset238\fprq2 FranklinGotTDemCon CE;}
{\f7112\fswiss\fcharset204\fprq2 FranklinGotTDemCon Cyr;}{\f7114\fswiss\fcharset161\fprq2 FranklinGotTDemCon Greek;}{\f7115\fswiss\fcharset162\fprq2 FranklinGotTDemCon Tur;}{\f7118\fswiss\fcharset186\fprq2 FranklinGotTDemCon Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red153\green153\blue153;\red51\green153\blue102;}{\stylesheet{\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 
heading 1;}{\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{
\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{
\s4\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel3\adjustright\rin0\lin0\itap0 \b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 4;}{
\s5\ql \li0\ri0\sb240\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin0\itap0 \fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 5;}{
\s6\ql \li0\ri0\sb240\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel5\adjustright\rin0\lin0\itap0 \i\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 6;}{
\s7\ql \li0\ri0\sb240\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel6\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 7;}{
\s8\ql \li0\ri0\sb240\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel7\adjustright\rin0\lin0\itap0 \i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 8;}{
\s9\ql \li0\ri0\sb240\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel8\adjustright\rin0\lin0\itap0 \b\i\f1\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 footnote text;}{\*\cs16 \additive \f0\super \sbasedon10 footnote reference;}{
\s17\ql \li720\ri0\nowidctlpar\faauto\adjustright\rin0\lin720\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 Code;}{\s18\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \cbpat9 
\f27\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 Document Map;}{\s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1043\langfe1033\cgrid\langnp1043\langfenp1033 \sbasedon0 \snext19 Plain Text;}{
\s20\ql \li0\ri0\sa240\widctlpar\faauto\adjustright\rin0\lin0\itap0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext20 Section;}{\*\cs21 \additive \f0\ul\cf2 \sbasedon10 Hyperlink;}{
\s22\ql \li0\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 1;}{
\s23\ql \li200\ri0\sb120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin200\itap0 \b\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 2;}{
\s24\ql \li400\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin400\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 3;}{
\s25\ql \li600\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin600\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 4;}{
\s26\ql \li800\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin800\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 5;}{
\s27\ql \li1000\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1000\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 6;}{
\s28\ql \li1200\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1200\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 7;}{
\s29\ql \li1400\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1400\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 8;}{
\s30\ql \li1600\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1600\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd toc 9;}{\*\cs31 \additive \f0\ul\cf12 \sbasedon10 FollowedHyperlink;}{
\s32\qc \li0\ri0\sb240\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext32 Title;}{
\s33\qc \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext33 Subtitle;}{\s34\ql \li0\ri0\widctlpar
\tqc\tx4536\tqr\tx9072\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext34 header;}{\s35\ql \li0\ri0\widctlpar
\tqc\tx4536\tqr\tx9072\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext35 footer;}{\*\cs36 \additive \f0 \sbasedon10 page number;}{\s37\ql \li0\ri0\sa120\sl360\slmult1
\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext37 Body Text;}{\s38\ql \fi-360\li360\ri0\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }
\faauto\ls11\adjustright\rin0\lin360\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext38 \sautoupd List Bullet;}{\s39\ql \li720\ri720\sa120\widctlpar\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0 
\f2\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 \sbasedon0 \snext39 Code Listing;}{\s40\ql \li360\ri0\sa120\sl360\slmult1\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext40 Body Text 2;}}{\*\listtable{\list\listtemplateid-362271492\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid-119}{\list\listtemplateid-1734441242\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat4\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-720\li1440\jclisttab\tx1440 }{\listname ;}\listid107166021}{\list\listtemplateid68354049
\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li360\jclisttab\tx360 }
{\listname ;}\listid156653440}{\list\listtemplateid1944737318\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2
\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2160\jclisttab\tx2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360
\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li4320\jclisttab\tx4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc23\levelnfcn23
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6480\jclisttab\tx6480 }
{\listname ;}\listid241331705}{\list\listtemplateid1693582972\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat5\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1\fbias0 \fi-720\li1440\jclisttab\tx1440 }{\listname ;}\listid298150666}{\list\listtemplateid68354049\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid663700731}{\list\listtemplateid290347014\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat3\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listname ;}\listid956595244}{\list\listtemplateid1252801822
{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow1\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel\levelnfc255\levelnfcn255\leveljc0
\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0
\levelindent0{\leveltext\'00;}{\levelnumbers;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\f0\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel
\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2
\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext
\'00;}{\levelnumbers;}\f0\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\f0\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid1621105010}{\list\listtemplateid1668292118\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689
\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0
{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2160\jclisttab\tx2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li4320\jclisttab\tx4320 }{\listlevel\levelnfc23\levelnfcn23
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5040\jclisttab\tx5040 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5760\jclisttab\tx5760 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6480
\jclisttab\tx6480 }{\listname ;}\listid1789619211}}{\*\listoverridetable{\listoverride\listid-119\listoverridecount0\ls1}{\listoverride\listid-119\listoverridecount0\ls2}{\listoverride\listid-119\listoverridecount0\ls3}{\listoverride\listid-119
\listoverridecount0\ls4}{\listoverride\listid-119\listoverridecount0\ls5}{\listoverride\listid-119\listoverridecount0\ls6}{\listoverride\listid-119\listoverridecount0\ls7}{\listoverride\listid-119\listoverridecount0\ls8}{\listoverride\listid-119
\listoverridecount0\ls9}{\listoverride\listid-119\listoverridecount0\ls10}{\listoverride\listid298150666\listoverridecount0\ls11}{\listoverride\listid107166021\listoverridecount0\ls12}{\listoverride\listid956595244\listoverridecount0\ls13}
{\listoverride\listid663700731\listoverridecount0\ls14}{\listoverride\listid156653440\listoverridecount0\ls15}{\listoverride\listid1621105010\listoverridecount0\ls16}{\listoverride\listid1621105010\listoverridecount9{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls17}{\listoverride\listid1789619211\listoverridecount0\ls18}{\listoverride\listid241331705\listoverridecount0\ls19}
{\listoverride\listid-119\listoverridecount0\ls20}}{\*\revtbl {Unknown;}}{\info{\title #$K}{\author Overmars}{\operator John Hansen}{\creatim\yr2001\mo10\dy10\hr12\min1}{\revtim\yr2007\mo10\dy11\hr19\min21}{\printim\yr1998\mo12\dy21\hr15\min26}{\version321}{\edmins1099}
{\nofpages356}{\nofwords14929}{\nofchars85099}{\*\company Universiteit Utrecht}{\nofcharsws104507}{\vern8247}}\margl1417\margr1417\margt1417\margb1417 
\widowctrl\ftnbj\aenddoc\hyphhotz425\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot\htmautsp\nolnhtadjtbl \fet0{\*\ftnsep \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\chftnsep 
\par }}{\*\ftnsepc \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\chftnsepc 
\par }}{\*\ftncn \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }}{\*\aftnsep \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\chftnsep 
\par }}{\*\aftnsepc \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\chftnsepc 
\par }}\sectd \sbknone\linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_KEYWORDS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  Keywords}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 keywords;int;const;sub;task;__sensor;__type;__event_src;inline;void;__nolist;__res;__taskid}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  keywords;int;const;sub;task;__sensor;__type;__event_src;inline;void;__nolist;__res;__taskid}}}{\f1 
Identifiers are used for variable, task, and function names. The first character of an identifier must be an upper or lower case letter or the underscore ('_'). Re
maining characters may be letters, numbers, and underscores. A number of potential identifiers are reserved for use in the NQC language itself. These reserved words are called keywords and may not be used as identifiers. A complete list of keywords appear
s below:
\par 
\par }\pard \ql \li720\ri0\widctlpar\tx2520\tx4320\tx6480\faauto\adjustright\rin0\lin720\itap0 {\f2 __event_src\tab __res\tab __taskid\tab abs
\par __nolist\tab __sensor\tab __type\tab acquire
\par asm\tab do\tab int\tab sub
\par break\tab else\tab monitor\tab switch
\par case\tab false\tab repeat\tab task
\par catch\tab for\tab return\tab true
\par const\tab goto\tab sign\tab void
\par continue\tab if\tab start\tab while
\par default\tab inline\tab stop\tab 
\par }\pard \ql \li0\ri0\widctlpar\tx2520\tx4320\tx6480\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard\plain \s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\page }{\cs16\super #{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ASSIGNMENT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  assignment}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{
\f1  assignment}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  assignment}}}{Assignment
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1 Once declared, variables may be assigned the value of an expression:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\i\f2 variable}{\f2  }{\i\f2 assign_operator}{\f2  }{\i\f2 expression}{\f2 ;
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 There are nine different assignment operators. The most basic operator, '=', simply 
assigns the value of the expression to the variable. The other operators modify the variable's value in some other way as shown in the table below
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx1980\faauto\adjustright\rin0\lin720\itap0 {\b\f2\ul Operator}{\b\f2 \tab }{\b\f2\ul Action}{\b\f2 
\par }\pard \ql \li720\ri0\widctlpar\tx1980\faauto\adjustright\rin0\lin720\itap0 {\f2 =\tab Set variable to expression
\par +=\tab Add expression to variable
\par -=\tab Subtract expression from variable
\par *=\tab Multiple variable by expression
\par /=\tab Divide variable by expression
\par %=\tab Set variable to remainder after dividing by expression
\par &=\tab Bitwise AND expression into variable
\par |=\tab Bitwise OR expression into variable
\par ^=\tab Bitwise exclusive OR expression into variable
\par ||=\tab Set variable to absolute value of expression
\par +-=\tab Set variable to sign (-1,+1,0) of expression
\par >>=\tab Right shift variable by a constant amount
\par <<=\tab Left shift variable by a constant amount
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Some examples:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 x = 2; // set x to 2
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 y = 7; // set y to 7
\par x += y; // x is 9, y is still 7
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_IF}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  if statement}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  if;else}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  if;else}}}{\f1 The }{\f2 if}{\f1 
 statement evaluates a condition. If the condition is true it executes one statement (the consequence). An optional second statement (the alternative) is executed if the condition is false. The two syntaxes for an }{\f2 if}{\f1  statement is shown below.

\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 if}{\f2  (}{\i\f2 condition}{\f2 ) }{\i\f2 consequence}{\f2 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 if}{\f2  (}{\i\f2 condition}{\f2 ) }{\i\f2 consequence}{\f2  }{\b\f2 else}{\f2  }{\i\f2 alternative}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Note that the condition is enclosed in parentheses. Examples are shown below. Note how a compound statement is u
sed in the last example to allow two statements to be executed as the consequence of the condition.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 if}{\f2  (x == 1) y = 2;
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 if}{\f2  (x == 1) y = 3; }{\b\f2 else}{\f2  y = 4;
\par }{\b\f2 if}{\f2  (x == 1) \{y = 1; z = 2;\}
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_WHILE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  while statement}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  while}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  while}}}{\f1 The }{\f2 while}{\f1 
 statement is used to construct a conditional loop. The condition is evaluated, and if true the body of the loop is executed, then the condition is tested again. This process continues until the condition becomes false (or a break statement is executed). 
The syntax for a while loop appears below:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 while}{\f2  (}{\i\f2 condition}{\f2 ) }{\i\f2 body}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 It is very common to use a compound statement as the body of a loop:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2\lang1036\langfe1033\langnp1036 while}{\f2\lang1036\langfe1033\langnp1036  (x < 10)
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\lang1036\langfe1033\langnp1036 \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\lang1036\langfe1033\langnp1036 x = x+1;
\par y = y*2;
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DO}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  do}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  do}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  do}}}{\f1 A variant of the while loop is the do-while loop. Its syntax is:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 do}{\f2  }{\i\f2 body}{\f2  }{\b\f2 while}{\f2  (}{\i\f2 condition}{\f2 )
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The difference between a }{\f2 while}{\f1  loop and a }{\f2 do-while}{\f1  loop is that the }{\f2 do-while}{\f1  loop always executes the body at least once, whereas the }{\f2 
while}{\f1  loop may not execute it at all. 
\par \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FOR}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  for}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  for}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  for}
}}{\f1 Another kind of loop is the }{\f2 for}{\f1  loop:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 for}{\f2  (}{\i\f2 stmt1}{\f2 ; }{\i\f2 condition}{\f2 ; }{\i\f2 stmt2}{\f2 ) }{\i\f2 body}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 A }{\f2 for}{\f1  loop always executes stmt1, then it repeatedly checks the condition and while it remains true executes the body followed by stmt2. The }{\f2 for}{\f1 
 loop is equivalent to:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\i\f2 stmt1}{\f2 ;
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 while}{\f2  (}{\i\f2 condition}{\f2 )
\par \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\i\f2 body
\par stmt2}{\f2 ;
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_REPEAT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  repeat}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  repeat}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  repeat}}}{\f1 The }{\f2 repeat}{\f1  statement executes a loop a specified number of times:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 repeat}{\f2  (}{\i\f2 expression}{\f2 ) }{\i\f2 body}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The expression determines how many times the body will be executed. Note that it is only 
evaluated a single time, then the body is repeated that number of times. This is different from both the }{\f2 while}{\f1  and }{\f2 do-while}{\f1  loops which evaluate their condition each time through the loop.
\par \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SWITCH}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  switch, case, default}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  switch;case;default}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super K}{\f1  switch;case;default}}}{\f1 A }{\f2 switch}{\f1  statement can be used to execute one of several different blocks of code depending on the value of an expression. Each block of code is preceded by one or more }{\f2 case}{\f1 
 labels. Each }{\f2 case}{\f1  must be a constant and unique within the }{\f2 switch}{\f1  statement. The }{\f2 switch}{\f1  statement evaluates the expression then looks for a matching }{\f2 case}{\f1 
 label. It will then execute any statements following the matching }{\f2 case}{\f1  until either a }{\f2 break}{\f1  statement or the end of the }{\f2 switch}{\f1  is reached. A single default label
 may also be used - it will match any value not already appearing in a case label. Technically, a switch statement has the following syntax:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 switch}{\f2  (}{\i\f2 expression}{\f2 ) }{\i\f2 body}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
The case and default labels are not statements in themselves - they are labels that precede statements. Multiple labels can precede the same statement. These labels have the following syntax
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 case}{\f2  }{\i\f2 constant_expression}{\f2 :
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 default}{\f2 :
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 A typical switch statement might look like this:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 switch}{\f2 (x)
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 case}{\f2  1:
\par }\pard \ql \fi720\li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 {\f2 // do something when x is 1
\par }{\b\f2 break}{\f2 ;
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 case}{\f2  2:
\par }{\b\f2 case}{\f2  3:
\par }\pard \ql \fi720\li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 {\f2 // do something else when x is 2 or 3
\par }{\b\f2 break}{\f2 ;
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 default}{\f2 :
\par }\pard \ql \fi720\li1440\ri0\widctlpar\faauto\adjustright\rin0\lin1440\itap0 {\f2 // do this when x is not 1, 2, or 3
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 break}{\f2 ;
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\sb120\sa120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_GOTO}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  goto}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  goto}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  goto}}}{\f1  The }{\f2 goto}{\f1 
 statement forces a program to jump to the specified location. Statements in a program can be labeled by preceding them with an identifier and a colon. A }{\f2 goto}{\f1 
 statement then specifies the label which the program should jump to. For example, this is how an infinite loop that increments a variable could be implemented using }{\f2 goto}{\f1 :
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 my_loop:
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 x++;
\par }{\b\f2 goto}{\f2  my_loop;
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The }{\f2 goto}{\f1  statement should be used sparingly and cautiously. In almost every case, control structures such as }{\f2 if}{\f1 , }{\f2 while}{\f1 , and }{\f2 switch}{\f1 
 make a program much more readable and maintainable than using }{\f2 goto}{\f1 . Care should be taken to never use a }{\f2 goto}{\f1  to jump into or out of a }{\f2 monitor}{\f1  or }{\f2 acquire}{\f1  statement. This is because }{\f2 monitor}{\f1  and }{
\f2 acquire}{\f1  have special code that normally gets executed upon entry and exit, and a }{\f2 goto}{\f1  will bypass that code \endash  probably resulting in undesirable behavior.
\par \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_UNTIL}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  until}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  until}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 until}}}{\f1 NQC also defines the }{\f2 until}{\f1  macro which provides a convenient alternative to the }{\f2 while}{\f1  loop. The actual definition of until is:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 #define }{\b\f2 until}{\f2 (c) }{\b\f2 while}{\f2  (!(c))
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 In other words, }{\f2 until}{\f1  will continue looping until the condition becomes true. It is most often used in conjunction with an empty body statement:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 until}{\f2 (SENSOR_1 == 1); // wait for sensor to be pressed
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{
\f1  IDH_API_ACQUIRE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  acquire}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  acquire;catch; ACQUIRE_}{\f1\cf11 OUT_A}{\f1 ; ACQUIRE_}{\f1\cf11 OUT_B}{\f1 ; ACQUIRE_}{\f1\cf11 OUT_C}{\f1 
; ACQUIRE_SOUND; ACQUIRE_USER_1; ACQUIRE_USER_2; ACQUIRE_USER_3; ACQUIRE_USER_4; ACQUIRE_LED}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  acquire;catch; ACQUIRE_}{\f1\cf11 OUT_A}{\f1 ; ACQUIRE_}{\f1\cf11 OUT_B}{\f1 ; ACQUIRE_}{\f1\cf11 OUT_C}{\f1 ; ACQUIRE_SOUND; ACQUIRE_USER_1; ACQUIRE_USER_2; ACQUIRE_USER_3; ACQUIRE_USER_4; ACQUIRE_LED}}}{\f1 
The Scout, RCX2, Swan, and Spybotics support access control and event monitoring. Access control allows a task to request ownership of one or more resources. In NQC, access control is provided by the acquire statement, which has two forms:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 acquire}{\f2  ( }{\i\f2 resources}{\f2  ) }{\i\f2 body}{\f2 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 acquire}{\f2  ( }{\i\f2 resources}{\f2  ) }{\i\f2 body}{\f2  }{\b\f2 catch}{\f2  }{\i\f2 handler}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 where }{\i\f1 resources}{\f1  is a constant that specifies the resources to be acquired and }{\i\f1 body}{\f1  and }{\i\f1 handler}{\f1 
 are statements. The NQC API defines constants for individual resources which may be added together to request multiple resources at the same time. The behavior of the acquire statement is as follows: Ownership of the specified resources will be requested
.
 If another task of higher priority already owns the resources, then the request will fail and execution will jump to the handler (if present). Otherwise, the request will succeed, and the body will begin to be executed. While executing the body, if anoth
e
r task of equal or higher priority requests any of the owned resources, then the original task will lose ownership. When ownership is lost, execution will jump to the handler (if present). Once the body has completed, the resources will be returned back t
o
 the system (so that lower priority tasks may acquire them), and execution will continue with the statement following the acquire statement. If a handler is not specified, then in both the case of a failed request, or a subsequent loss of ownership, contr
ol will pass to the statement following the acquire statement. For example, the following code acquires a resource for 10 seconds, playing a sound if it cannot complete successfully:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 acquire}{\f2 (}{\f2\cf11 ACQUIRE_OUT_A}{\f2 )
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Wait}{\f2 (1000);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }{\b\f2 catch
\par }{\f2 \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 PlaySound}{\f2 (}{\f2\cf11 SOUND_UP}{\f2 );
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The following constants may be used to specify resources in an acquire statement. Note that the user defined resources are only available on the RCX2 and Swan.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Constant}{\b\f1 \tab }{\b\f1\ul Resource}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx3600\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 ACQUIRE_OUT_A}{\f1 ,\tab outputs
\par }{\f1\cf11 ACQUIRE_OUT_B}{\f1 ,
\par }{\f1\cf11 ACQUIRE_OUT_C
\par ACQUIRE_SOUND}{\f1 \tab sound
\par }{\f1\cf11 ACQUIRE_LED}{\f1 \tab LEDs (Spybotics only)
\par }{\f1\cf11 ACQUIRE_USER_1}{\f1 ,\tab user defined - RCX2 and Swan only
\par }{\f1\cf11\lang1036\langfe1033\langnp1036 ACQUIRE_USER_2}{\f1\lang1036\langfe1033\langnp1036 ,
\par }{\f1\cf11\lang1036\langfe1033\langnp1036 ACQUIRE_USER_3}{\f1\lang1036\langfe1033\langnp1036 ,
\par }{\f1\cf11\lang1036\langfe1033\langnp1036 ACQUIRE_USER_4
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MONITOR}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  monitor}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  monitor; EVENT_1_PRESSED; EVENT_1_RELEASED; EVENT_2_PRESSED; EVENT_2_RELEASED; EVENT_LIGHT_HIGH; 
EVENT_LIGHT_NORMAL; EVENT_LIGHT_LOW; EVENT_LIGHT_CLICK; EVENT_LIGHT_DOUBLECLICK; EVENT_COUNTER_0; EVENT_COUNTER_1; EVENT_TIMER_0; EVENT_TIMER_1; EVENT_TIMER_2; EVENT_MESSAGE}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  monitor; EVENT_1_PRESSED; EVENT_1_RELEASED; EVENT_2_PRESSED; EVENT_2_RELEASED; 
EVENT_LIGHT_HIGH; EVENT_LIGHT_NORMAL; EVENT_LIGHT_LOW; EVENT_LIGHT_CLICK; EVENT_LIGHT_DOUBLECLICK; EVENT_COUNTER_0; EVENT_COUNTER_1; EVENT_TIMER_0; EVENT_TIMER_1; EVENT_TIMER_2; EVENT_MESSAGE}}}{\f1 
Event monitoring is implemented with the monitor statement, which has a syntax very similar to acquire:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 monitor}{\f2  ( }{\i\f2 events}{\f2  ) }{\i\f2 body}{\f2 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 monitor}{\f2  ( }{\i\f2 events}{\f2  ) }{\i\f2 body}{\f2  }{\i\f2 handler_list}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Where }{\i\f1 handler_list}{\f1  is one or more handlers of the form
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 catch}{\f2  ( }{\i\f2 catch_events}{\f2  ) }{\i\f2 handler}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The last handler in a handler list can omit the event specification:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 catch}{\f2  }{\i\f2 handler}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\i\f1 Events}{\f1  is a constant that determines which events should be monitored. For the Scout, events are predefined, so there are constants such as }{\f1\cf11 EVENT_1_PRESSED}{
\f1  which can be used to specify events. With RCX2, Swan, and Spybotics, the meaning of ea
ch event is configured by the programmer. There are 16 events (numbers 0 to 15). In order to specify an event in a monitor statement, the event number must be converted to an event mask using the EVENT_MASK() macro. The Scout event constants or event mask
s may be added together to specify multiple events. Multiple masks can be combined using bitwise OR.
\par The monitor statement will execute the body while monitoring the specified events. If any of the events occur, execution will jump to the first handler for 
that event (a handler without an event specification handles any event). If no event handler exists for the event, then control will continue at the statement following the monitor statement. The following example waits for 10 seconds while monitoring eve
nts 2, 3, and 4 for RCX2 or Swan:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 monitor}{\f2 ( EVENT_MASK(2) | EVENT_MASK(3) | EVENT_MASK(4) )
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Wait}{\f2 (1000);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }{\b\f2 catch}{\f2 ( EVENT_MASK(4) )
\par \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 PlaySound}{\f2 (}{\f2\cf11 SOUND_DOWN}{\f2 ); // event 4 happened
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }{\b\f2 catch
\par }{\f2 \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 PlaySound}{\f2 (}{\f2\cf11 SOUND_UP}{\f2 ) ; // event 2 or 3 happened
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Note that the }{\f2 acquire}{\f1  and }{\f2 monitor}{\f1 
 statements are only supported for targets that implement access control and event monitoring - specifically the Scout, RCX2, Swan, and Spybotics.
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The Scout provides 15 events, each of which has a predefined meaning as shown in the table below.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3960\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Event Name}{\b\f1 \tab }{\b\f1\ul Condition}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx3960\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 EVENT_1_PRESSED}{\f1 \tab sensor 1 pressed
\par }{\f1\cf11 EVENT_1_RELEASED}{\f1 \tab sensor 1 released
\par }{\f1\cf11 EVENT_2_PRESSED}{\f1 \tab sensor 2 pressed
\par }{\f1\cf11 EVENT_2_RELEASED}{\f1 \tab sensor 2 released
\par }{\f1\cf11 EVENT_LIGHT_HIGH}{\f1 \tab light sensor "high"
\par }{\f1\cf11 EVENT_LIGHT_NORMAL}{\f1 \tab light sensor "normal"
\par }{\f1\cf11 EVENT_LIGHT_LOW}{\f1 \tab light sensor "low"
\par }{\f1\cf11 EVENT_LIGHT_CLICK}{\f1 \tab low to high to low
\par }{\f1\cf11 EVENT_LIGHT_DOUBLECLICK}{\f1 \tab two clicks
\par }{\f1\cf11 EVENT_COUNTER_0}{\f1 \tab counter 0 over limit
\par }{\f1\cf11 EVENT_COUNTER_1}{\f1 \tab counter 1 over limit
\par }{\f1\cf11 EVENT_TIMER_0}{\f1 \tab timer 0 over limit
\par }{\f1\cf11 EVENT_TIMER_1}{\f1 \tab timer 1 over limit
\par }{\f1\cf11 EVENT_TIMER_2}{\f1 \tab timer 2 over limit
\par }{\f1\cf11 EVENT_MESSAGE}{\f1 \tab new message received
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The first four events are triggered by touch sensors connected to the two sensor ports. }{\f1\cf11 EVENT_LIGHT_HIGH}{\f1 , }{\f1\cf11 EVENT_LIGHT_NORMAL}{\f1 , and }{
\f1\cf11 EVENT_LIGHT_LOW}{\f1  are triggered by the light sensor's value changing from one range to another. The ranges are defined by }{\f1\cf2 SetSensorUpperLimit}{\f1 , }{\f1\cf2 SetSensorLowerLimit}{\f1 , and }{\f1\cf2 SetSensorHysteresis}{\f1 
 which were described previously.
\par }{\f1\cf11 EVENT_LIGHT_CLICK}{\f1  and }{\f1\cf11 EVENT_LIGHT_DOUBLECLICK}{\f1  are also triggered by the light sensor. A click is a transition from low to high and back to low within a certain amount of time, called the click time.
\par Each counter has a counter limit. When the counter exceeds this limit, }{\f1\cf11 EVENT_COUNTER_0}{\f1  or }{\f1\cf11 EVENT_COUNTER_1}{\f1  is triggered. Timers also have a limit, and they generate }{\f1\cf11 EVENT_TIMER_0}{\f1 , }{\f1\cf11 EVENT_TIMER_1}
{\f1 , and }{\f1\cf11 EVENT_TIMER_2}{\f1 .
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\cf11 EVENT_MESSAGE}{\f1  is triggered whenever a new IR message is received.\page  }{\cs16\f1\super #{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_STARTSTOP}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  start, stop}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{
\f1  start;stop}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  start;stop}}}{\f1 
Tasks may be started or stopped with the following statements:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 start}{\f2  task_name;
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 stop}{\f2  task_name;
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_BREAKCONTINUE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  break, continue}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  break;continue}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  break;continue}}}{\f1 Within loops (such as a }{\f2 while}{\f1  loop) the }{\f2 break}{\f1  statement can be used to exit the loop and the }{\f2 continue}{\f1 
 statement can be used to skip to the top of the next iteration of the loop. The }{\f2 break}{\f1  statement can also be used to exit a }{\f2 switch}{\f1  statement.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 break}{\f2 ;
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 continue}{\f2 ;
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_RETURN}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  return}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  return}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  return}}}{\f1 It is possible to cause a function to return before it reaches the end of its code using the }{\f2 return}{\f1  statement.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 return}{\f2 ;
\par }\pard \ql \li360\ri0\sb120\widctlpar\tx1440\tx4140\tx5580\tx7380\faauto\adjustright\rin0\lin360\itap0 {\b\f1 \page }{\cs16\b\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_OPERATORS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  operators}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  operators;abs;sign;<<;>>;&&;||;<=;>=;++;--;?:;==;!=}}K
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  operators;abs;sign;<<;>>;&&;||;<=;>=;++;--;?:;==;!=}}}{\b\f1\ul Operator}{\b\f1 \tab }{
\b\f1\ul Description}{\b\f1 \tab }{\b\f1\ul Associativity}{\b\f1 \tab }{\b\f1\ul Restriction}{\b\f1 \tab }{\b\f1\ul Example}{\b\f1 
\par }\pard \ql \li360\ri0\widctlpar\tx1440\tx4140\tx5580\tx7380\faauto\adjustright\rin0\lin360\itap0 {\f1\cf2 abs}{\f1 ()\tab Absolute value\tab n/a\tab \tab abs(x)
\par }{\f1\cf2 sign}{\f1 ()\tab Sign of operand\tab n/a\tab \tab sign(x)
\par ++, --\tab Increment, decrement\tab left\tab variables only\tab x++ or ++x
\par -\tab Unary minus\tab right\tab \tab -x
\par ~\tab Bitwise negation (unary)\tab right\tab constant only\tab ~123
\par !\tab Logical negation\tab right\tab \tab !x
\par *, /, %\tab Multiplication, division,modulo\tab left\tab \tab x * y
\par +, -\tab Addition, subtraction\tab left\tab \tab x + y
\par <<, >>\tab Left and right shift\tab left\tab shift is constant only\tab 123 << 4
\par <, >,<=, >=\tab relational operators\tab left\tab \tab x < y
\par ==, !=\tab equal to, not equal to\tab left\tab \tab x == 1
\par &\tab Bitwise AND\tab left\tab \tab x & y
\par ^\tab Bitwise XOR\tab left\tab \tab 123 ^ 4
\par |\tab Bitwise OR\tab left\tab \tab x | y
\par &&\tab Logical AND\tab left\tab \tab x && y
\par ||\tab Logical OR\tab left\tab \tab x || y
\par ? :\tab conditional value\tab n/a\tab \tab x==1 ? y : z
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \fi-1800\li2520\ri0\sb120\widctlpar\tx2520\faauto\adjustright\rin0\lin2520\itap0 {\b\f1 \page }{\cs16\b\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EXPRESSIONS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  expressions}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  expressions;true;false}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  expressions;true;false}}}{\b\f1\ul Condition}{\b\f1 \tab }{\b\f1\ul Meaning}{\b\f1 
\par }\pard \ql \fi-1800\li2520\ri0\widctlpar\tx2520\faauto\adjustright\rin0\lin2520\itap0 {\b\f1 true}{\f1 \tab always true
\par }{\b\f1 false}{\f1 \tab always false
\par expr\tab true if expr is not equal to 0
\par expr1 == expr2\tab true if expr1 equals expr2
\par expr1 != expr2\tab true if expr1 is not equal to expr2
\par expr1 < expr2\tab true if one expr1 is less than expr2
\par expr1 <= expr2\tab true if expr1 is less than or equal to expr2
\par expr1 > expr2\tab true if expr1 is greater than expr2
\par expr1 >= expr2\tab true if expr1 is greater than or equal to expr2
\par ! condition\tab logical negation of a condition - true if condition is false
\par cond1 && cond2\tab logical AND of two conditions (true if and only if both conditions are true)
\par cond1 || cond2\tab logical OR of two conditions (true if and only if at least one of the conditions are true)
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{
\f1  IDH_API_INCLUDE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  #include}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  include;#include}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  #include}}}{\f1 The #incl
ude command works as expected, with the caveat that the filename must be enclosed in double quotes. There is no notion of a system include path, so enclosing a filename in angle brackets is forbidden.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #include "foo.nqh"}{\f2  // ok
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #include <foo.nqh>}{\f2  // error!
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_DEFINE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  #define}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  define;#define;undef;#undef}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  #define;#undef}}}{\f1 
The #define command is used for simple macro substitution. Redefinition of a macro is an error (unlike in C where it is a warning). Macros are normally terminated by the end of the line, but the newline may be escaped with the backslash ('\\
') to allow multiline macros:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #define foo(x) do \{ bar(x); \\
\par }\pard \ql \fi720\li2160\ri0\widctlpar\faauto\adjustright\rin0\lin2160\itap0 {\f2\cf12   baz(x); \} while( false)
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The }{\f1\cf12 #undef}{\f1  directive may be used to remove a macro\rquote s definition.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{
\f1  IDH_API_CONDITIONALCOMP}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  #if, #ifdef, #ifndef, #else, #elif, #endif}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  #if;ifdef;#ifdef;ifndef;#ifndef;#else;elif;#elif;endif;#endif;defined}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  #if;#ifdef;#ifndef;#else;#elif;#endif;defined}}}{\f1 
Conditional compilation works similar to the C preprocessor. The following preprocessor directives may be used:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #if }{\i\f2\cf12 condition}{\f2\cf12 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #ifdef }{\i\f2\cf12 symbol}{\f2\cf12 
\par #ifndef }{\i\f2\cf12 symbol}{\f2\cf12 
\par #else
\par #elif }{\i\f2\cf12 condition}{\f2\cf12 
\par #endif}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Conditions in }{\f2 #if}{\f1  directives use the same operators and precedence as in C. The }{\f2 defined()}{\f1  operator is supported.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\cs16\f1\fs24\super \page #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_NOINITINIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  noinit, init}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  noinit;init;pragma}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  noinit;init;#pragma}}}{\f1 The compiler will insert a call to a special initialization function, }{\f2 _init}{\f1 
, at the start of a program. This default function is part of the standard API and sets all three outputs to full power in the forward direction (but still turned off). The initialization function can be disabled using the }{\f2 #pragma noinit}{\f1 
 directive:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #pragma noinit}{\f2  // don't do any program initialization
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The default initialization function can be replaced with a different function using the }{\f2 #pragma init}{\f1  directive.}{\f2 
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #pragma init }{\i\f2\cf12 function}{\f2  // use custom initialization
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\cs16\f1\fs24\super \page #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_RESERVE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  reserve}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  reserve;pragma}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  reserve;#pragma}}}{\f1 
The NQC compiler automatically assigns variables to storage locations. However, sometimes it is necessary to prevent the compiler from using certain storage locations. This can be done with the }{\f2 #pragma reserve}{\f1  directive:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #pragma reserve }{\i\f2\cf12 start}{\f2\cf12 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #pragma reserve }{\i\f2\cf12 start}{\f2\cf12  }{\i\f2\cf12 end}{\f2\cf12 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 This directive forces the compiler to ignore one or more storage locations during varia
ble assignment. Start and end must be numbers that refer to valid storage locations. If only a start is provided, then that single location is reserved. If start and end are both specified, then the range of locations from start to end (inclusive) are res
e
rved. The most common use of this directive is to reserve locations 0, 1, and/or 2 when using counters for RCX2, Swan, and Spybotics. This is because the RCX2, Swan, and Spybotics counters are overlapped with storage locations 0, 1, and 2. For example, if
 all three counters were going to be used:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #pragma reserve 0 2
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SENSOR_1}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SENSOR_1, SENSOR_2, SENSOR_3}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  SENSOR_1;SENSOR_2;SENSOR_3}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  SENSOR_1;SENSOR_2;SENSOR_3}}}{\f1 
There are three sensors, which internally are numbered 0, 1, and 2. This is potentially confusing since they are externally labeled as sensors 1, 2, and 3. To help mitigate this confusion, the sensor names }{\f2 SENSOR_1}{\f1 , }{\f2 SENSOR_2}{\f1 , and }
{\f2 SENSOR_3}{\f1  have been defined. These sensor names may be used in any function that requires a sensor as an argument. Furthermore, the names may also be used whenever a program wishes to read the current value of the sensor:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf11 SENSOR_1}{\f2 ; // read sensor and store value in x
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Spybotics uses built-in sensors instead of externally connected ones. The touch sensor on the front of the Spybotics brick is }{\f2 SENSOR_1}{\f1 
. It is normally configured in percentage mode, so it has a value of 0 when not pressed, and a value of 100 when pressed. 
\par }{\f2 SENSOR_2}{\f1  is the light sensor (the connector on the back of the brick that is used to communicate with a computer). It is normally configured in percentage mode, where higher numbers indicate brighter light.}{\b\i\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SETSENSOR}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SetSensor}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  SetSensor; SENSOR_TOUCH; SENSOR_LIGHT;SENSOR_ROTATION;SENSOR_CELSIUS;SENSOR_FAHRENHEIT;SENSOR_PULSE;SENSOR_EDGE}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031 
 SetSensor; SENSOR_TOUCH; SENSOR_LIGHT;SENSOR_ROTATION;SENSOR_CELSIUS;SENSOR_FAHRENHEIT;SENSOR_PULSE;SENSOR_EDGE}}}{\b\f1\fs24 SetSensor(sensor, configuration)\tab Function \endash  RCX
\par }{\f1 Set the type and mode of the given sensor to the specified configuration, which must be a special constant containing both type and mode information.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensor}{\f2 (}{\f2\cf11 SENSOR_1}{\f2 , }{\f2\cf11 SENSOR_TOUCH}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 When using the RCX or Swan, it is common to set both the type 
and mode at the same time. The SetSensor function makes this process a little easier by providing a single function to call and a set of standard type/mode combinations.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3060\tx6120\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Sensor Configuration}{\b\f1 \tab }{\b\f1\ul Type}{\b\f1 \tab }{\b\f1\ul Mode
\par }\pard \ql \li720\ri0\widctlpar\tx3060\tx6120\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 SENSOR_TOUCH\tab SENSOR_TYPE_TOUCH\tab SENSOR_MODE_BOOL
\par SENSOR_LIGHT\tab SENSOR_TYPE_LIGHT\tab SENSOR_MODE_PERCENT
\par SENSOR_ROTATION\tab SENSOR_TYPE_ROTATION\tab SENSOR_MODE_ROTATION
\par SENSOR_CELSIUS\tab SENSOR_TYPE_TEMPERATURE\tab SENSOR_MODE_CELSIUS
\par }{\f1\cf11\lang1031\langfe1033\langnp1031 SENSOR_FAHRENHEIT\tab SENSOR_TYPE_TEMPERATURE\tab SENSOR_MODE_FAHRENHEIT
\par }{\f1\cf11 SENSOR_PULSE\tab SENSOR_TYPE_TOUCH\tab SENSOR_MODE_PULSE
\par SENSOR_EDGE\tab SENSOR_TYPE_TOUCH\tab SENSOR_MODE_EDGE
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETSENSORTYPE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSensorType}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SetSensorType; SENSOR_TYPE_NONE; SENSOR_TYPE_TOUCH; SENSOR_TYPE_TEMPERATURE; SENSOR_TYPE_LIGHT; SENSOR_TYPE_ROTATION; SENSOR_TYPE_ACTIVE_RAW}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSensorType; SENSOR_TYPE_NONE; SENSOR_TYPE_TOUCH; SENSOR_TYPE_TEMPERATURE; SENSOR_TYPE_LIGHT; SENSOR_TYPE_ROTATION; }}}{\b\f1\fs24 SetSensorType(sensor, type)\tab Function 
\endash  RCX
\par }{\f1 Set a sensor's type, which must be one of the predefined sensor type constants.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorType}{\f2 (}{\f2\cf11 SENSOR_1}{\f2 , }{\f2\cf11 SENSOR_TYPE_TOUCH}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
There are four sensor types, each corresponding to a specific LEGO sensor. A fifth type (SENSOR_TYPE_NONE) can be used for reading the raw values of generic passive sensors. In general, a program should configure the type to 
match the actual sensor. If a sensor port is configured as the wrong type, the brick may not be able to read it accurately.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx4320\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Sensor Type}{\b\f1 \tab }{\b\f1\ul Meaning}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx4320\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 SENSOR_TYPE_NONE}{\f1 \tab generic passive sensor
\par }{\f1\cf11 SENSOR_TYPE_TOUCH}{\f1 \tab a touch sensor
\par }{\f1\cf11 SENSOR_TYPE_TEMPERATURE}{\f1 \tab a temperature sensor
\par }{\f1\cf11 SENSOR_TYPE_LIGHT}{\f1 \tab a light sensor
\par }{\f1\cf11 SENSOR_TYPE_ROTATION}{\f1 \tab a rotation sensor
\par }{\f1\cf11 SENSOR_TYPE_ACTIVE_RAW}{\f1 \tab an active sensor with raw output (Swan only)
\par 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SETSENSORMODE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SetSensorMode}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SetSensorMode; SENSOR_MODE_RAW;  SENSOR_MODE_BOOL; SENSOR_MODE_
EDGE; SENSOR_MODE_PULSE; SENSOR_MODE_PERCENT; SENSOR_MODE_FAHRENHEIT; SENSOR_MODE_CELSIUS; SENSOR_MODE_ROTATION}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SetSensorMode; SENSOR_MODE_RAW;  SENSOR_MODE_BOOL; SENSOR_MODE_EDGE; SENSOR_MODE_PULSE; SENSOR_MODE_PERCENT; SENSOR_MODE_FAHRENHEIT; SENSOR_M
ODE_CELSIUS; SENSOR_MODE_ROTATION}}}{\b\f1\fs24 SetSensorMode(sensor, mode)\tab Function - RCX, CM, Spy
\par }{\f1 Set a sensor's mode, which should be one of the predefined sensor mode constants. A slope parameter for boolean conversion, if desired, may be added to the mode (RCX and Swan only).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorMode}{\f2 (}{\f2\cf11 SENSOR_1}{\f2 , }{\f2\cf11 SENSOR_MODE_RAW}{\f2 ); // raw mode
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorMode}{\f2 (}{\f2\cf11 SENSOR_1}{\f2 , }{\f2\cf11 SENSOR_MODE_RAW}{\f2  + 10) ; // slope 10
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The RCX, Swan, CyberMaster, and Spybotics allow a sensor to be configured in different modes. The sensor mode determines how a sen
sor's raw value is processed. Some modes only make sense for certain types of sensors, for example SENSOR_MODE_ROTATION is useful only with rotation sensors. The sensor mode can be set by calling SetSensorMode. The possible modes are shown below. Note tha
t since CyberMaster does not support temperature or rotation sensors, the last three modes are restricted to the RCX and Swan only. Spybotics is even more restrictive, allowing only raw, boolean, and percentage modes.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx4320\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Sensor Mode}{\b\f1 \tab }{\b\f1\ul Meaning}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx4320\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 SENSOR_MODE_RAW}{\f1 \tab raw value from 0 to 1023
\par }{\f1\cf11 SENSOR_MODE_BOOL}{\f1 \tab boolean value (0 or 1)
\par }{\f1\cf11 SENSOR_MODE_EDGE}{\f1 \tab counts number of boolean transitions
\par }{\f1\cf11 SENSOR_MODE_PULSE}{\f1 \tab counts number of boolean periods
\par }{\f1\cf11 SENSOR_MODE_PERCENT}{\f1 \tab value from 0 to 100
\par }{\f1\cf11 SENSOR_MODE_FAHRENHEIT}{\f1 \tab degrees F - RCX and Swan only
\par }{\f1\cf11 SENSOR_MODE_CELSIUS}{\f1 \tab degrees C - RCX and Swan only
\par }{\f1\cf11 SENSOR_MODE_ROTATION}{\f1 \tab rotation (16 ticks per revolution) - RCX and Swan only
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The RCX and Swan provide a boolean conversion for all sensors - not just touch sensors. This boolean conversion is normally
 based on preset thresholds for the raw value. A "low" value (less than 460) is a boolean value of 1. A high value (greater than 562) is a boolean value of 0. This conversion can be modified: a slope value between 0 and 31 may be added to a sensor's mode 
w
hen calling SetSensorMode. If the sensor's value changes more than the slope value during a certain time (3ms), then the sensor's boolean state will change. This allows the boolean state to reflect rapid changes in the raw value. A rapid increase will res
ult in a boolean value of 0, a rapid decrease is a boolean value of 1. Even when a sensor is configured for some other mode (i.e. SENSOR_MODE_PERCENT), the boolean conversion will still be carried out.}{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLEARSENSOR}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ClearSensor}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearSensor}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  ClearSensor}}}{\b\f1\fs24 ClearSensor(sensor)\tab Function - All
\par }{\f1 Clear the value of a sensor - only affects sensors that are configured to measure a cumulative quantity such as rotation or a pulse count.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearSensor}{\f2 (}{\f2\cf11 SENSOR_1}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\cs16\f1\fs24\super \page #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SENSORVALUE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SensorValue}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SensorValue}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SensorValue}}}{\b\f1\fs24 SensorValue(n)\tab 
Value - All
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Returns the processed sensor reading for sensor n, where n is 0, 1, or 2. This is the same value that is returned by the sensor names (e.g. SENSOR_1).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorValue}{\f2 (0); // read sensor 1
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SENSORTYPE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SensorType}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SensorType}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SensorType}}}{\b\f1\fs24 SensorType(n)\tab Value - All
\par }{\f1 Returns the configured type of sensor n, which must be 0, 1, or 2. Only the RCX and Swan have configurable sensors types, other targets will always return the pre-configured type of the sensor.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorType}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SENSORMODE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SensorMode}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SensorMode}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SensorMode}}}{\b\f1\fs24 SensorMode(n)\tab Value - RCX, CM, Spy
\par }{\f1 Returns the current sensor mode for sensor n, which must be 0, 1, or 2.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorMode}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SENSORVALUEBOOL}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SensorValueBool}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SensorValueBool}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SensorValueBool}}}{\b\f1\fs24 SensorValueBool(n)\tab Value \endash  RCX
\par }{\f1 Returns the boolean value of sensor n, which must be 0, 1, or 2. Boolean conversion is either done based on preset cutoffs, or a slope parameter specified by calling SetSensorMode.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorValueBool}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SENSORVALUERAW}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SensorValueRaw}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A
}{\f1  SensorValueRaw}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SensorValueRaw}}}{\b\f1\fs24 SensorValueRaw(n) \tab 
Value - RCX, Scout, Spy
\par }{\f1 Returns the raw value of sensor n, which must be 0, 1, or 2. Raw values may range from 0 to 1023 (RCX, Swan, Spy) or 0 to 255 (Scout).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorValueRaw}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\cs16\f1\fs24\super \page #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SETSENSORLOWERLIMIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{
\f1\lang1031\langfe1033\langnp1031  SetSensorLowerLimit}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{
\f1\lang1031\langfe1033\langnp1031  SetSensorLowerLimit}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{
\f1\lang1031\langfe1033\langnp1031  SetSensorLowerLimit}}}{\b\f1\fs24 SetSensorLowerLimit(value)\tab Function - Scout
\par }{\f1 Set the light sensor's lower limit. Value may be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorLowerLimit}{\f2 (100);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SETSENSORUPPERLIMIT}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SetSensorUpperLimit}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  SetSensorUpperLimit}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  SetSensorUpperLimit}}}{\b\f1\fs24 
SetSensorUpperLimit(value)\tab Function - Scout
\par }{\f1 Set the light sensor's upper limit. Value may be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorUpperLimit}{\f2 (900);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SETSENSORHYSTERESIS}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SetSensorHysteresis}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSensorHysteresis}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSensorHysteresis}}}{\b\f1\fs24 SetSensorHysteresis(value)\tab Function - Scout
\par }{\f1 Set the light sensor's hysteresis. Value may be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorHysteresis}{\f2 (20);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CALIBRATESENSOR}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  CalibrateSensor}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CalibrateSensor}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CalibrateSensor}}}{\b\f1\fs24 CalibrateSensor()\tab Function - Scout
\par }{\f1 Reads the current value of the light sensor, then sets the upper and lower limits to 12.5% above and below the current reading, and sets the hysteresis to 3.12% of the reading.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 CalibrateSensor}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SETOUTPUT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetOutput}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetOutput;}{\f1\cf11 OUT_OFF}{\f1 ;}{\f1\cf11 OUT_ON}{\f1 ;}{\f1\cf11 OUT_FLOAT}{\f1 ;}{\f1\cf11 OUT_A}{\f1 ;}{
\f1\cf11 OUT_B}{\f1 ;}{\f1\cf11 OUT_C;OUT_AB;OUT_AC;OUT_BC;OUT_ABC;OUT_D;OUT_E;OUT_F}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 SetOutput;}{\f1\cf11 OUT_OFF}{\f1 ;}{\f1\cf11 OUT_ON}{\f1 ;}{\f1\cf11 OUT_FLOAT}{\f1 ;}{\f1\cf11 OUT_A}{\f1 ;}{\f1\cf11 OUT_B}{\f1 ;}{\f1\cf11 OUT_C;OUT_AB;OUT_AC;OUT_BC;OUT_ABC;OUT_D;OUT_E;OUT_F}}}{\b\f1\fs24 SetOutput(outputs, mode)\tab Function - All

\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the outputs to the specified mode. The outputs parameter is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetOutput}{\f2 (}{\f2\cf11 OUT_A}{\f2  + }{\f2\cf11 OUT_B}{\f2 , }{\f2\cf11 OUT_ON}{\f2 ); // turn A and B on
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 All of the functions dealing with outputs take a set of outputs as their first argument. This set must be a constant. The names }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 
, and }{\f1\cf11 OUT_C}{\f1  are used to identify the three outputs. Multiple outputs can be combined by adding individual outputs together. For example, use }{\f1\cf11 OUT_A}{\f1 +}{\f1\cf11 OUT_B}{\f1 
 to specify outputs A and B together. The set of outputs must always be a compile time constant (it cannot be a variable).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Output Constant}{\b\f1 \tab }{\b\f1\ul Meaning}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 OUT_A}{\f1 \tab output A
\par }{\f1\cf11 OUT_B}{\f1 \tab output B
\par }{\f1\cf11 OUT_C}{\f1 \tab output C
\par }{\f1\cf11 OUT_AB}{\f1 \tab OUT_A + OUT_B
\par }{\f1\cf11 OUT_AC}{\f1 \tab OUT_A + OUT_C
\par }{\f1\cf11 OUT_BC}{\f1 \tab OUT_B + OUT_C
\par }{\f1\cf11 OUT_ABC}{\f1 \tab OUT_A + OUT_B + OUT_C
\par }{\f1\cf11 OUT_D}{\f1 \tab virtual output D (Swan only)
\par }{\f1\cf11 OUT_E}{\f1 \tab virtual output E (Swan only)
\par }{\f1\cf11 OUT_F}{\f1 \tab virtual output F (Swan only)
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The mode parameter should be one of the following constants:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Output Mode}{\b\f1 \tab }{\b\f1\ul Meaning}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 OUT_OFF}{\f1 \tab output is off (motor is prevented from turning)
\par }{\f1\cf11 OUT_ON}{\f1 \tab output is on (motor will be powered)
\par }{\f1\cf11 OUT_FLOAT}{\f1 \tab motor can "coast"
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Spybotics has two built-in motors. }{\f2 OUT_A}{\f6\fs22  }{\f1 refers to the right motor, and }{\f2 OUT_B}{\f6\fs22  }{\f1 is for the left motor. }{\f2 OUT_C}{\f1\fs22  }{\f1 
will send VLL commands out the rear LED (the one used for communication with a computer). This allows a VLL device, such as a Micro-Scout, to be used as a third motor for Spybotics. The same LED may be controlled using the }{\f2 SendVLL()}{\f1  and }{\f2 
SetLight()}{\f1  functions.
\par }\pard \ql \li0\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETDIRECTION}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetDirection}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetDirection;}{\f1\cf11 OUT_FWD}{\f1 ;}{\f1\cf11 
OUT_REV}{\f1 ;}{\f1\cf11 OUT_TOGGLE}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetDirection;}{\f1\cf11 OUT_FWD}{\f1 ;}{\f1\cf11 
OUT_REV}{\f1 ;}{\f1\cf11 OUT_TOGGLE}}}{\b\f1\fs24 SetDirection(outputs, direction)\tab Function - All
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the outputs to the specified direction. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetDirection}{\f2 (}{\f2\cf11 OUT_A}{\f2 , }{\f2\cf11 OUT_REV}{\f2 ); // make A turn backwards
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The direction parameter should be one of the following constants:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Direction}{\b\f1 \tab }{\b\f1\ul Meaning}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 OUT_FWD}{\f1 \tab Set to forward direction
\par }{\f1\cf11 OUT_REV}{\f1 \tab Set to reverse direction
\par }{\f1\cf11 OUT_TOGGLE}{\f1 \tab Switch direction to the opposite of what it is presently
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETPOWER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetPower}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetPower;}{\f1\cf11 OUT_LOW}{\f1 ;}{\f1\cf11 OUT_HALF}{
\f1 ;}{\f1\cf11 OUT_FULL}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetPower;}{\f1\cf11 OUT_LOW}{\f1 ;}{\f1\cf11 OUT_HALF}{\f1 ;}{
\f1\cf11 OUT_FULL}}}{\b\f1\fs24 SetPower(outputs, power)\tab Function - All
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Sets the power level of the specified outputs. Power may be an expression, but should result in a value between 0 and 7. The constants }{\f1\cf11 OUT_LOW}{\f1 , }{\f1\cf11 
OUT_HALF}{\f1 , and }{\f1\cf11 OUT_FULL}{\f1  may also be used.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPower}{\f2 (}{\f2\cf11 OUT_A}{\f2 , }{\f2\cf11 OUT_FULL}{\f2 ); // A full power
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPower}{\f2 (}{\f2\cf11 OUT_B}{\f2 , x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 By default, all three motors are set to full power and the forward direction (but still turned off) when a program starts.}{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_OUTPUTSTATUS}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  OutputStatus}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  OutputStatus}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  OutputStatus}}}{\b\f1\fs24 OutputStatus(n)\tab Value - All
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Returns the current output setting for motor n. Note that n must be 0, 1, or 2 \endash  not }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , or }{\f1\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 OutputStatus}{\f2 (0); // status of }{\f2\cf11 OUT_A}{\f2 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ON}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  On}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  On}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  On}}}{\b\f1\fs24 On(outputs)\tab Function - All
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Turn specified outputs on. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 On}{\f2 (}{\f2\cf11 OUT_A}{\f2  + }{\f2\cf11 OUT_C}{\f2 ); // turn on outputs A and C
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_OFF}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Off}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Off}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Off}}}{\b\f1\fs24 Off(outputs)\tab Function - All
\par }{\f1 Turn specified outputs off. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Off}{\f2 (}{\f2\cf11 OUT_A}{\f2 ); // turn off output A
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FLOAT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  Float}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Float}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Float}}}{\b\f1\fs24 Float(outputs)\tab Function - All
\par }{\f1 Make outputs float. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Float}{\f2 (}{\f2\cf11 OUT_A}{\f2 ); // float output A
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FWD}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Fwd}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Fwd}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Fwd}}}{\b\f1\fs24 Fwd(outputs)\tab Function - All
\par }{\f1 Set outputs to forward direction. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Fwd}{\f2 (}{\f2\cf11 OUT_A}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_REV}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Rev}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Rev}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Rev}}}{\b\f1\fs24 Rev(outputs)\tab Function - All
\par }{\f1 Set outputs to reverse direction. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Rev}{\f2 (}{\f2\cf11 OUT_A}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_TOGGLE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $
}{\f1  Toggle}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Toggle}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Toggle}}}{\b\f1\fs24 Toggle(outputs)\tab Function - All
\par }{\f1 Flip the direction of the outputs. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Toggle}{\f2 (}{\f2\cf11 OUT_A}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ONFWD}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  OnFwd}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  OnFwd}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  OnFwd}}}{\b\f1\fs24 OnFwd(outputs)\tab Function - All
\par }{\f1 Set outputs to forward direction and turn them on. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 OnFwd}{\f2 (}{\f2\cf11 OUT_A}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ONREV}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  OnRev}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  OnRev}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  OnRev}}}{\b\f1\fs24 OnRev(outputs)\tab Function - All
\par }{\f1 Set outputs to reverse direction and turn them on. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 OnRev}{\f2 (}{\f2\cf11 OUT_A}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ONFOR}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  OnFor}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  OnFor}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  OnFor}}}{\b\f1\fs24 OnFor(outputs, time)\tab Function - All
\par }{\f1 Turn outputs on for a specified amount of time, then turn them off. Outputs is one or more of }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , and }{\f1\cf11 OUT_C}{\f1  added together. Time is measures in 10ms increments (one second = 100) and m
ay be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 OnFor}{\f2 (}{\f2\cf11 OUT_A}{\f2 , x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETGLOBALOUTPUT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetGlobalOutput}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetGlobalOutput}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetGlobalOutput}}}{\b\f1\fs24 SetGlobalOutput(outputs, mode)\tab Function - RCX2, Scout, Spy
\par }{\f1 Disable or re-enable outputs depending on the mode parameter. If mode is }{\f1\cf11 OUT_OFF}{\f1 , then the outputs will be turned off and disabled. While disabled any subsequent calls to }{\f1\cf2 SetOutput}{\f1 
() (including convenience functions such as }{\f1\cf2 On}{\f1 ()) will be ignored. Using a mode of }{\f1\cf11 OUT_FLOAT}{\f1  will put the outputs in float mode before disabling them. Outputs can be re-enabled by calling }{\f1\cf2 SetGlobalOutput}{\f1 
() with a mode of }{\f1\cf11 OUT_ON}{\f1 . Note that enabling an output doesn't immediately turn it on - it just allows future calls to }{\f1\cf2 SetOutput}{\f1 () to take effect.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetGlobalOutput}{\f2 (}{\f2\cf11 OUT_A}{\f2 , }{\f2\cf11 OUT_OFF}{\f2 ); // disable output A
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetGlobalOutput}{\f2 (}{\f2\cf11 OUT_A}{\f2 , }{\f2\cf11 OUT_ON}{\f2 ); // enable output A
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETGLOBALDIRECTION}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetGlobalDirection}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetGlobalDirection}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetGlobalDirection}}}{\b\f1\fs24 SetGlobalDirection(outputs, direction)\tab Function - RCX2, Scout, Spy
\par }{\f1 Reverses or restores the directions of outputs. The direction parameter should be }{\f1\cf11 OUT_FWD}{\f1 , }{\f1\cf11 OUT_REV}{\f1 , or }{\f1\cf11 OUT_TOGGLE}{\f1 . Normal behavior is a global direction of }{\f1\cf11 OUT_FWD}{\f1 
. When the global direction is }{\f1\cf11 OUT_REV}{\f1 , then the actual output direction will be the opposite of whatever the regular output calls request. Calling SetGlobalDirection() with }{\f1\cf11 OUT_TOGGLE}{\f1 
 will switch between normal and opposite behavior.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetGlobalDirection}{\f2 (}{\f2\cf11 OUT_A}{\f2 , }{\f2\cf11 OUT_REV}{\f2 ); // opposite direction
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetGlobalDirection}{\f2 (}{\f2\cf11 OUT_A}{\f2 , }{\f2\cf11 OUT_FWD}{\f2 ); // normal direction
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETMAXPOWER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetMaxPower}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMaxPower}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMaxPower}}}{\b\f1\fs24 SetMaxPower(outputs, power)\tab Function - RCX2, Scout, Spy
\par }{\f1 Sets the maximum power level allowed for the outputs. The power level may be a variable, but should have a value between }{\f1\cf11 OUT_LOW}{\f1  and }{\f1\cf11 OUT_FULL}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMaxPower}{\f2 (}{\f2\cf11 OUT_A}{\f2 , }{\f2\cf11 OUT_HALF}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GLOBALOUTPUTSTATUS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GlobalOutputStatus}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GlobalOutputStatus}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GlobalOutputStatus}}}{\b\f1\fs24 GlobalOutputStatus(n)\tab Value - RCX2, Scout, Spy
\par }{\f1 Returns the current global output setting for motor n. Note that n must be 0, 1, or 2 - not }{\f1\cf11 OUT_A}{\f1 , }{\f1\cf11 OUT_B}{\f1 , or }{\f1\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 GlobalOutputStatus}{\f2 (0); // global status of }{\f2\cf11 OUT_A}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_PLAYSOUND}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  PlaySound}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 PlaySound; SOUND_CLICK; SOUND_DOUBLE_BEEP; SOUND_DOWN; SOUND_UP; SOUND_LOW_BEEP; SOUND_FAST_UP; SOUND_SHORT_BLIP; SOUND_EXCEPTION;
 SOUND_SHOCKED; SOUND_FIRE_LASER; SOUND_FIRE_ELECTRONET; SOUND_FIRE_SPINNER; SOUND_HIT_BY_LASER; SOUND_HIT_BY_ELECTRONET; SOUND_HIT_BY_SPINNER; SOUND_TAG; SOUND_CRASH; SOUND_FIGHT; SOUND_GOT_IT; SOUND_GENERAL_ALERT; SOUND_OUT_OF_ENERGY_ALERT; SOUND_LOW_EN
E
RGY_ALERT; SOUND_SCORE_ALERT; SOUND_TIME_ALERT; SOUND_PROXIMITY_ALERT; SOUND_DANGER_ALERT; SOUND_BOMB_ALERT; SOUND_FINAL_COUNTDOWN; SOUND_TICK_TOCK; SOUND_GOTO; SOUND_SCAN; SOUND_POINT_TO; SOUND_ACTIVATE_SHIELDS; SOUND_ACTIVATE_REFLECT; SOUND_ACTIVATE_CLO
A
K; SOUND_ACTIVATE_FLASH_BLIND; SOUND_MAGNET; SOUND_QUAD_DAMAGE; SOUND_REPULSE; SOUND_TURBO; SOUND_FREEZE; SOUND_SLOW; SOUND_REVERSE; SOUND_DIZZY; SOUND_BOOST; SOUND_DEACTIVATE_SHIELDS; SOUND_DEACTIVATE_REFLECT; SOUND_DEACTIVATE_CLOAK; SOUND_REFLECT; SOUND
_
EXPLOSION; SOUND_BIG_EXPLOSION; SOUND_PLACE_BOMB; SOUND_HIT_BY_WIND; SOUND_OUCH; SOUND_GEIGER; SOUND_WHISTLE; SOUND_IM_IT; SOUND_HELP; SOUND_SIREN; SOUND_BURNT; SOUND_GRINDED; SOUND_SMACKED; SOUND_TRILL_UP; SOUND_TRILL_DOWN; SOUND_YELL; SOUND_WHISPER; SOU
ND_NONE}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 PlaySound; SOUND_CLICK; SOUND_DOUBLE_BEEP; SOUND_DOWN; SOUND_UP; SOUND_LOW_BEEP; SOUND_FAST_UP; SOUND_SHORT_BLIP; SOUND_EXCEPTION; SOUND_SHOCKED; SOUND_FIRE_LASER; SOUND_FIRE_ELECTRONET; SOUND_FIRE_SPINNER; SOUND_HIT_BY_LASER; SOUND_HIT_BY_ELECTR
ONET; SOUND_HIT_BY_SPINNER; SOUND_TAG; SOUND_CRASH; SOUND_FIGHT; SOUND_GOT_IT; SOUND_GENERAL_ALERT; SOUND_OUT_OF_ENERGY_ALERT; SOUND_LOW_ENERGY_ALERT; SOUND_SCORE_ALERT; SOUND_TIME_ALERT; SOUND_PROXIMITY_ALERT; SOUND_DANGER_ALERT; SOUND_BOMB_ALERT; SOUND_
F
INAL_COUNTDOWN; SOUND_TICK_TOCK; SOUND_GOTO; SOUND_SCAN; SOUND_POINT_TO; SOUND_ACTIVATE_SHIELDS; SOUND_ACTIVATE_REFLECT; SOUND_ACTIVATE_CLOAK; SOUND_ACTIVATE_FLASH_BLIND; SOUND_MAGNET; SOUND_QUAD_DAMAGE; SOUND_REPULSE; SOUND_TURBO; SOUND_FREEZE; SOUND_SLO
W
; SOUND_REVERSE; SOUND_DIZZY; SOUND_BOOST; SOUND_DEACTIVATE_SHIELDS; SOUND_DEACTIVATE_REFLECT; SOUND_DEACTIVATE_CLOAK; SOUND_REFLECT; SOUND_EXPLOSION; SOUND_BIG_EXPLOSION; SOUND_PLACE_BOMB; SOUND_HIT_BY_WIND; SOUND_OUCH; SOUND_GEIGER; SOUND_WHISTLE; SOUND
_IM_IT; SOUND_HELP; SOUND_SIREN; SOUND_BURNT; SOUND_GRINDED; SOUND_SMACKED; SOUND_TRILL_UP; SOUND_TRILL_DOWN; SOUND_YELL; SOUND_WHISPER; SOUND_NONE}}}{\b\f1\fs24 PlaySound(sound)\tab Function - All
\par }{\f1 Plays one of the 6 preset sounds. The sound argument must be a constant (except on Spybotics, which allows a variable to be used). The following constants are pre-defined for use with PlaySound: }{\f1\cf11 SOUND_CLICK}{\f1 , }{\f1\cf11 
SOUND_DOUBLE_BEEP}{\f1 , }{\f1\cf11 SOUND_DOWN}{\f1 , }{\f1\cf11 SOUND_UP}{\f1 , }{\f1\cf11 SOUND_LOW_BEEP}{\f1 , }{\f1\cf11 SOUND_FAST_UP}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 PlaySound}{\f2 (}{\f2\cf11 SOUND_CLICK}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The Swan firmware adds two additional sounds: }{\f1\cf11 SOUND_SHORT_BLIP}{\f1  and }{\f1\cf11 SOUND_EXCEPTION}{\f1 .
\par The Spybotics brick has additional sound support via this function.  It has 64 preset sounds in ROM (numbered 0-63).  The 58 additional constants defined for these sounds are:
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Spybot Sound Effect Constants
\par }{\f1\cf11 SOUND_SHOCKED, SOUND_FIRE_LASER, SOUND_FIRE_ELECTRONET, SOUND_FIRE_SPINNER, SOUND_HIT_BY_LASER, SOUND_HIT_BY_ELECTRONET, SOUND_HIT_BY_SPINNER, SOUND_TAG, SOUND_CRASH, SOUND_FIGHT, SOUND_GOT_IT, SOUND_GENERAL_ALERT, SOUND_OUT_OF_ENERGY_
ALERT, SOUND_LOW_ENERGY_ALERT, SOUND_SCORE_ALERT, SOUND_TIME_ALERT, SOUND_PROXIMITY_ALERT, SOUND_DANGER_ALERT, SOUND_BOMB_ALERT, SOUND_FINAL_COUNTDOWN, SOUND_TICK_TOCK, SOUND_GOTO, SOUND_SCAN, SOUND_POINT_TO, SOUND_ACTIVATE_SHIELDS, SOUND_ACTIVATE_REFLECT
,
 SOUND_ACTIVATE_CLOAK, SOUND_ACTIVATE_FLASH_BLIND, SOUND_MAGNET, SOUND_QUAD_DAMAGE, SOUND_REPULSE, SOUND_TURBO, SOUND_FREEZE, SOUND_SLOW, SOUND_REVERSE, SOUND_DIZZY, SOUND_BOOST, SOUND_DEACTIVATE_SHIELDS, SOUND_DEACTIVATE_REFLECT, SOUND_DEACTIVATE_CLOAK, 
S
OUND_REFLECT, SOUND_EXPLOSION, SOUND_BIG_EXPLOSION, SOUND_PLACE_BOMB, SOUND_HIT_BY_WIND, SOUND_OUCH, SOUND_GEIGER, SOUND_WHISTLE, SOUND_IM_IT, SOUND_HELP, SOUND_SIREN, SOUND_BURNT, SOUND_GRINDED, SOUND_SMACKED, SOUND_TRILL_UP, SOUND_TRILL_DOWN, SOUND_YELL
, SOUND_WHISPER
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 A special constant, }{\f1\cf11 SOUND_NONE}{\f1 , is also defined to indicate that no sound should be played.
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_PLAYTONE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  PlayTone}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  PlayTone}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  PlayTone}}}{\b\f1\fs24 PlayTone(frequency, duration)\tab Function - All
\par }{\f1 Plays a single tone of the specified frequency 
and duration. The frequency is in Hz and can be a variable for RCX2, Scout, Swan, and Spybot, but has to be constant for RCX and CyberMaster. The duration is in 100ths of a second and must be a constant.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 PlayTone}{\f2 (440, 50); // Play 'A' for one half second
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_MUTESOUND}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  MuteSound}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MuteSound}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MuteSound}}}{\b\f1\fs24 MuteSound()\tab Function - RCX2, Scout, Spy
\par }{\f1 Stops all sounds and tones from being played.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 MuteSound}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_UNMUTESOUND}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  UnmuteSound}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  UnmuteSound}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  UnmuteSound}}}{\b\f1\fs24 UnmuteSound()\tab Function - RCX2, Scout, Spy
\par }{\f1 Restores normal operation of sounds and tones.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 UnmuteSound}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLEARSOUND}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  ClearSound}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearSound}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearSound}}}{\b\f1\fs24 ClearSound()\tab Function - RCX2, Spy
\par }{\f1 Removes any pending sounds from the sound buffer.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearSound}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SELECTSOUNDS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SelectSounds}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SelectSounds}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SelectSounds}}}{\b\f1\fs24 SelectSounds(group) \tab Function - Scout
\par }{\f1 Selects which group of system sounds should be used. The group must be a constant.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SelectSounds}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SELECTDISPLAY}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SelectDisplay}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SelectDisplay;DISPLAY_WATCH; DISPLAY_SENSOR_1; DISPLAY_SENSOR_2; DISPLAY_SENSOR_3; DISPLAY_}{\f1\cf11 OUT_A}{\f1 ; DISPLAY_}{\f1\cf11 OUT_B}{\f1 ; DISPLAY_}{\f1\cf11 OUT_C; DISPLAY_USER; DISPLAY_EXCEPTION}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SelectDisplay;DISPLAY_WATCH; DISPLAY_SENSOR_1; DISPLAY_SENSOR_2; DISPLAY_SENSOR_3; DISPLAY_}{\f1\cf11 OUT_A}{\f1 
; DISPLAY_}{\f1\cf11 OUT_B}{\f1 ; DISPLAY_}{\f1\cf11 OUT_C; DISPLAY_USER; DISPLAY_EXCEPTION}}}{\b\f1\fs24 SelectDisplay(mode)\tab Function - RCX
\par }{\f1 Select a display mode.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SelectDisplay}{\f2 (}{\f2\cf11 DISPLAY_SENSOR_1}{\f2 ); // view sensor 1
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The RCX and Swan have seven different display modes as shown below. It defaults to }{\f1\cf11 DISPLAY_WATCH}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx4320\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Mode}{\b\f1 \tab }{\b\f1\ul LCD Contents}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx4320\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 DISPLAY_WATCH}{\f1 \tab show the system "watch"
\par }{\f1\cf11 DISPLAY_SENSOR_1}{\f1 \tab show value of sensor 1
\par }{\f1\cf11 DISPLAY_SENSOR_2}{\f1 \tab show value of sensor 2
\par }{\f1\cf11 DISPLAY_SENSOR_3}{\f1 \tab show value of sensor 3
\par }{\f1\cf11 DISPLAY_OUT_A}{\f1 \tab show setting for output A
\par }{\f1\cf11 DISPLAY_OUT_B}{\f1 \tab show setting for output B
\par }{\f1\cf11 DISPLAY_OUT_C}{\f1 \tab show setting for output C
\par }{\f1\cf11 DISPLAY_USER}{\f1 \tab show user selected source (RCX2 or Swan)
\par }{\f1\cf11 DISPLAY_EXCEPTION}{\f1 \tab show exceptions (Swan)
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETUSERDISPLAY}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetUserDisplay}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetUserDisplay}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetUserDisplay}}}{\b\f1\fs24 SetUserDisplay(value, precision)\tab Function - RCX2}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
Set the LCD display to continuously monitor the specified value. Precision specifies the number of digits to the right of the decimal point. A precision of zero shows no decimal point.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetUserDisplay}{\f2 (}{\f2\cf2 Timer}{\f2 (0), 0); // view timer 0
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The RCX2 and Swan add an eighth display mode - }{\f1\cf11 DISPLAY_USER}{\f1 
. User display mode continuously reads a source value and updates the display. It can optionally display a decimal point at any position within the number. This allows the di
splay to give the illusion of working with fractions even though all values are stored internally as integers. For example, the following call will set the user display to show the value 1234 with two digits appearing after the decimal point, resulting in
 "12.34" appearing on the LCD.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetUserDisplay}{\f2 (1234, 2);
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MESSAGE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  Message}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Message}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Message}}}{\b\f1\fs24 Message()\tab Value - RCX, Scout
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The most recently received message is remembered and can be accessed as Message().  If no message has been received, Message() will return 0.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 int x = }{\f2\cf2 Message}{\f2 (); // return value of last message
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLEARMESSAGE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  ClearMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearMessage}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearMessage}}}{\b\f1\fs24 ClearMessage()\tab Function - RCX, Scout
\par }{\f1 Clear the message buffer. This facilitates detection of the next received message since the program can then wait for Message() to become non-zero:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearMessage}{\f2 (); // clear out the received message
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 until}{\f2 (}{\f2\cf2 Message}{\f2 () > 0 ); // wait for next message
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SENDMESSAGE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SendMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  SendMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  SendMessage}}}{\b\f1\fs24 SendMessage(message)\tab Function - RCX, Scout
\par }{\f1 Send an IR message. Message may be any expression, but the bricks can only send messages with a value between 0 and 255, so only the lowest 8 bits of the argument are used.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendMessage}{\f2 (3); // send message 3
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendMessage}{\f2 (259); // another way to send message 3
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SETMESSAGE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{
\f1  SetMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMessage}}}{\b\f1\fs24 SetMessage(message)\tab Function \endash  RCX2

\par }{\f1 Set the IR message. Message may be any expression, but the bricks can only set messages with a value between 0 and 255, so only the lowest 8 bits of the argument are used.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMessage}{\f2 (3); // set message 3
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETTXPOWER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetTxPower}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTxPower;TX_POWER_LO;TX_POWER_HI}}K{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetTxPower;TX_POWER_LO;TX_POWER_HI}}}{\b\f1\fs24 SetTxPower(power)\tab Function - RCX, Scout
\par }{\f1 Set the power level for IR transmission. Power should be one of the constants }{\f1\cf11 TX_POWER_LO}{\f1  or }{\f1\cf11 TX_POWER_HI}{\f1 .
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETSERIALCOMM}}${\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetSerialComm}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialComm;SERIAL_COMM_DEFAULT; SERIAL_COMM_4800; SERIAL_COMM_DUTY25; SERIAL_COMM_76KHZ}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialComm;SERIAL_COMM_DEFAULT; SERIAL_COMM_4800; SERIAL_COMM_DUTY25; SERIAL_COMM_76KHZ}}}{\b\f1\fs24 
SetSerialComm(settings)\tab Function - RCX2
\par }{\f1 Set the communication settings, which determine how the bits are sent over IR
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialComm}{\f2 (}{\f2\cf11 SERIAL_COMM_DEFAULT}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Possible setting values are shown below.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx5040\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Option}{\b\f1 \tab }{\b\f1\ul Effect}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx5040\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 SERIAL_COMM_DEFAULT}{\f1 \tab default settings
\par }{\f1\cf11 SERIAL_COMM_4800}{\f1 \tab 4800 baud
\par }{\f1\cf11 SERIAL_COMM_DUTY25}{\f1 \tab 25% duty cycle
\par }{\f1\cf11 SERIAL_COMM_76KHZ}{\f1 \tab 76kHz carrier
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
The default is to send data at 2400 baud using a 50% duty cycle on a 38kHz carrier. To specify multiple options (such as 4800 baud with 25% duty cycle), combine the individual options using bitwise or (}{\f1\cf11 SERIAL_COMM_4800}{\f1  | }{\f1\cf11 
SERIAL_COMM_DUTY25}{\f1 ).}{\b\f1\fs24 
\par \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETSERIALPACKET}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetSerialPacket}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialPacket;SERIAL_PACKET_DEFAULT; SERIAL_PACKET_PREAMBLE; SERIAL_PACKET_NEGATED; SERIAL_PACKET_CHECKSUM; SERIAL_PACKET_RCX}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 SetSerialPacket;SERIAL_PACKET_DEFAULT; SERIAL_PACKET_PREAMBLE; SERIAL_PACKET_NEGATED; SERIAL_PACKET_CHECKSUM; SERIAL_PACKET_RCX}}}{\b\f1\fs24 SetSerialPacket(settings)\tab Function - RCX2
\par }{\f1 Set the packet settings, which control how bytes are assembled into packets.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialPacket}{\f2 (}{\f2\cf11 SERIAL_PACKET_DEFAULT}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Possible settings values are shown below.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Option}{\b\f1 \tab }{\b\f1\ul Effect}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx4320\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 SERIAL_PACKET_DEFAULT}{\f1 \tab no packet format - just data bytes
\par }{\f1\cf11 SERIAL_PACKET_PREAMBLE}{\f1 \tab send a packet preamble
\par }{\f1\cf11 SERIAL_PACKET_NEGATED}{\f1 \tab follow each byte with its complement
\par }{\f1\cf11 SERIAL_PACKET_CHECKSUM}{\f1 \tab include a checksum for each packet
\par }{\f1\cf11 SERIAL_PACKET_RCX}{\f1 \tab standard RCX format (preamble,
\par \tab negated data, and checksum)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Note that negated packets always include a checksum, so the }{\f1\cf11 SERIAL_PACKET_CHECKSUM}{\f1  option is only meaningful when }{\f1\cf11 SERIAL_PACKET_NEGATED}{
\f1  is not specified. Likewise the preamble, negated, and checksum settings are implied by }{\f1\cf11 SERIAL_PACKET_RCX}{\f1 .
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{
\f1\lang1031\langfe1033\langnp1031  IDH_API_SETSERIALDATA}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{
\f1\lang1031\langfe1033\langnp1031  SetSerialData}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{
\f1\lang1031\langfe1033\langnp1031  SetSerialData}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{
\f1\lang1031\langfe1033\langnp1031  SetSerialData}}}{\b\f1\fs24 SetSerialData(n, value)\tab Function - RCX2, Spy
\par }{\f1 Set one byte of data in the transmit buffer. N is the index of the byte to set (0-15), and value can be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialData}{\f2 (3, x); // set byte 3 to x
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The transmit buffer can hold up to 16 data bytes. These bytes may be set using SetSerialData, then transmitted by 
calling SendSerial. For example, the following code sends two bytes (0x12 and 0x34) out the serial port:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialComm}{\f2 (}{\f2\cf11 SERIAL_COMM_DEFAULT}{\f2 );
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialPacket}{\f2 (}{\f2\cf11 SERIAL_PACKET_DEFAULT}{\f2 );
\par }{\f2\cf2 SetSerialData}{\f2 (0, 0x12);
\par }{\f2\cf2 SetSerialData}{\f2 (1, 0x34);
\par }{\f2\cf2 SendSerial}{\f2 (0, 2);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SERIALDATA}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SerialData}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialData}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  SerialData}}}{\b\f1\fs24 SerialData(n)\tab Value - RCX2, Spy
\par }{\f1 Returns the value of a byte in the transmit buffer (NOT received data). N must be a constant between 0 and 15.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialData}{\f2 (7); // read byte #7
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SERIALPACKET}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SerialPacket}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialPacket}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SerialPacket}}}{\b\f1\fs24 SerialPacket()\tab Value - RCX2
\par }{\f1 Returns the packet data formatting configuration.
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li360\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin360\itap0 {\f1 bit 0 : Preamble (0x55 0xFF 0x00)
\par bit 1 : Negated (incl. negated checksum)
\par bit 2 : Checksum (if not negated)
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialPacket}{\f2 (); // read packet configuration
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SERIALCOMM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SerialComm}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialComm}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SerialComm}}}{\b\f1\fs24 SerialComm()\tab Value - RCX2
\par }{\f1 Returns the UART transmit parameter configuration.  
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li360\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin360\itap0 {\f1 bit 0 : Baudrate (0 == 2400 baud, 1 == 4800 baud)
\par bit 1 : Carrier freq (0 == 38 kHz, 1 == 76 kHz)
\par bit 2 : Dutycycle (0 == 50 %, 1 == 25 %)
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialComm}{\f2 (); // read UART transmit parameters
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SENDSERIAL}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SendSerial}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SendSerial}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SendSerial}}}{\b\f1\fs24 SendSerial(start, count)\tab Function - RCX2, Spy
\par }{\f1 Use t
he contents of the transmit buffer to build a packet and send it out the IR port (according to the current packet and communication settings). Start and count are both constants that specify the first byte and the number of bytes within the buffer to be s
ent.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSerial}{\f2 (0, 2); // send first two bytes in buffer
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SerialType}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SerialType}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialType}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SerialType}}}{\b\f1\fs24 SerialType()\tab Value - Spy
\par }{\f1 Returns the type of the serial transmission.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialType}{\f2 (); // SERIAL_TYPE_USER ??
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetSerialType}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSerialType}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialType}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialType}}}{\b\f1\fs24 SetSerialType(type)\tab Function - Spy
\par }{\f1 Sets the type of the serial transmission.  
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialType}{\f2 (}{\f2\cf11 SERIAL_TYPE_USER}{\f2 ); // set type to user
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Use one of the following constants: }{\f2\cf11 SERIAL_TYPE_SPYBOT}{\f2 , }{\f2\cf11 SERIAL_TYPE_RCX}{\f2 , }{\f2\cf11 SERIAL_TYPE_RC}{\f2 , }{\f2\cf11 SERIAL_TYPE_USER}
{\f1 .  
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SerialBaud}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SerialBaud}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialBaud}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  SerialBaud}}}{\b\f1\fs24 SerialBaud()\tab Value - Spy
\par }{\f1 Returns the baud rate of the serial transmission.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialBaud}{\f2 (); // SERIAL_BAUD_2400 ??
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetSerialBaud}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSerialBaud}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialBaud}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialBaud}}}{\b\f1\fs24 SetSerialBaud(baud)\tab Function - Spy
\par }{\f1 Sets the baud rate of the serial transmission.  
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialBaud}{\f2 (}{\f2\cf11 SERIAL_BAUD_2400}{\f2 ); // set baud to 2400
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Use one of the following constants: }{\f2\cf11 SERIAL_BAUD_2400}{\f2 , }{\f2\cf11 SERIAL_BAUD_4800}{\f2 , }{\f2\cf11 SERIAL_BAUD_9600}{\f1 .  
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SerialChannel}}${\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SerialChannel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialChannel}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}
{\f1  SerialChannel}}}{\b\f1\fs24 SerialChannel()\tab Value - Spy
\par }{\f1 Returns the transmission channel.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialChannel}{\f2 (); // SERIAL_CHANNEL_PC ??
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetSerialChannel}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSerialChannel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialChannel}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialChannel}}}{\b\f1\fs24 SetSerialChannel(channel)\tab Function - Spy
\par }{\f1 Sets the transmission channel.  
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialChannel}{\f2 (}{\f2\cf11 SERIAL_CHANNEL_IR}{\f2 ); // set channel to IR
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Use one of the following constants: }{\f2\cf11 SERIAL_CHANNEL_IR}{\f2 , }{\f2\cf11 SERIAL_CHANNEL_PC}{\f1 .  
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SerialPreamblePos}}${\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SerialPreamblePos}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialPreamblePos}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SerialPreamblePos}}}{\b\f1\fs24 SerialPreamblePos()\tab Value - Spy
\par }{\f1 Returns the preamble position within the serial data buffer.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialPreamblePos}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetSerialPreamblePos}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSerialPreamblePos}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialPreamblePos}}K{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialPreamblePos}}}{\b\f1\fs24 SetSerialPreamblePos(n)\tab Function - Spy
\par }{\f1 Sets the position of the preamble within the serial data buffer.  
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialPreamblePos}{\f2 (12); // set preamble pos to 12
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SerialPreambleLen}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SerialPreambleLen}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialPreambleLen}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SerialPreambleLen}}}{\b\f1\fs24 SerialPreambleLen()\tab Value - Spy
\par }{\f1 Returns the preamble length.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialPreambleLen}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetSerialPreambleLen}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSerialPreambleLen}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialPreambleLen}}K{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialPreambleLen}}}{\b\f1\fs24 SetSerialPreambleLen(n)\tab Function - Spy
\par }{\f1 Sets the length of the preamble.  
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialPreambleLen}{\f2 (3); // set preamble length to 3
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SerialChecksum}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SerialChecksum}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialChecksum}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SerialChecksum}}}{\b\f1\fs24 SerialChecksum()\tab Value - Spy
\par }{\f1 Returns the transmission checksum type.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialChecksum}{\f2 (); // SERIAL_CHECKSUM_SUM ??
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetSerialChecksum}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSerialChecksum}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialChecksum}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialChecksum}}}{\b\f1\fs24 SetSerialChecksum(check)\tab Function - Spy
\par }{\f1 Sets the transmission checksum type.  
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialChecksum}{\f2 (}{\f2\cf11 SERIAL_CHECKSUM_SUM}{\f2 ); // use Sum checksum
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Use one of the following constants: }{\f2\cf11 SERIAL_CHECKSUM_NONE}{\f2 , }{\f2\cf11 SERIAL_CHECKSUM_SUM}{\f2 , }{\f2\cf11 SERIAL_CHECKSUM_ZERO_SUM}{\f1 .  
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SerialBiPhase}}${\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SerialBiPhase}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialBiPhase}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}
{\f1  SerialBiPhase}}}{\b\f1\fs24 SerialBiPhase()\tab Value - Spy
\par }{\f1 Returns the transmission bi-phase mode.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialBiPhase}{\f2 (); // SERIAL_BIPHASE_OFF ??
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetSerialBiPhase}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSerialBiPhase}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSerialBiPhase}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSerialBiPhase}}}{\b\f1\fs24 SetSerialBiPhase(mode)\tab Function - Spy
\par }{\f1 Sets the transmission bi-phase mode.  
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSerialBiPhase}{\f2 (}{\f2\cf11 SERIAL_BIPHASE_OFF}{\f2 ); // no bi-phase
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Use one of the following constants: }{\f2\cf11 SERIAL_BIPHASE_OFF}{\f2 , }{\f2\cf11 SERIAL_BIPHASE_ON}{\f1 .  
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SENDVLL}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SendVLL}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SendVLL}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 SendVLL}}}{\b\f1\fs24 SendVLL(value)\tab Function - Scout, Spy
\par }{\f1 Sends a Visible Light Link (VLL) command, which can be used to communicate with the MicroScout or Code Pilot. The specific VLL commands are described in the Scout SDK.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendVLL}{\f2 (4); // send VLL command #4
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_CLEARTIMER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ClearTimer}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearTimer}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearTimer}}}{\b\f1\fs24 ClearTimer(n)\tab Function - All
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Reset the specified timer to 0.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearTimer}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_TIMER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  Timer}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  Timer; T1; T2; T3; T4}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  Timer; T1; T2; T3; T4}}}{\b\f1\fs24 Timer(n)\tab Value - All
\par }{\f1 Return the current value of specified timer (in 100ms resolution).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\lang1031\langfe1033\langnp1031 x = }{\f2\cf2\lang1031\langfe1033\langnp1031 Timer}{\f2\lang1031\langfe1033\langnp1031 (0);
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\b\f1\lang1036\langfe1033\langnp1036 Timer constants
\par }\pard \ql \li720\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11\lang1036\langfe1033\langnp1036 T1, T2, T3, T4
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
All targets provide several independent timers with 100ms resolution (10 ticks per second). The Scout provides 3 such timers while the RCX, Swan, CyberMaster, and Spybotics provide 4. The timers wrap around to 0 after 32767 ticks (about 55 m
inutes). The value of a timer can be read using Timer(n), where n is a constant that determines which timer to use (0- 2 for Scout, 0-3 for the others).}{\b\f1\fs24 
\par \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETTIMER}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetTimer}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTimer}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 SetTimer}}}{\b\f1\fs24 SetTimer(n, value)\tab Function - RCX2, Spy
\par }{\f1 Set a timer to a specific value (which may be any expression).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetTimer}{\f2 (0, x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FASTTIMER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  FastTimer}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  FastTimer}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  FastTimer}}}{\b\f1\fs24 FastTimer(n)\tab Value - RCX2, Spy
\par }{\f1 Return the current value of specified timer in 10ms resolution.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 FastTimer}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 RCX2
, Swan and Spybotics provides the ability to read the same timers with higher resolution by using FastTimer(n), which returns the timer's value with 10ms resolution (100 ticks per second).
\par \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLEARCOUNTER}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ClearCounter}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearCounter}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  ClearCounter}}}{\b\f1\fs24 ClearCounter(n)\tab Function - RCX2, Scout, Spy
\par }{\f1 Reset counter n to 0. N must be 0 or 1 for Scout, 0-2 for RCX2, Swan and Spybotics.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearCounter}{\f2 (1);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_INCCOUNTER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  IncCounter}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  IncCounter}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  IncCounter}}}{\b\f1\fs24 IncCounter(n)\tab Function - RCX2, Scout, Spy
\par }{\f1 Increment counter n by 1. N must be 0 or 1 for Scout, 0-2 for RCX2, Swan and Spybotics.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 IncCounter}{\f2 (1);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_DECCOUNTER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  DecCounter}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  DecCounter}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  DecCounter}}}{\b\f1\fs24 DecCounter(n)\tab Function - RCX2, Scout, Spy
\par }{\f1 Decrement counter n by 1. N must be 0 or 1 for Scout, 0-2 for RCX2, Swan and Spybotics.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 DecCounter}{\f2 (1);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_COUNTER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
$}{\f1  Counter}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Counter}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Counter}}}{\b\f1\fs24 Counter(n)\tab Value \endash  RCX2, Scout, Spy
\par }{\f1 Return the current value of counter n. N must be 0 or 1 for Scout, 0-2 for RCX2, Swan and Spybotics.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Counter}{\f2 (1);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
Counters are like very simple variables that can be incremented, decremented, and cleared. The Scout provides two counters (0 and 1), while RCX2, Swan and Spybotics provide three (0, 1, and 2). In the case of RCX2, Swan and Spybotics, these
 counters are overlapped with global storage locations 0-2, so if they are going to be used as counters, a }{\f2 #pragma reserve}{\f1  should be used to prevent NQC from using the storage location for a regular variable. For example, to use counter 1:

\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #pragma reserve 1
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SETPRIORITY}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetPriority}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetPriority}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetPriority}}}{\b\f1\fs24 SetPriority(p)\tab Function - RCX2, Scout, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set a task's priority to p, which must be a constant. RCX2, Swan, and Spybotics supports priorities 0-255, while Scout supports priorities 0-7
. Note that lower numbers are higher priority.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPriority}{\f2 (1);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ACTIVEEVENTS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ActiveEvents}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ActiveEvents}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ActiveEvents}}}{\b\f1\fs24 ActiveEvents(task)\tab Value - RCX2, Scout, Spy
\par }{\f1 Return the set of events that have been triggered for a given task.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 ActiveEvents}{\f2 (0);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CURRENTEVENTS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  CurrentEvents}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CurrentEvents}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CurrentEvents}}}{\b\f1\fs24 CurrentEvents() \tab Value - RCX2, Spy
\par }{\f1 Return the set of events that have been triggered for the active task.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 CurrentEvents}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EVENT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  Event}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Event}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Event}}}{\b\f1\fs24 Event(events)\tab Function - RCX2, Scout, Spy
\par }{\f1 Manually triggers the specified events. This can be useful in testing event handling of the program, or in other cases simulating an event based on other criteria. Note that the specification of the events t
hemselves is slightly different between brick types. RCX2, Swan and Spybotics uses the EVENT_MASK macro to compute an event mask, while Scout has predefined masks.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Event}{\f2 (}{\f2\cf2 EVENT_MASK}{\f2 (3)); // triggering an RCX2 event
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Event}{\f2 (}{\f2\cf11 EVENT_1_PRESSED}{\f2 ); // triggering a Scout event
\par }\pard \ql \li0\ri0\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_EVENT_MASK}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  EVENT_MASK}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EVENT_MASK}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EVENT_MASK}}}{\b\f1\fs24 EVENT_MASK(event)\tab Value \endash  RCX2, Scout, Spy
\par }{\f1 Convert an event number to a mask. The monitor statement and some API functions (such as ActiveEvents() or Event()) need to handle multip
le events. This is done by converting each event number to an event mask, and then combining the masks with a bitwise OR. For example, to monitor events 2 and 3, the
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 following statement could be used:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 monitor}{\f2 (EVENT_MASK(2) | EVENT_MASK(3))
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETEVENT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetEvent}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SetEvent; EVENT_TYPE_PRESSED; EVENT_TYPE_RELEASED; EVENT_TYPE_PULSE; EVENT_TYPE_EDGE; EVENT_TYPE_FASTCHANGE; EVENT_TYPE_LOW; EVENT_TYPE_NORMAL; EVENT_TYPE_HIGH; EVENT_TYPE_CLICK; EVENT_TYPE_DOUBLECLICK; EVENT_TYPE_MESSAGE}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetEvent; E
VENT_TYPE_PRESSED; EVENT_TYPE_RELEASED; EVENT_TYPE_PULSE; EVENT_TYPE_EDGE; EVENT_TYPE_FASTCHANGE; EVENT_TYPE_LOW; EVENT_TYPE_NORMAL; EVENT_TYPE_HIGH; EVENT_TYPE_CLICK; EVENT_TYPE_DOUBLECLICK; EVENT_TYPE_MESSAGE}}}{\b\f1\fs24 SetEvent(event, source, type)
\tab Function - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Configure an event (a number from 0 to 15) to use the specified source and type. Both event and type must be constants, and source should be the actual source expression.

\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEvent}{\f2 (2, }{\f2\cf2 Timer}{\f2 (0), }{\f2\cf11 EVENT_TYPE_HIGH}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
Legal event sources are sensors, timers, counters, or the message buffer. An event is configured by calling SetEvent(event, source, type), where event is a constant event number (0-15), source is the event source itself, and type is one of the types shown
 below (some combinations of sources and types are illegal).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx4230\tx7380\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Event Type}{\b\f1 \tab }{\b\f1\ul Condition}{\b\f1 \tab }{\b\f1\ul Event Source}{\b\f1 
\par }\pard \ql \li720\ri0\widctlpar\tx4230\tx7380\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 EVENT_TYPE_PRESSED}{\f1 \tab value becomes on\tab sensors only
\par }{\f1\cf11 EVENT_TYPE_RELEASED}{\f1 \tab value becomes off\tab sensors only
\par }{\f1\cf11 EVENT_TYPE_PULSE}{\f1 \tab value goes from off to on to off\tab sensors only
\par }{\f1\cf11 EVENT_TYPE_EDGE}{\f1 \tab value goes from on to off or vice versa\tab sensors only
\par }{\f1\cf11 EVENT_TYPE_FASTCHANGE}{\f1 \tab value changes rapidly\tab sensors only
\par }{\f1\cf11 EVENT_TYPE_LOW}{\f1 \tab value becomes low\tab any
\par }{\f1\cf11 EVENT_TYPE_NORMAL}{\f1 \tab value becomes normal\tab any
\par }{\f1\cf11 EVENT_TYPE_HIGH}{\f1 \tab value becomes high\tab any
\par }{\f1\cf11 EVENT_TYPE_CLICK}{\f1 \tab value from low to high back to low\tab any
\par }{\f1\cf11 EVENT_TYPE_DOUBLECLICK}{\f1 \tab two clicks within a certain time\tab any (RCX2, Swan)
\par }{\f1\cf11 EVENT_TYPE_MESSAGE}{\f1 \tab new message received\tab Message() only (RCX2)
\par }{\f1\cf11 EVENT_TYPE_ENTRY_FOUND\tab }{\f1 world entry found\tab VLL() only (Spy)
\par }{\f1\cf11 EVENT_TYPE_MSG_DISCARD\tab }{\f1 Message discarded\tab VLL() only (Spy)
\par }{\f1\cf11 EVENT_TYPE_MSG_RECEIVED\tab }{\f1 Message received\tab VLL() only (Spy)
\par }{\f1\cf11 EVENT_TYPE_VLL_MSG_RECEIVED\tab }{\f1 VLL message received\tab VLL() only (Spy)
\par }{\f1\cf11 EVENT_TYPE_ENTRY_CHANGED\tab }{\f1 World entry changed\tab VLL() only (Spy)
\par }{\f1\cf11 EVENT_TYPE_4}{\f1 \tab event type 4\tab any (Swan)
\par }{\f1\cf11 EVENT_TYPE_5}{\f1 \tab event type 5\tab any (Swan)
\par }{\f1\cf11 EVENT_TYPE_6}{\f1 \tab event type 6\tab any (Swan)
\par }{\f1\cf11 EVENT_TYPE_VIRTUAL_MOTOR_CHANGE}{\f1  virtual motor changes\tab any (Swan)
\par }{\f1\cf11 EVENT_TYPE_VIRTUAL_MOTOR_POWER}{\f1  virtual motor power\tab any (Swan)
\par }{\f1\cf11 EVENT_TYPE_VIRTUAL_SENSOR_DEF}{\f1  virtual sensor def\tab any (Swan)
\par }{\f1\cf11 EVENT_TYPE_INFRARED_IDLE}{\f1 \tab infrared goes idle\tab any (Swan)
\par }{\f1\cf11 EVENT_TYPE_RESET}{\f1 \tab reset\tab any (Swan)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The first four event types make use of a sensor's boolean value, thus are most useful with touch sensors. For example, to set event #2 t
o be triggered when a touch sensor on port 1 is pressed, the following call could be made:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEvent}{\f2 (2, }{\f2\cf11 SENSOR_1}{\f2 , }{\f2\cf11 EVENT_TYPE_PRESSED}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 In order for }{\f1\cf11 EVENT_TYPE_PULSE}{\f1  or }{\f1\cf11 EVENT_TYPE_EDGE}{\f1  to be used, the sensor must be configured in the }{\f1\cf11 SENSOR_MODE_PULSE}{\f1  or }{
\f1\cf11 SENSOR_MODE_EDGE}{\f1  respectively.
\par }{\f1\cf11 EVENT_TYPE_FASTCHANGE}{\f1  should be used with sensors that have been configured with a slope parameter. When the raw value changes faster than the slope parameter an }{\f1\cf11 EVENT_TYPE_FASTCHANGE}{\f1  event will be triggered.
\par The next three types (}{\f1\cf11 EVENT_TYPE_LOW}{\f1 , }{\f1\cf11 EVENT_TYPE_NORMAL}{\f1 , and }{\f1\cf11 EVENT_TYPE_HIGH}{\f1 
) convert an event source's value into one of three ranges (low, normal, or high), and trigger an event when the value moves from one range into another. The ranges are defined by the lower limit and
 upper limit for the event. When the source value is lower than the lower limit, the source is considered low. When the source value is higher than the upper limit, the source is considered high. The source is normal whenever it is between the limits.

\par The 
following example configures event #3 to trigger when the sensor on port 2's value goes into the high range. The upper limit is set for 80, and the lower limit is set for 50. This configuration is typical of how an event can be triggered when a light sens
or detected a bright light.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEvent}{\f2 (3, }{\f2\cf11 SENSOR_2}{\f2 , }{\f2\cf11 EVENT_TYPE_HIGH}{\f2 );
\par }\pard \ql \li720\ri0\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetLowerLimit}{\f2 (3, 50);
\par }{\f2\cf2 SetUpperLimit}{\f2 (3, 80);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
A hysteresis parameter can be used to provide more stable transitions in cases where the source value may jitter. Hysteresis works by making the transition from low to normal a little higher than the transition from normal to low. In a sense, it makes it 
easier to get into the low range than get out of it. A symmetrical case applies to the transition between normal and high.
\par A transition from low to high back to low will trigger a }{\f1\cf11 EVENT_TYPE_CLICK }{\f1 event, provided that the entire sequence is faster than the 
click time for the event. If two successive clicks occur and the time between clicks is also less than the click time, then an }{\f1\cf11 EVENT_TYPE_DOUBLECLICK}{\f1 
 event will be triggered. The system also keeps track of the total number of clicks for each event.
\par The last event type, }{\f1\cf11 EVENT_TYPE_MESSAGE}{\f1 , is only valid when }{\f1\cf2 Message}{\f1 () is used as the event source. The event will be triggered whenever a new message arrives (even if its value is the same as a previous message).
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLEAREVENT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  ClearEvent}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearEvent}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearEvent}}}{\b\f1\fs24 ClearEvent(event)\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Clear the configuration for the specified event. This prevents it from triggering until it is re-configured.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearEvent}{\f2 (2); // clear event #2
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLEARALLEVENTS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  ClearAllEvents}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearAllEvents}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearAllEvents}}}{\b\f1\fs24 ClearAllEvents()\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Clear the configurations for all events.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearAllEvents}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EVENTSTATE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  EventState}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EventState}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EventState}}}{\b\f1\fs24 EventState(event)\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the state of a given event. States are 0: Low, 1: Normal, 2: High, 3: Undefined, 4: Start calibrating, 5: Calibrating in process.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EventState}{\f2 (2);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CALIBRATEEVENT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  CalibrateEvent}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CalibrateEvent}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CalibrateEvent}}}{\b\f1\fs24 CalibrateEvent(event, lower, upper, hyst)\tab Function - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
Calibrate the event by taking an actual sensor reading and then applying the specified lower, upper, and hyst ratios to determine actual limits and hysteresis value. The specific formulas for calibration depend on sensor type and are explained in the LEGO
 SDK. Calibration is not instantaneous - EventState() can be checked to determine when the calibration is complete (typically about 50ms).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 CalibrateEvent}{\f2 (2, 50, 50, 20);
\par }\pard \ql \li720\ri0\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 until}{\f2 (}{\f2\cf2 EventState}{\f2 (2) != 5); // wait for calibration
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETUPPERLIMIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetUpperLimit}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetUpperLimit}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetUpperLimit}}}{\b\f1\fs24 SetUpperLimit(event, limit)\tab Function - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the upper limit for the event, where event is a constant event number and limit can be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetUpperLimit}{\f2 (2, x); // set upper limit for #2 to x
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_UPPERLIMIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  UpperLimit}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  UpperLimit}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  UpperLimit}}}{\b\f1\fs24 UpperLimit(event)\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current upper limit for the specified event number.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 UpperLimit}{\f2 (2); // get upper limit for event 2
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETLOWERLIMIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetLowerLimit}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetLowerLimit}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetLowerLimit}}}{\b\f1\fs24 SetLowerLimit(event, limit)\tab Function - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the lower limit for the event, where event is a constant event number and limit can be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetLowerLimit}{\f2 (2, x); // set lower limit for #2 to x
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_LOWERLIMIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  LowerLimit}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  LowerLimit}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  LowerLimit}}}{\b\f1\fs24 LowerLimit(event)\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current lower limit for the specified event number.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 LowerLimit}{\f2 (2); // get lower limit for event 2
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETHYSTERESIS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetHysteresis}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetHysteresis}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetHysteresis}}}{\b\f1\fs24 SetHysteresis(event, value)\tab Function - RCX2, Spy
\par }\pard \ql \li0\ri0\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the hysteresis for the event, where event is a constant event number and value can be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetHysteresis}{\f2 (2, x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_HYSTERESIS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  Hysteresis}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Hysteresis}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Hysteresis}}}{\b\f1\fs24 Hysteresis(event)\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current hysteresis for the specified event number.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Hysteresis}{\f2 (2);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETCLICKTIME}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetClickTime}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetClickTime}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetClickTime}}}{\b\f1\fs24 SetClickTime(event, value)\tab Function - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 S
et the click time for the event, where event is a constant event number and value can be any expression. The time is specified in increments of 10ms, so one second would be a value of 100.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetClickTime}{\f2 (2, x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLICKTIME}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  ClickTime}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClickTime}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClickTime}}}{\b\f1\fs24 ClickTime(event)\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current click time for the specified event number.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 ClickTime}{\f2 (2);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETCLICKCOUNTER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetClickCounter}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetClickCounter}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetClickCounter}}}{\b\f1\fs24 SetClickCounter(event, value)\tab Function - RCX2
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the click counter for the event, where event is a constant event number and value can be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetClickCounter}{\f2 (2, x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLICKCOUNTER}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  ClickCounter}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  ClickCounter}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  ClickCounter}}}{\b\f1\fs24 ClickCounter(event)\tab Value - RCX2
\par }\pard \ql \li0\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current click counter for the specified event number.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 ClickCounter}{\f2 (2);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SETSENSORCLICKTIME}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SetSensorClickTime}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  SetSensorClickTime}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  SetSensorClickTime}}}{\b\f1\fs24 SetSensorClickTime(value)\tab Function - Scout
\par }{\f1 Set the click time used to generate events from the light sensor. Value should be specified in increments of 10ms, and may be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorClickTime}{\f2 (x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SETCOUNTERLIMIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetCounterLimit}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
A}{\f1  SetCounterLimit}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetCounterLimit}}}{\b\f1\fs24 SetCounterLimit(n, value)\tab 
Function - Scout
\par }{\f1 Set the limit for counter n. N must be 0 or 1, and value may be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetCounterLimit}{\f2 (0, 100); // set counter 0 limit to 100
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETTIMERLIMIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetTimerLimit}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTimerLimit}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetTimerLimit}}}{\b\f1\fs24 SetTimerLimit(n, value)\tab Function - Scout
\par }{\f1 Set the limit for timer n. N must be 0, 1, or 2, and value may be any expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetTimerLimit}{\f2 (1, 100); // set timer 1 limit to 100
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_CREATEDATALOG}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  CreateDatalog}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CreateDatalog}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CreateDatalog}}}{\b\f1\fs24 CreateDatalog(size)\tab Function - RCX
\par }{\f1 Create a datalog of the specified size (which must be a constant). A size of 0 clears the existing datalog without creating a new one.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 CreateDatalog}{\f2 (100); // datalog for 100 points
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ADDTODATALOG}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  AddToDatalog}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  AddToDatalog}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  AddToDatalog}}}{\b\f1\fs24 AddToDatalog(value)\tab Function - RCX
\par }{\f1 Add the value, which may be an expression, to the datalog. If the datalog is full the call has no effect.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 AddToDatalog}{\f2 (x);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 When the datalog is uploaded to a computer it will show both the value itself and the
 source of the value (timer, variable, etc). The datalog directly supports the following data sources: timers, sensor values, variables, and the system watch. Other data types (such as a constant or random number) may also be logged, but in this case NQC 
will first move the value into a variable and then log the variable. The values will still be captured faithfully in the datalog, but the sources of the data may be a bit misleading.}{\b\f1\fs24 
\par \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_UPLOADDATALOG}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  UploadDatalog}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  UploadDatalog}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}
{\f1  UploadDatalog}}}{\b\f1\fs24 UploadDatalog(start, count)\tab Function - RCX
\par }{\f1 Initiate and upload of count data points beginning at start. This is of relatively little use since the host computer usually initiates the upload.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 UploadDatalog}{\f2 (0, 100); // upload entire 100 point log
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WAIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Wait}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Wait}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Wait}}}{\b\f1\fs24 Wait(time)\tab Function - All
\par }{\f1 Make a task sleep for specified amount of time (in 100ths of a second). The time argument may be an expression or a constant:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Wait}{\f2 (100); // wait 1 second
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Wait}{\f2 (}{\f2\cf2 Random}{\f2 (100)); // wait random time up to 1 second
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_STOPALLTASKS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  StopAllTasks}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  StopAllTasks}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  StopAllTasks}}}{\b\f1\fs24 StopAllTasks()\tab Function - All
\par }{\f1 Stop all currently running tasks. This will halt the program completely, so any code following this command will be ignored.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 StopAllTasks}{\f2 (); // stop the program
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RANDOM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $
}{\f1  Random}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Random}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Random}}}{\b\f1\fs24 Random(n)\tab Value - All
\par }{\f1 Return a random number between 0 and n. N must be a constant.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Random}{\f2 (10);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETRANDOMSEED}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetRandomSeed}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetRandomSeed}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetRandomSeed}}}{\b\f1\fs24 SetRandomSeed(n)\tab Function - RCX2, Spy
\par }{\f1 Seed the random number generator with n. N may be an expression.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetRandomSeed}{\f2 (x); // seed with value of x
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SET}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Set}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Set}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Set}}}{\b\f1\fs24 Set (dst, src)\tab Function - RCX2, Spy
\par }{\f1 Set destination equal to source.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Set}{\f2 (x, 5); // set variable x to 5
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETSLEEPTIME}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSleepTime}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSleepTime}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSleepTime}}}{\b\f1\fs24 SetSleepTime(minutes)\tab Function - All
\par }{\f1 Set the sleep timeout the requested number of minutes (which must be a constant). Specifying 0 minutes disables the sleep feature.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSleepTime}{\f2 (5); // sleep after 5 minutes
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSleepTime}{\f2 (0) ; // disable sleep time
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SLEEPNOW}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SleepNow}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SleepNow}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SleepNow}}}{\b\f1\fs24 SleepNow()\tab Function - All
\par }{\f1 Force the device to go to sleep. Only works if the sleep time is non-zero.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SleepNow}{\f2 (); // go to sleep
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_PROGRAM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
$}{\f1  Program}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Program}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Program}}}{\b\f1\fs24 Program()\tab Value - RCX
\par }{\f1 Number of the currently selected program.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Program}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SELECTPROGRAM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SelectProgram}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SelectProgram}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SelectProgram}}}{\b\f1\fs24 SelectProgram(n)\tab Function - RCX2
\par }{\f1 Select the specified program and start running it. Note that programs are numbered 0-4 (not 1-5 as displayed on the LCD).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SelectProgram}{\f2 (3);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_BATTERYLEVEL}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  BatteryLevel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  BatteryLevel}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  BatteryLevel}}}{\b\f1\fs24 BatteryLevel()\tab Value - RCX2, Spy
\par }{\f1 Return the battery level in millivolts.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 BatteryLevel}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FIRMWAREVERSION}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  FirmwareVersion}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  FirmwareVersion}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  FirmwareVersion}}}{\b\f1\fs24 FirmwareVersion()\tab Value - RCX2, Spy
\par }{\f1 Return the firmware version as an integer. For example, version 3.2.6 is 326.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 FirmwareVersion}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WATCH}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  Watch}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Watch}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Watch}}}{\b\f1\fs24 Watch()\tab Value - RCX
\par }{\f1 Return the value of the system clock in minutes.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Watch}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETWATCH}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetWatch}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetWatch}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetWatch}}}{\b\f1\fs24 SetWatch(hours, minutes)\tab Function - RCX
\par }{\f1 Set the system watch to the specified number of hours and minutes. Hours must be a constant between 0 and 23 inclusive. Minutes must be a constant between 0 and 59 inclusive.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetWatch}{\f2 (3, 15); // set watch to 3:15
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETSCOUTRULES}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SetScoutRules}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SetScoutRules}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SetScoutRules}}}{\b\f1\fs24 SetScoutRules(motion, touch, light, time, fx)\tab Function - Scout
\par }{\f1 Set the various rules used by the scout in stand-alone mode.
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{
\f1\lang1036\langfe1033\langnp1036  IDH_API_SCOUTRULES}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{
\f1\lang1036\langfe1033\langnp1036  ScoutRules}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{
\f1\lang1036\langfe1033\langnp1036  ScoutRules}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{
\f1\lang1036\langfe1033\langnp1036  ScoutRules}}}{\b\f1\fs24 ScoutRules(n)\tab Value - Scout
\par }{\f1 Return current setting for one of the rules. N should be a constant between 0 and 4.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 ScoutRules}{\f2 (1); // get setting for rule #1
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SETSCOUTMODE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetScoutMode}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{
\f1  SetScoutMode}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetScoutMode}}}{\b\f1\fs24 SetScoutMode(mode)\tab Function - Scout

\par }{\f1 Put the scout into stand-alone (0) or power (1) mode. As a programming call it really only makes sense to put into stand-alone mode since it would already be in power mode to run an NQC program.
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETEVENTFEEDBACK}}${\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetEventFeedback}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetEventFeedback}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetEventFeedback}}}{\b\f1\fs24 SetEventFeedback(events)\tab Function - Scout
\par }{\f1 Set which events should be accompanied by audio feedback.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEventFeedback}{\f2 (}{\f2\cf11 EVENT_1_PRESSED}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EVENTFEEDBACK}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  EventFeedback}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EventFeedback}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EventFeedback}}}{\b\f1\fs24 EventFeedback()\tab Value - Scout
\par }{\f1 Return the set of events that have audio feedback.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EventFeedback}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETLIGHT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetLight}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetLight;LIGHT_ON;LIGHT_OFF}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetLight;LIGHT_ON;LIGHT_OFF}}}{\b\f1\fs24 SetLight(mode)\tab Function - Scout
\par }{\f1 Control the Scout's LED. Mode must be }{\f1\cf11 LIGHT_ON}{\f1  or }{\f1\cf11 LIGHT_OFF}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetLight}{\f2 (}{\f2\cf11 LIGHT_ON}{\f2 ); // turn on LED
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DRIVE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  Drive}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Drive;}{\f1\cf11 OUT_L}{\f1 ;}{\f1\cf11 OUT_R}{\f1 ;}{\f1\cf11 OUT_X}{\f1 ;SENSOR_L;SENSOR_M;SENSOR_R}}K
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Drive;}{\f1\cf11 OUT_L}{\f1 ;}{\f1\cf11 OUT_R}{\f1 ;}{\f1\cf11 OUT_X}{\f1 
;SENSOR_L;SENSOR_M;SENSOR_R}}}{\b\f1\fs24 Drive(motor0, motor1)\tab Function - CM
\par }{\f1 Turns on both motors at the power levels specified. If a power level is negative, then the motor will run in reverse. Equivalent to this code:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPower}{\f2 (}{\f2\cf11 OUT_L}{\f2 , }{\f2\cf2 abs}{\f2 (power0));
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPower}{\f2 (}{\f2\cf11 OUT_R}{\f2 , }{\f2\cf2 abs}{\f2 (power1));
\par }{\b\f2 if}{\f2 (power0 < 0)
\par }\pard \ql \li1440\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin1440\itap0 {\f2 \{ }{\f2\cf2 SetDirection}{\f2 (}{\f2\cf11 OUT_L}{\f2 , }{\f2\cf11 OUT_REV}{\f2 ) \}
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 else
\par }\pard \ql \li1440\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin1440\itap0 {\f2 \{ }{\f2\cf2 SetDirection}{\f2 (}{\f2\cf11 OUT_L}{\f2 , }{\f2\cf11 OUT_FWD}{\f2 ) \}
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 if}{\f2 (power1 < 0)
\par }\pard \ql \li1440\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin1440\itap0 {\f2 \{ }{\f2\cf2 SetDirection}{\f2 (}{\f2\cf11 OUT_R}{\f2 , }{\f2\cf11 OUT_REV}{\f2 ) \}
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 else
\par }\pard \ql \li1440\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin1440\itap0 {\f2 \{ }{\f2\cf2 SetDirection}{\f2 (}{\f2\cf11 OUT_R}{\f2 , }{\f2\cf11 OUT_FWD}{\f2 ) \}
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetOutput}{\f2 (}{\f2\cf11 OUT_L}{\f2  + }{\f2\cf11 OUT_R}{\f2 , }{\f2\cf11 OUT_ON}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 CyberMaster provides alternate names for the sensors: }{\f1\cf11 SENSOR_L}{\f1 , }{\f1\cf11 SENSOR_M}{\f1 , and }{\f1\cf11 SENSOR_R}{\f1 
. It also provides alternate names for the outputs: }{\f1\cf11 OUT_L}{\f1 , }{\f1\cf11 OUT_R}{\f1 , }{\f1\cf11 OUT_X}{\f1 . }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_ONWAIT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  OnWait}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  OnWait}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  OnWait}}}{\b\f1\fs24 OnWait(motors, power, time)\tab Function - CM
\par }{\f1 Turns on the motors specified, all at the same power level then waits for the given time. The time is in 10ths of a second, with a maximum of 255 (or 25.5 seconds). Equivalent to this code:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPower}{\f2 (motors, }{\f2\cf2 abs}{\f2 (power));
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 if}{\f2 (power < 0)
\par }\pard \ql \li1440\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin1440\itap0 {\f2 \{ }{\f2\cf2 SetDirection}{\f2 (motors, }{\f2\cf11 OUT_REV}{\f2 ) \}
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 else
\par }\pard \ql \li1440\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin1440\itap0 {\f2 \{ }{\f2\cf2 SetDirection}{\f2 (motors, }{\f2\cf11 OUT_FWD}{\f2 ) \}
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetOutput}{\f2 (motors, }{\f2\cf11 OUT_ON}{\f2 );
\par }{\f2\cf2 Wait}{\f2 ( time * 10);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ONWAITDIFFERENT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  OnWaitDifferent}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  OnWaitDifferent}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  OnWaitDifferent}}}{\b\f1\fs24 OnWaitDifferent(motors, p0, p1, p2, time)\tab Function - CM
\par }{\f1 Like }{\f1\cf2 OnWait}{\f1 (), except different power levels can be given for each motor.
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CLEARTACHOCOUNTER}}${\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ClearTachoCounter}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearTachoCounter}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearTachoCounter}}}{\b\f1\fs24 ClearTachoCounter(motors)\tab Function - CM
\par }{\f1 Resets the tachometer for the motor(s) specified.
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_TACHOCOUNT}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  TachoCount}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  TachoCount}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  TachoCount}}}{\b\f1\fs24 TachoCount(n)\tab Value - CM
\par }{\f1 Return the current value of the tachometer for a specified motor. The two internal motors have tachometers, which me
asure 'clicks' and speed as the motors turn. There are about 50 clicks per revolution of the shaft. The tachometers can be used, for example, to create a robot which can detect if it has bumped into an object without using any external sensors. The tachom
eters have maximum values of 32767 and do not differentiate between directions. They will also count up if the shaft is turned by hand, including when no program is running.
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_TACHOSPEED}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  TachoSpeed}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  TachoSpeed}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{
\f1  TachoSpeed}}}{\b\f1\fs24 TachoSpeed(n)\tab Value - CM
\par }{\f1 Return the current speed of the tachometer for a specified motor. The speed is fairly constant for an unladen motor at any speed, with a maximum value of 90. (This will be lower as your batteries lose power!) The value drops as the load on the motor
 increases. A value of 0 indicates that the motor is stalled.
\par }{\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EXTERNALMOTORRUNNING}}${\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ExternalMotorRunning}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ExternalMotorRunning}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ExternalMotorRunning}}}{\b\f1\fs24 ExternalMotorRunning()\tab Value - CM
\par }{\f1 This is actually a measure of the current being drawn by the motor. The values returned tend to fluctuate slightly, but are, on average, as follows for an unladen motor:
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1 0 motor is floating
\par }\pard \ql \li720\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1 1 motor is off
\par }\pard \ql \fi720\li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \tab <=7 motor is running at around this power level. This is where the value fluctuates the most (probably re
lated to the PWM method used to drive the motors.) In any case, you should know what power level you set the motor to in the first place. The value increases as the load on the motor increases, and a value between 260 and 300 indicates that the motor has 
stalled.
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_AGC}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  AGC}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  AGC}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  AGC}}}{\b\f1\fs24 AGC()\tab Value - CM
\par }{\f1 Return the current value of the automatic gain control on the RF receiver. This can be used to give a very rough (and somewhat inaccurate) measure of the distance between the CyberMaster and the RF transmitter.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 AGC}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f2 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETLED}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $
}{\f1  SetLED}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SetLED;LED_MODE_ON;LED_MODE_BLINK;LED_MODE_DURATION;LED_MODE_SCALE;LED_MODE_SCALE_BLINK;LED_MODE_SCALE_DURATION;LED_MODE_RED_SCALE;LED_MODE_RED_SCALE_BLINK;LED_MODE_
GREEN_SCALE;LED_MODE_GREEN_SCALE_BLINK;LED_MODE_YELLOW;LED_MODE_YELLOW_BLINK;LED_MODE_YELLOW_DURATION;LED_MODE_VLL;LED_MODE_VLL_BLINK;LED_MODE_VLL_DURATION;LED_RED1;LED_RED2;LED_RED3;LED_GREEN1;LED_GREEN2;LED_GREEN3;LED_YELLOW;LED_ALL_RED;LED_ALL_GREEN;LE
D_ALL_RED_GREEN;LED_ALL}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 SetLED;LED_MODE_ON;LED_MODE_BLINK;LED_MODE_DURATION;LED_MODE_SCALE;LED_MODE_SCALE_BLINK;LED_MODE_SCALE_DURATION;LED_MODE_RED_SCALE;LED_MODE_RED_SCALE_BLINK;LED_MODE_GREEN_SCALE;LED_MODE_GREEN_SCALE_BLINK;LED_MODE_YELLOW;LED_MODE_Y
ELLOW_BLINK;LED_MODE_YELLOW_DURATION;LED_MODE_VLL;LED_MODE_VLL_BLINK;LED_MODE_VLL_DURATION;LED_RED1;LED_RED2;LED_RED3;LED_GREEN1;LED_GREEN2;LED_GREEN3;LED_YELLOW;LED_ALL_RED;LED_ALL_GREEN;LED_ALL_RED_GREEN;LED_ALL}}}{\b\f1\fs24 SetLED(mode, value)\tab 
Function - Spy
\par }{\f1 A single command, }{\f2 SetLED(}{\i\f2 mode}{\f2 , }{\i\f2 value}{\f2 )}{\f1 
, can be used to control all of the different LEDs on the Spybotics brick. The function takes two arguments, a mode and a value. The mode parameter selects which group of LEDs to control, and how they should be affected. 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul LED Mode Constants
\par }{\f1\cf11 LED_MODE_ON, LED_MODE_BLINK, LED_MODE_DURATION, LED_MODE_SCALE, LED_MODE_SCALE_BLINK, LED_MODE_SCALE_DURATION, LED_MODE_RED_SCALE, LED_MODE_RED_SCALE_BLINK, LED_MODE_GREEN_SCALE, LED_MODE_GREEN_SCALE_BLINK, LED_MODE_YELLOW, LED_MODE_YELLOW_B
LINK, LED_MODE_YELLOW_DURATION, LED_MODE_VLL, LED_MODE_VLL_BLINK, LED_MODE_VLL_DURATION
\par }\pard \ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 The meaning of value parameter depends on the mode. Sometimes it is a mask of which LEDs should be controlled (as with }{\f2\cf11 LED_MODE_ON}{\f1 
). Sometimes it is a single value that is used to determine how many LEDs to turn on (as with }{\f2\cf11 LED_MODE_SCALE}{\f1 ). 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul LED Value Constants
\par }{\f1\cf11 LED_RED1, LED_RED2, LED_RED3, LED_GREEN1, LED_GREEN2, LED_GREEN3, LED_YELLOW, LED_ALL_RED, LED_ALL_GREEN, LED_ALL_RED_GREEN, LED_ALL
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Here is a short program that blinks all six of the top red/green LEDs.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 task}{\f2  main()
\par \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetLED}{\f2 (}{\f2\cf11 LED_MODE_BLINK}{\f2 , }{\f2\cf11 LED_ALL_RED_GREEN}{\f2 );
\par }{\f2\cf2 Wait}{\f2 (200);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_LED}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  LED}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  LED}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  LED}}}{\b\f1\fs24 LED(mode)\tab Value \endash  Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value of the LED control registers.  Use the }{\f1\uldb LED Mode constants}{\v\f1 IDH_API_SETLED}{\f1  as the parameter.
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SETANIMATION}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetAnimation}}A{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetAnimation;ANIMATION;ANIMATION_SCAN;ANIMATION_SPARKLE;ANIMATION_FLASH;ANIMATION_RED_TO_GREEN;ANIMATION_
GREEN_TO_RED;ANIMATION_POINT_FORWARD;ANIMATION_ALARM;ANIMATION_THINKING}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 SetAnimation;ANIMATION;ANIMATION_SCAN;ANIMATION_SPARKLE;ANIMATION_FLASH;ANIMATION_RED_TO_GREEN;ANIMATION_GREEN_TO_RED;ANIMATION_POINT_FORWARD;ANIMATION_ALARM;ANIMATION_THINKING}}}{\b\f1\fs24 SetAnimation(number)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
A more sophisticated way to control the top LEDs is to use animations. An animation is a sequence of LED patterns. Each pattern is displayed for a certain amount of time and then the next pattern is displayed. Animations are activated using the }{\f2 
SetAnimation(}{\i\f2 number}{\f2 )}{\f1  function. There are 8 pre-defined animations in ROM.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul ROM Animation Constants
\par }\pard \ql \li720\ri0\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 ANIMATION_SCAN, ANIMATION_SPARKLE, ANIMATION_FLASH, ANIMATION_RED_TO_GREEN, ANIMATION_GREEN_TO_RED, ANIMATION_POINT_FORWARD, ANIMATION_AL
ARM, ANIMATION_THINKING
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Here is a short program that runs a ROM animation.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 task}{\f2  main\line \{\line   }{\f2\cf2 SetAnimation}{\f2 (}{\f2\cf11 ANIMATION_SCAN}{\f2 );\line   }{\f2\cf2 Wait}{\f2 (200);\line \}
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ANIMATION}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ANIMATION}}A{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ANIMATION}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ANIMATION}}}{\b\f1\fs24 ANIMATION\tab Resource Declaration - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 It is a
lso possible to define custom animations. This is done with a resource declaration (a new NQC feature). The declaration must be done at the global level (not within a task/sub/function), and must occur before the animation is used in the program. An anima
tion declaration looks like this:
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 ANIMATION}{\f2  }{\i\f2 name}{\f2  \{ }{\i\f2 data}{\f2  ... \};
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par Where }{\i\f1 name}{\f1  is a name you pick for the animation, and }{\i\f1 data}{\f1  is a series of bytes that determine the animation's appearance. The data bytes are interpreted in pairs, with the first byte of each p
air specifying a mask of the LEDs that should be turned on, and the second byte determining how many 10ms ticks that pattern should be displayed for. A pair of 255, 0 causes the animation to loop continuously.  You can also use the following two special c
ommands (in a comma-separated list) to define an animation:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Animation Commands
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 AnimateLED}{\f2 (led_mask, time)
\par }{\f2\cf2 RepeatAnimation}{\f2 ()
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par Once the animation is declared, its name may be used as an argument to }{\f2 SetAnimation()}{\f1 . Here is an example:
\par 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 ANIMATION}{\f2  my_animation \{ 
\par   }{\f2\cf2 AnimateLED}{\f2 (1, 10), 
\par   }{\f2\cf2 AnimateLED}{\f2 (2, 10),
\par   }{\f2\cf2 AnimateLED}{\f2 (4, 10), 
\par   }{\f2\cf2 AnimateLED}{\f2 (2, 10),
\par   }{\f2\cf2 RepeatAnimation}{\f2 ()
\par \};
\par 
\par }{\b\f2 task}{\f2  main()
\par \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetAnimation}{\f2 (my_animation);
\par }{\f2\cf2 Wait}{\f2 (500);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ANIMATELED}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  AnimateLED}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  AnimateLED}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  AnimateLED}}}{\b\f1\fs24 AnimateLED(led_mask, time)\tab Animation Macro - Spy
\par }{\f1 User animations contain LED patterns.  The led_mask parameter is a mask of the LEDs that should be turned on (see the }{\f1\uldb LED Value Constants}{\v\f1 IDH_API_SETLED}{\f1 ).  The time parameter is the number of 10 ms steps to d
isplay the pattern for, ranging from 1 to 255 (2.55 seconds).
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 AnimateLED(LED_RED1, 10)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_REPEATANIMATION}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RepeatAnimation}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RepeatAnimation}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RepeatAnimation}}}{\b\f1\fs24 RepeatAnimation()\tab Animation Macro - Spy
\par }{\f1 Repeat the user animation from the beginning.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 RepeatAnimation()
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SOUNDEFFECT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SOUNDEFFECT}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SOUNDEFFECT}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SOUNDEFFECT}}}{\b\f1\fs24 SOUNDEFFECT\tab Resource Declaration - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Furthermore, with Spybotics you can define up to 15 of your own sound effects using 
a resource declaration. The declaration must be done at the global level (not within a task/sub/function), and must occur before the sound effect is used in the program. A sound effect declaration looks like this:
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 SOUNDEFFECT}{\f2  }{\i\f2 name}{\f2  \{ }{\i\f2 data}{\f2  ... \};
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par Where }{\i\f1 name}{\f1  is a name you pick for the sound effect, and }{\i\f1 data}{\f1  is a series of bytes that determine the sound effect sound. Use the following special commands (in a comma-separated list) to define the sound effect.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Sound Effect Commands
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Gate}{\f2 (on, period)
\par }{\f2\cf2 GateOff}{\f2 ()
\par }{\f2\cf2 Glide}{\f2 (freq1, freq2, time)
\par }{\f2\cf2 Vibrato}{\f2 (freq1, freq2, time)
\par }{\f2\cf2 WaitEffect}{\f2 (time)
\par }{\f2\cf2 FixedWaitEffect}{\f2 (time)
\par }{\f2\cf2 Tone}{\f2 (freq, time)
\par }{\f2\cf2 FixedTone}{\f2 (freq, time)
\par }{\f2\cf2 RepeatEffect}{\f2 ()
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par Once the sound effect is declared, its name may be used as an argument to }{\f2 PlaySound()}{\f1 . Here is an example:
\par 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 SOUNDEFFECT}{\f2  my_effect \{ 
\par   }{\f2\cf2 Gate}{\f2 (1, 10),
\par   }{\f2\cf2 Glide}{\f2 (294, 660, 60),
\par   }{\f2\cf2 GateOff}{\f2 (),
\par   }{\f2\cf2 WaitEffect}{\f2 (50),
\par   }{\f2\cf2 Vibrato}{\f2 (294, 660, 60),
\par   }{\f2\cf2 FixedTone}{\f2 (500, 50),
\par   }{\f2\cf2 RepeatEffect}{\f2 ()
\par \};
\par 
\par }{\b\f2 task}{\f2  main()
\par \{
\par }\pard \ql \fi720\li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 PlaySound}{\f2 (my_effect);
\par }{\f2\cf2 Wait}{\f2 (500);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 \}
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GATE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Gate}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Gate}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Gate}}}{\b\f1\fs24 Gate(on, period)\tab Sound Effect Macro - Spy
\par }{\f1 User sound effects can be changed by turning the sound on and off rapidly.  The on parameter is that portion of the period during which sound is output.  The period parameter is the length of the gate cycle in 10 m
s steps from 1 to 255 (2.55 seconds).
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Gate}{\f2 (1, 10)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GATEOFF}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
$}{\f1  GateOff}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GateOff}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GateOff}}}{\b\f1\fs24 GateOff()\tab Sound Effect Macro - Spy
\par }{\f1 Stop gating the sound effect.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GateOff}{\f2 ()
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GLIDE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  Glide}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Glide}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Glide}}}{\b\f1\fs24 Glide(frequency1, frequency2, duration)\tab Sound Effect Macro - Spy
\par }{\f1 User sound effects can contain sounds which glide from one frequency to another.  The two frequency parameters can range from 32 to 20000 Hz.  The duration parameter is the time to glide from the first frequency to the secon
d in 10 ms steps from 1 to 255 (2.55 seconds).
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Glide}{\f2 (294, 660, 60)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_VIBRATO}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
$}{\f1  Vibrato}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Vibrato}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Vibrato}}}{\b\f1\fs24 Vibrato(frequency1, frequency2, duration)\tab Sound Effect Macro - Spy
\par }{\f1 User sound effects can contain vibratos, where the sound alternates rapidly between two frequencies.  The two frequency parameters can range from 32 to 20000 Hz.  The duration parameter is the number of 10 ms steps from 1 to 255 (2.55 seconds).

\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Vibrato}{\f2 (294, 660, 60)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WAITEFFECT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  WaitEffect}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WaitEffect}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WaitEffect}}}{\b\f1\fs24 WaitEffect(duration)\tab Sound Effect Macro - Spy
\par }{\f1 User sound effects can contain wait periods.  The duration parameter is the length of the wait in 10 ms steps from 1 to 255 (2.55 seconds).
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 WaitEffect}{\f2 (60)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FIXEDWAITEFFECT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  FixedWaitEffect}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  FixedWaitEffect}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  FixedWaitEffect}}}{\b\f1\fs24  FixedWaitEffect(duration)\tab Sound Effect Macro - Spy
\par }{\f1 User sound effects can contain fixed wait periods.  The duration parameter is the length of the wait in 10 ms steps from 1 to 255 (2.55 seconds).  This wait period will be unaffected by adjustments to the sound effect time.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 FixedWaitEffect}{\f2 (60)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_TONE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Tone}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Tone}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Tone}}}{\b\f1\fs24 Tone(frequency, duration)\tab Sound Effect Macro - Spy
\par }{\f1 User sound effects can contain simple tones.  The frequency parameter is the tone to be played, ranging from 32 to 20000 Hz.  The duration parameter is the length of the wait in 10 ms steps from 1 to 255 (2.55 seconds).
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Tone}{\f2 (440, 60)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FIXEDTONE}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  FixedTone}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  FixedTone}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  FixedTone}}}{\b\f1\fs24 FixedTone(frequency, duration)\tab Sound Effect Macro - Spy
\par }{\f1 User sound effects can contain fixed wait periods.  The frequency parameter is the tone to be played, ranging from 32 to 20000 Hz.  The duration parameter is the length of the wait in 10 ms steps from 1 to 255 (2.55 seconds).  This wait period
 will be unaffected by adjustments to the sound effect sound or time.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 FixedTone}{\f2 (440, 60)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_REPEATEFFECT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RepeatEffect}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RepeatEffect}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RepeatEffect}}}{\b\f1\fs24 RepeatEffect()\tab Sound Effect Macro - Spy
\par }{\f1 Repeat the user sound effect from the beginning.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 RepeatEffect}{\f2 ()
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EFFECTSOUND}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  EffectSound}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EffectSound}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EffectSound}}}{\b\f1\fs24 EffectSound()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value of the sound effect frequency adjustment register.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EffectSound}{\f2 (); // read the sound effect freq adj
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EFFECTTIME}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  EffectTime}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EffectTime}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EffectTime}}}{\b\f1\fs24 EffectTime()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value of the sound effect time adjustment register.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EffectTime}{\f2 (); // read the sound effect time adj
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETEFFECTSOUND}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetEffectSound}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetEffectSound}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetEffectSound}}}{\b\f1\fs24  SetEffectSound(pct)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the value of the sound effect frequency adjustment register.  The parameter can range from 0 to 255 where 100 = 1.0 * the frequency.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEffectSound}{\f2 (50); // cut freq in half (50%)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SETEFFECTTIME}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetEffectTime}}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetEffectTime}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetEffectTime}}}{\b\f1\fs24 SetEffectTime(pct)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the value of the sound effect time adjustment register.  The parameter can range from 0 to 255 where 100 = 1.0 * the duration.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEffectTime}{\f2 (50); // cut sound duration in half (50%)
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ClearWorld}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  ClearWorld}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearWorld}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearWorld}}}{\b\f1\fs24 ClearWorld()\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Clear the contents of the world relationship table.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearWorld}{\f2 (); // empty world table
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FindWorld}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  FindWorld}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  FindWorld;REL_GT;REL_LT;REL_EQ;REL_NE}}K{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  FindWorld;REL_GT;REL_LT;REL_EQ;REL_NE}}}{\b\f1\fs24 FindWorld(v, relationSource, criteria, threshold)
\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Sets variable v to the next entry in the world relationship table that matches the criteria specified.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 task}{\f2  main()\line \{\line   }{\b\f2 int}{\f2  v = -1;\line   }{\f2\cf2 ClearWorld}{\f2 ();\line   }{\f2\cf2 FindWorld}{\f2 (v, }{\f2\cf11 SPY_RANGE}{\f2 , }{
\f2\cf11 REL_GT}{\f2 , }{\f2\cf11 RANGE_NOWHERE}{\f2 );\line   }{\b\f2 while}{\f2  (v != -1)\line   \{\line     }{\f2\cf2 SetWorldNote}{\f2 (v, 40);\line     }{\f2\cf2 SetTargetID}{\f2 (v);\line     }{\f2\cf2 FindWorld}{\f2 (v, }{\f2\cf11 SPY_RANGE}{\f2 
, }{\f2\cf11 REL_GT}{\f2 , }{\f2\cf11 RANGE_NOWHERE}{\f2 );\line   \}
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul 
\par }{\b\f1\ul\lang1036\langfe1033\langnp1036 Criteria Constants
\par }{\f1\cf11\lang1036\langfe1033\langnp1036 REL_GT, REL_LT, REL_EQ, REL_NE
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_Target}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $
}{\f1  Target}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 Target;SPY_TARGETID;SPY_NOTE;SPY_LINKID;SPY_RANGE;SPY_DIRECTION;SPY_ASPECT;SPY_INFO;SPY_SHORTID}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super K}{\f1  Target;SPY_TARGETID;SPY_NOTE;SPY_LINKID;SPY_RANGE;SPY_DIRECTION;SPY_ASPECT;SPY_INFO;SPY_SHORTID}}}{\b\f1\fs24 Target(n)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value from the specified relation source for the current target.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Target}{\f2 (}{\f2\cf11 SPY_RANGE}{\f2 ); // get the target range
\par 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Relation Source Constants
\par }{\f1\cf11 SPY_TARGETID, SPY_NOTE, SPY_LINKID, SPY_RANGE, SPY_DIRECTION, SPY_ASPECT, SPY_INFO, SPY_SHORTID
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetTargetID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetTargetID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTargetID;TARGET_NONE;ID_BOT_MIN;ID_BOT_MAX}}K
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetTargetID;TARGET_NONE;ID_BOT_MIN;ID_BOT_MAX}}}{\b\f1\fs24 SetTargetID(v)\tab 
Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the current target based on the value of variable v.  Setting the target to }{\f2\cf11 TARGET_NONE}{\f1  stops tracking.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 int}{\f2  x = 5;}{\f2\cf2 \line SetTargetID}{\f2 (x); // set the target ID
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul ID Constants
\par }{\f1\cf11 TARGET_NONE, ID_NONE, ID_CTRL1, ID_CTRL2, ID_CTRL3, ID_CTRL4, ID_CTRL5, ID_CTRL6, ID_PC, ID_BOT_MIN, ID_BOT_MAX}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetTargetNote}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetTargetNote}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTargetNote}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetTargetNote}}}{\b\f1\fs24 SetTargetNote(v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the current target's game note.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetTargetNote}{\f2 (50); // set the target's note to 50
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GetWorld}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GetWorld}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GetWorld}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GetWorld}}}{\b\f1\fs24 GetWorld(relationSource, target, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set variable v to the value in the relationSource for the specified target.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GetWorld}{\f2 (SPY_RANGE, t, v); // set v to target t's range
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_World}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  World}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  World}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  World}}}{\b\f1\fs24 World(relationSource, target)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the value in the relationSource for the specified target.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 World}{\f2 (SPY_RANGE, t); // set x to target t's range
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GetWorldAspect}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GetWorldAspect}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 GetWorldAspect;ASPECT_FRONT_LEFT;ASPECT_FRONT;ASPECT_FRONT_RIGHT;ASPECT_BACK_RIGHT;ASPECT_BACK;ASPECT_BACK_LEFT}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GetWorldAspect;ASPECT_FRONT_LEFT;ASPECT_FRONT;ASPECT_FRONT_RIGHT;ASPECT_BACK_RIGHT;ASPECT_BACK;ASPECT_BACK_LEFT}}}{\b\f1\fs24 GetWorldAspect(t, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set variable v to the specified target's aspect.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GetWorldAspect}{\f2 (t, v); // set v to target t's aspect
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Aspect Constants
\par }{\f1\cf11 ASPECT_FRONT_LEFT, ASPECT_FRONT, ASPECT_FRONT_RIGHT, ASPECT_BACK_RIGHT, ASPECT_BACK, ASPECT_BACK_LEFT
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WorldAspect}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  WorldAspect}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WorldAspect}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WorldAspect}}}{\b\f1\fs24 WorldAspect(t)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the specified target's aspect.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 WorldAspect}{\f2 (t); // set x to target t's aspect
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GetWorldDirection}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GetWorldDirection}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GetWorldDirection;DIRECTION_LEFT;DIRECTION_L
EFT_OF_CENTER;DIRECTION_CENTER;DIRECTION_RIGHT_OF_CENTER;DIRECTION_RIGHT}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 GetWorldDirection;DIRECTION_LEFT;DIRECTION_LEFT_OF_CENTER;DIRECTION_CENTER;DIRECTION_RIGHT_OF_CENTER;DIRECTION_RIGHT}}}{\b\f1\fs24 GetWorldDirection(t, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set variable v to the value in the relationSource for the specified target.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GetWorldDirection}{\f2 (t, v); // set v to target t's direction
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Direction Constants
\par }{\f1\cf11 DIRECTION_LEFT, DIRECTION_LEFT_OF_CENTER, DIRECTION_CENTER, DIRECTION_RIGHT_OF_CENTER, DIRECTION_RIGHT
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WorldDirection}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  WorldDirection}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WorldDirection}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WorldDirection}}}{\b\f1\fs24 WorldDirection(t)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the specified target's direction.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 WorldDirection}{\f2 (t); // set x to target t's direction
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GetWorldLinkID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GetWorldLinkID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GetWorldLinkID}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GetWorldLinkID}}}{\b\f1\fs24 GetWorldLinkID(t, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set variable v to the specified target's link ID.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GetWorldLinkID}{\f2 (t, v); // set v to target t's link ID
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WorldLinkID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  WorldLinkID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WorldLinkID}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WorldLinkID}}}{\b\f1\fs24 WorldLinkID(t)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the specified target's link ID.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 WorldLinkID}{\f2 (t); // set x to target t's link ID
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GetWorldNote}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GetWorldNote}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GetWorldNote}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GetWorldNote}}}{\b\f1\fs24 GetWorldNote(t, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set variable v to the specified target's note.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GetWorldNote}{\f2 (t, v); // set v to target t's note
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WorldNote}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  WorldNote}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WorldNote}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WorldNote}}}{\b\f1\fs24 WorldNote(t)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the specified target's note.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 WorldNote}{\f2 (t); // set x to target t's note
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GetWorldRange}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GetWorldRange}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 GetWorldRange;RANGE_NOWHERE;RANGE_ANYWHERE;RANGE_THERE;RANGE_HERE}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 GetWorldRange;RANGE_NOWHERE;RANGE_ANYWHERE;RANGE_THERE;RANGE_HERE}}}{\b\f1\fs24 GetWorldRange(t, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set variable v to the specified target's range.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GetWorldRange}{\f2 (t, v); // set v to target t's range
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Range Constants
\par }{\f1\cf11 RANGE_NOWHERE, RANGE_ANYWHERE, RANGE_THERE, RANGE_HERE
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WorldRange}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  WorldRange}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WorldRange}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WorldRange}}}{\b\f1\fs24 WorldRange(t)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the specified target's range.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 WorldRange}{\f2 (t); // set x to target t's range
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_GetWorldShortID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  GetWorldShortID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GetWorldShortID}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GetWorldShortID}}}{\b\f1\fs24 GetWorldShortID(t, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set variable v to the specified target's short ID.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 GetWorldShortID}{\f2 (t, v); // set v to target t's short ID
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_WorldShortID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  WorldShortID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WorldShortID}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WorldShortID}}}{\b\f1\fs24 WorldShortID(t)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the specified target's short ID.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 WorldShortID}{\f2 (t); // set x to target t's short ID
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetWorldNote}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetWorldNote}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetWorldNote}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetWorldNote}}}{\b\f1\fs24 SetWorldNote(t, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the specified target's note to the value v.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetWorldNote}{\f2 (t, v); // set target t's note
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_Pop}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Pop}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Pop}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Pop}}}{\b\f1\fs24 Pop(n)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Pop n entries off the stack.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Pop}{\f2 (2); // pop 2 entries off the stack
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_Push}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{
\f1  Push}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Push}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Push}}}{\b\f1\fs24 Push(n)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Push a value onto the stack
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Push}{\f2 (v); // push the contents of variable v onto the stack
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_Stack}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}
{\f1  Stack}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Stack}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Stack}}}{\b\f1\fs24 Stack(n)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value at the specified stack index.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Stack}{\f2 (0); // set x to first stack entry
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetStack}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetStack}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetStack}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetStack}}}{\b\f1\fs24 SetStack(i, v)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the stack entry specified by index to the value v.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetStack}{\f2 (0, 4); // set the first stack entry to 4
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_TimerState}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  TimerState}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  TimerState}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  TimerState}}}{\b\f1\fs24 TimerState(n)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current running state of timer n.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 TimerState}{\f2 (0); // set x to timer 0's state
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetTimerState}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetTimerState}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTimerState;TIMER_RUNNING;TIMER_STOPPED}}K
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetTimerState;TIMER_RUNNING;TIMER_STOPPED}}}{\b\f1\fs24 SetTimerState(n, s)\tab 
Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the running state of the specified timer. 
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetTimerState}{\f2 (0, TIMER_STOPPED); // stop timer 0
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul State Constants
\par }{\f1\cf11 TIMER_RUNNING, TIMER_STOPPED
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_EEPROM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $
}{\f1  EEPROM}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EEPROM}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EEPROM}}}{\b\f1\fs24 EEPROM(const int &n)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value stored at the EEPROM location specified by index (either directly or indirectly).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EEPROM}{\f2 (10); // read contents of EEPROM location 10
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetEEPROM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetEEPROM}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetEEPROM}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetEEPROM}}}{\b\f1\fs24 SetEEPROM(const int &i, const int &d)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the EEPROM location specified by index (directly or indirectly) to the value d.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEEPROM}{\f2 (0, 5); // set EEPROM location 0 to 5\line }{\b\f2 int}{\f2  i = 3;\line }{\f2\cf2 SetEEPROM}{\f2 (i, }{\f2\cf2 TimerState}{\f2 
(0)); // set EEPROM location 3
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_CurrentTaskID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  CurrentTaskID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CurrentTaskID}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CurrentTaskID}}}{\b\f1\fs24 CurrentTaskID()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current task ID.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 CurrentTaskID}{\f2 (); // read current task ID
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RxMessageLock}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RxMessageLock}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RxMessageLock}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RxMessageLock}}}{\b\f1\fs24 RxMessageLock()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the receive buffer locking value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RxMessageLock}{\f2 (); // read the message locking value
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetRxMessageLock}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetRxMessageLock}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetRxMessageLock;MSG_NONE;MSG_IR;MSG_PC}}K
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetRxMessageLock;MSG_NONE;MSG_IR;MSG_PC}}}{\b\f1\fs24 SetRxMessageLock(lock)\tab 
Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the receive buffer locking value.  To lock both IR and PC buffers use }{\f2 MSG_IR+MSG_PC.}{\f1 
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetRxMessageLock}{\f2 (}{\f2\cf11 MSG_IR}{\f2 ); // lock the IR message buffer
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Receive Message Locking Constants
\par }{\f1\cf11 MSG_NONE}{\f1 , }{\f1\cf11 MSG_IR}{\f1 , }{\f1\cf11 MSG_PC}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RxMessageIndex}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RxMessageIndex}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RxMessageIndex}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RxMessageIndex}}}{\b\f1\fs24 RxMessageIndex()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the index for the latest NewEntry event.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RxMessageIndex}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RxMessageChannel}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RxMessageChannel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RxMessageChannel}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RxMessageChannel}}}{\b\f1\fs24 RxMessageChannel()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the channel containing the latest received message.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RxMessageChannel}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RxMessageID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RxMessageID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RxMessageID}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RxMessageID}}}{\b\f1\fs24 RxMessageID(channel)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Extract an ID from a received IR or PC message and convert it into an index.  The desired channel is }{\f2\cf11 MSG_IR}{\f1  or }{\f2\cf11 MSG_PC}{\f2 .}{\f1 
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RxMessageID}{\f2 (}{\f2\cf11 MSG_IR}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RxMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RxMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RxMessage;MSG_INDEX;MSG_COMMAND;MSG_HI_BYTE;MSG_LO_BYTE
}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RxMessage;MSG_INDEX;MSG_COMMAND;MSG_HI_BYTE;MSG_LO_BYTE}}}{\b\f1\fs24 
RxMessage(channel, byte)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the contents of a received IR or PC message (4 bytes total).  The desired channel is }{\f2\cf11 MSG_IR}{\f1  or }{\f2\cf11 MSG_PC}{\f2 .  }{\f1 The desired byte is spe
cified using }{\f1\cf11 MSG_INDEX}{\f1 , }{\f1\cf11 MSG_COMMAND}{\f1 , }{\f1\cf11 MSG_HI_BYTE}{\f1 , or }{\f1\cf11 MSG_LO_BYTE}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\b\f2 if}{\f2  (}{\f2\cf2 RxMessage}{\f2 (}{\f2\cf11 MSG_IR}{\f2 , }{\f2\cf11 MSG_COMMAND}{\f2 ) == }{\f2\cf11 COMMAND_CONTROLLER}{\f2 )\line \{\line   x = }{\f2\cf2 
RxMessage}{\f2 (}{\f2\cf11 MSG_IR}{\f2 , }{\f2\cf11 MSG_HI_BYTE}{\f2 );\line \}
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_PingControl}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  PingControl}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  PingControl}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  PingControl}}}{\b\f1\fs24 PingControl(n)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value of the ping control registers (n = 0..2).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 PingControl}{\f2 (1); // read the current ping interval
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_PingData}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  PingData}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  PingData}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  PingData}}}{\b\f1\fs24 PingData()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current 8 bit information for ping messages
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 PingData}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetPingData}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetPingData}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetPingData}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetPingData}}}{\b\f1\fs24 SetPingData(d)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the 8 bit information for ping messages.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPingData}{\f2 (55); // send the value 55 when pinging
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_PingInterval}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  PingInterval}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  PingInterval}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  PingInterval}}}{\b\f1\fs24 PingInterval()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current ping interval.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 PingInterval}{\f2 ();
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetPingInterval}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetPingInterval}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetPingInterval}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetPingInterval}}}{\b\f1\fs24 SetPingInterval(interval)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the ping interval in 10ms steps.  Setting the interval to zero will disable pinging.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPingInterval}{\f2 (0); // disable pings
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_PingID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $
}{\f1  PingID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  PingID}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  PingID}}}{\b\f1\fs24 PingID()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the Spybotics ping ID number.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 PingID}{\f2 (); // x = my ping ID
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_BeaconControl}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  BeaconControl}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  BeaconControl}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  BeaconControl}}}{\b\f1\fs24 BeaconControl(n)\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the value of the beacon control registers (n = 0..3).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 BeaconControl}{\f2 (1); // read the RC receive channel
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_LinkID}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $
}{\f1  LinkID}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  LinkID;ID_NONE;ID_CTRL1;ID_CTRL2;ID_CTRL3;ID_CTRL4;ID_CTRL5;ID_CTRL6;ID_PC
}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  LinkID;ID_NONE;ID_CTRL1;ID_CTRL2;ID_CTRL3;ID_CTRL4;ID_CTRL5;ID_CTRL6;ID_PC}}}{
\b\f1\fs24 LinkID()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the link ID (0-7; 0 = no link, 1-6 control unit ID, 7 = PC).
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 LinkID}{\f2 (); // read link ID
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul ID Constants
\par }{\f1\cf11 ID_NONE, ID_CTRL1, ID_CTRL2, ID_CTRL3, ID_CTRL4, ID_CTRL5, ID_CTRL6, ID_PC}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RCRxChannel}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RCRxChannel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RCRxChannel}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RCRxChannel}}}{\b\f1\fs24 RCRxChannel()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the RC receive channel.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RCRxChannel}{\f2 (); // read RC receive channel
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetRCRxChannel}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetRCRxChannel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SetRCRxChannel;RC_CHANNEL_BROADCAST;RC_CHANNEL_1;RC_CHANNEL_2;RC_CHANNEL_3;RC_CHANNEL_DISABLED}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
K}{\f1  SetRCRxChannel;RC_CHANNEL_BROADCAST;RC_CHANNEL_1;RC_CHANNEL_2;RC_CHANNEL_3;RC_CHANNEL_DISABLED}}}{\b\f1\fs24 SetRCRxChannel(channel)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the RC receive channel.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetRCRxChannel}{\f2 (}{\f2\cf11 RC_CHANNEL_1}{\f2 );
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul RC Channel Constants
\par }{\f1\cf11 RC_CHANNEL_BROADCAST, RC_CHANNEL_1, RC_CHANNEL_2, RC_CHANNEL_3, RC_CHANNEL_DISABLED
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RCTxChannel}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RCTxChannel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RCTxChannel}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RCTxChannel}}}{\b\f1\fs24 RCTxChannel()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the RC transmit channel.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RCTxChannel}{\f2 (); // read RC transmit channel
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetRCTxChannel}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetRCTxChannel}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetRCTxChannel}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetRCTxChannel}}}{\b\f1\fs24 SetRCTxChannel(channel)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the RC transmit channel.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetRCTxChannel}{\f2 (}{\f2\cf11 RC_CHANNEL_1}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RCTxMode}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RCTxMode}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RCTxMode}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RCTxMode}}}{\b\f1\fs24 RCTxMode()\tab Value - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Return the current RC transmit mode.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RCTxMode}{\f2 (); // read RC transmit mode
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SetRCTxMode}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetRCTxMode}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetRCTxMode;RCTXMODE_SINGLE_SHOT;RCTXMODE_CONTINUOUS}
}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetRCTxMode;RCTXMODE_SINGLE_SHOT;RCTXMODE_CONTINUOUS}}}{\b\f1\fs24 SetRCTxMode(mode)
\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the RC transmit mode.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetRCTxMode}{\f2 (}{\f2\cf11 RCTXMODE_SINGLE_SHOT}{\f2 );
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul RC Tx Mode Constants
\par }{\f1\cf11 RCTXMODE_SINGLE_SHOT, RCTXMODE_CONTINUOUS
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_StartTask}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  StartTask}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  StartTask}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  StartTask}}}{\b\f1\fs24 StartTask(task)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Start a task by numeric value rather than by name.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 StartTask}{\f2 (9); // start task number 9
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_StopTask}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  StopTask}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  StopTask}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  StopTask}}}{\b\f1\fs24 StopTask(task)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Stop a task by numeric value rather than by name.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 StopTask}{\f2 (9); // stop task number 9
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_Action}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  Action}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  Action}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  Action}}}{\b\f1\fs24 Action(nSound, nDisplay, nMovement, nRepeat, nTime)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Bu
ilt-in ROM subroutine number 44.  This subroutine plays any combination of sound, LED animation, and movement, like a multimedia presentation.  nSound is the sound to play (0-79, -1 = no sound).  nDisplay is the LED animation to play (0-15, -1 = no animat
i
on).  nMovement is the Spybot motion (see BasicMove, FancyMove, RandomMove, SlowDownMove, and SpeedUpMove) with -1 meaning no movement.  nRepeat is the number of times to repeat the motion.  nTime is the time to wait if nMovement = -1, otherwise it is pas
sed on to the movement subroutines.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Action}{\f2 (}{\f2\cf11 SOUND_GEIGER}{\f2 , }{\f2\cf11 ANIMATION_FLASH}{\f2 , -1, 0, 300);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_Disp}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  Disp}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 Disp}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Disp}}}{\b\f1\fs24 Disp(display)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 42.  This subroutine displays one of the LED animations.  Passing an undefined user animation will turn the display off (8-15).
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Disp}{\f2 (}{\f2\cf11 ANIMATION_FLASH}{\f2 );
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_BasicMove}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  BasicMove}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  BasicMove;MOVE_BASIC_FORWARD;MOVE_BA
SIC_BACKWARD;MOVE_BASIC_SPIN_LEFT;MOVE_BASIC_SPIN_RIGHT;MOVE_BASIC_TURN_LEFT;MOVE_BASIC_TURN_RIGHT;MOVE_BASIC_AVOID_LEFT;MOVE_BASIC_AVOID_RIGHT;MOVE_BASIC_REST;MOVE_BASIC_STOP}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  BasicMove;MOVE_BASIC_FORWARD;MOVE_BASIC_BACKWARD;MOVE_BASIC_SPIN_LEFT;MOVE_BA
SIC_SPIN_RIGHT;MOVE_BASIC_TURN_LEFT;MOVE_BASIC_TURN_RIGHT;MOVE_BASIC_AVOID_LEFT;MOVE_BASIC_AVOID_RIGHT;MOVE_BASIC_REST;MOVE_BASIC_STOP}}}{\b\f1\fs24 BasicMove(move, time)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 43.  This subroutine performs the requested motion fo
r the specified duration.  The motors are not floated or braked and motor power is not restored on exit.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 BasicMove}{\f2 (}{\f2\cf11 MOVE_BASIC_AVOID_LEFT}{\f2 , 500);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Basic Motion Constants
\par }{\f1\cf11 MOVE_BASIC_FORWARD, MOVE_BASIC_BACKWARD, MOVE_BASIC_SPIN_LEFT, MOVE_BASIC_SPIN_RIGHT, MOVE_BASIC_TURN_LEFT, MOVE_BASIC_TURN_RIGHT, MOVE_BASIC_AVOID_LEFT, MOVE_BASIC_AVOID_RIGHT, MOVE_BASIC_REST, MOVE_BASIC_STOP
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_FancyMove}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  FancyMove}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 FancyMove;MOVE_FANCY_ZIGZAG;MOVE_FANCY_SHAKE;MOVE_FANCY_SCAN;MOVE_FANCY_STEP;MOVE_FANCY_STEP_BACK;MOVE_FANCY_SEARCH;MOVE_FANCY_FAKE_LEFT;MOVE_FANCY_RAKE_RIGHT;MOVE_FANCY_BUG_FORWARD;MOVE_FANCY_LAZY;MOVE_FANCY_WALK;MOVE_FANCY_WALK_BACK;MOVE_FANCY_DANCE}}K
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1 
 FancyMove;MOVE_FANCY_ZIGZAG;MOVE_FANCY_SHAKE;MOVE_FANCY_SCAN;MOVE_FANCY_STEP;MOVE_FANCY_STEP_BACK;MOVE_FANCY_SEARCH;MOVE_FANCY_FAKE_LEFT;MOVE_FANCY_RAKE_RIGHT;MOVE_FANCY_BUG_FORWARD;MOVE_FANCY_LAZY;MOVE_FANCY_WALK;MOVE_FANCY_WALK_BACK;MOVE_FANCY_DANCE}}}
{\b\f1\fs24 FancyMove(move, time)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 47.  This subroutine performs the
 requested motion for the specified duration.  The motors are not floated or braked and motor power is not restored on exit.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 FancyMove}{\f2 (}{\f2\cf11 MOVE_FANCY_ZIGZAG}{\f2 , 500);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Fancy Motion Constants
\par }{\f1\cf11 MOVE_FANCY_ZIGZAG, MOVE_FANCY_SHAKE, MOVE_FANCY_SCAN, MOVE_FANCY_STEP, MO
VE_FANCY_STEP_BACK, MOVE_FANCY_SEARCH, MOVE_FANCY_FAKE_LEFT, MOVE_FANCY_RAKE_RIGHT, MOVE_FANCY_BUG_FORWARD, MOVE_FANCY_LAZY, MOVE_FANCY_WALK, MOVE_FANCY_WALK_BACK, MOVE_FANCY_DANCE
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RandomMove}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RandomMove}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RandomMove;MOVE_RANDOM_FORWARD;MOVE
_RANDOM_BACKWARD;MOVE_RANDOM_SPIN_LEFT;MOVE_RANDOM_SPIN_RIGHT;MOVE_RANDOM_TURN_LEFT;MOVE_RANDOM_TURN_RIGHT;MOVE_RANDOM_REST}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RandomMove;MOVE_RANDOM_FORWARD;MOVE_RANDOM_BACKWARD;MOVE_RANDOM_SPIN_LEFT;MOVE_RANDOM_SPIN_RIGHT;MOVE_RANDOM_TURN_LEFT;MOVE_RANDOM_TURN_RIGHT;MOVE_RANDOM_REST}}}{\b\f1\fs24 
RandomMove(move, time)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 46.  This subroutine performs the requested motion for the specified du
ration.  The motors are not floated or braked and motor power is not restored on exit.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 RandomMove}{\f2 (}{\f2\cf11 MOVE_RANDOM_FORWARD}{\f2 , 500);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul Random Motion Constants
\par }{\f1\cf11 MOVE_RANDOM_FORWARD, MOVE_RANDOM_BACKWARD, MOVE_RANDOM_SPIN_LEFT, MOVE_RANDOM_SPIN_RIGHT, MOVE_RANDOM_TURN_LEFT, MOVE_RANDOM_TURN_RIGHT, MOVE_RANDOM_REST
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SlowDownMove}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SlowDownMove}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SlowDownMove;MOVE_SLOWDOWN_FORWARD;MOVE_SLOWDOWN_BACKWARD;MOVE_SLOWDOWN_SPIN_LEFT;MOVE_SLOWDOWN_SPIN_RIGHT}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super K}{\f1  SlowDownMove;MOVE_SLOWDOWN_FORWARD;MOVE_SLOWDOWN_BACKWARD;MOVE_SLOWDOWN_SPIN_LEFT;MOVE_SLOWDOWN_SPIN_RIGHT}}}{\b\f1\fs24 SlowDownMove(move, time)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 48.  This subroutine performs the requested motion for the specified duration
.  The motors are not floated or braked and motor power is not restored on exit.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SlowDownMove}{\f2 (}{\f2\cf11 MOVE_SLOWDOWN_FORWARD}{\f2 , 500);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul SlowDown Motion Constants
\par }{\f1\cf11 MOVE_SLOWDOWN_FORWARD, MOVE_SLOWDOWN_BACKWARD, MOVE_SLOWDOWN_SPIN_LEFT, MOVE_SLOWDOWN_SPIN_RIGHT
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SpeedUpMove}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SpeedUpMove}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SpeedUpMove;MOVE_SPEEDUP_FORWARD;MOVE_SPEEDUP_BACKWARD;MOVE_SPEEDUP_SPIN_LEFT;MOVE_SPEEDUP_SPIN_RIGHT}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super K}{\f1  SpeedUpMove;MOVE_SPEEDUP_FORWARD;MOVE_SPEEDUP_BACKWARD;MOVE_SPEEDUP_SPIN_LEFT;MOVE_SPEEDUP_SPIN_RIGHT}}}{\b\f1\fs24 SpeedUpMove(move, time)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
Built-in ROM subroutine number 49.  This subroutine performs the requested motion for the specified duration.  The motors are not floated or braked and motor power is not restored on exit.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SpeedUpMove}{\f2 (}{\f2\cf11 MOVE_SPEEDUP_FORWARD}{\f2 , 500);
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f1\ul SpeedUp Motion Constants
\par }{\f1\cf11 MOVE_SPEEDUP_FORWARD, MOVE_SPEEDUP_BACKWARD, MOVE_SPEEDUP_SPIN_LEFT, MOVE_SPEEDUP_SPIN_RIGHT
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_Sum2Mem}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
$}{\f1  Sum2Mem}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Sum2Mem}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Sum2Mem}}}{\b\f1\fs24 Sum2Mem(mem, value)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 50.  This subroutine adds value to a 2-byte location in EEPROM.  The value is stored low byte first.  No overflow checking is performed.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Sum2Mem}{\f2 (50, 400);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_Sum4Mem}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super 
$}{\f1  Sum4Mem}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Sum4Mem}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Sum4Mem}}}{\b\f1\fs24 Sum4Mem(mem, value)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
Built-in ROM subroutine number 51.  This subroutine adds value to a 4-byte location in EEPROM.  The value is stored least significant byte first.  No overflow checking is performed.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Sum4Mem}{\f2 (50, 400);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SendAllRangeMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SendAllRangeMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  SendAllRangeMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  SendAllRangeMessage}}}{\b\f1\fs24 SendAllRangeMessage(nMessage, nData)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 38.  This subroutine sends nMessage to all Spybots in the world relation table that are in the here, there
, or anywhere zones with the actual Spybot range as the high byte of each message.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendAllRangeMessage}{\f2 (50, 40);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SendRCXMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SendRCXMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A
}{\f1  SendRCXMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SendRCXMessage}}}{\b\f1\fs24 SendRCXMessage(nMessage)\tab 
Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
Built-in ROM subroutine number 37.  This subroutine sends an RCX message at 2400 baud with bi-phase encoding and sum checksum.  These messages can be received by an RCX, Swan or Scout.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendRCXMessage}{\f2 (50);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\b\f1\fs24 \page }{\cs16\b\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_SendSpybotMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SendSpybotMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SendSpybotMessage}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SendSpybotMessage}}}{\b\f1\fs24 SendSpybotMessage(nIndex, nCmd, nHiByte, nLoByte)\tab Function - Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Built-in ROM subroutine number 34.  This subroutine sends a message to a Spybot.  If nIndex is a controller or PC then it does nothing.  nIndex is th
e index of the Spybot in the world relation table (0-15), }{\f1\cf11 INDEX_LINKCAST}{\f1 , or }{\f1\cf11 INDEX_BROADCAST}{\f1 .
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotMessage}{\f2 (}{\f2\cf11 INDEX_LINKCAST}{\f2 , 50, 0, 10);
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_EnableOutput}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  EnableOutput}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EnableOutput}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EnableOutput}}}{\b\f1\fs24 EnableOutput(const int outputs)\tab Function \endash  RCX2, Scout, Spy
\par }{\f1 A helper function for enabling the specified outputs.  Use }{\f2\cf11 OUT_A}{\f1 , }{\f2\cf11 OUT_B}{\f1 , or }{\f2\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 EnableOutput}{\f2 (}{\f2\cf11 OUT_A}{\f2 +}{\f2\cf11 OUT_B}{\f2 ); }{\i\f2\cf17 // enable output OUT_A and OUT_B}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 This is the same as using }{\f2\cf2 SetGlobalOutput}{\f1  with the }{\f2\cf11 OUT_ON}{\f1  mode.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DisableOutput}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  DisableOutput}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  DisableOutput}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  DisableOutput}}}{\b\f1\fs24 DisableOutput(const int outputs)\tab Function - RCX2, Scout, Spy}{\f1 
\par A helper function for disabling the specified outputs.  Use }{\f2\cf11 OUT_A}{\f1 , }{\f2\cf11 OUT_B}{\f1 , or }{\f2\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 DisableOutput}{\f2 (}{\f2\cf11 OUT_A}{\f2 +}{\f2\cf11 OUT_B}{\f2 ); }{\i\f2\cf17 // disable output OUT_A and OUT_B}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 This is the same as using }{\f2\cf2 SetGlobalOutput}{\f1  with the }{\f2\cf11 OUT_OFF}{\f1  mode.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_InvertOutput}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{
\f1\lang1036\langfe1033\langnp1036  InvertOutput}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{
\f1\lang1036\langfe1033\langnp1036  InvertOutput}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{
\f1\lang1036\langfe1033\langnp1036  InvertOutput}}}{\b\f1\fs24 InvertOutput(const int outputs)\tab Function - RCX2, Scout, Spy
\par }{\f1 A helper function for inverting the direction of the specified outputs.  Use }{\f2\cf11 OUT_A}{\f1 , }{\f2\cf11 OUT_B}{\f1 , or }{\f2\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 InvertOutput}{\f2 (}{\f2\cf11 OUT_A}{\f2 +}{\f2\cf11 OUT_B}{\f2 ); }{\i\f2\cf17 // reverse direction for OUT_A and OUT_B}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 This is the same as using }{\f2\cf2 SetGlobalDirection}{\f1  with the }{\f2\cf11 OUT_REV}{\f1  direction.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_ObvertOutput}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  ObvertOutput}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  ObvertOutput}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  ObvertOutput}}}{\b\f1\fs24 ObvertOutput(const int outputs)\tab Function - RCX2, Scout, Spy
\par }{\f1 A helper function for returning the direction of the specified outputs to forward.  Use }{\f2\cf11 OUT_A}{\f1 , }{\f2\cf11 OUT_B}{\f1 , or }{\f2\cf11 OUT_C}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ObvertOutput}{\f2 (}{\f2\cf11 OUT_A}{\f2 +}{\f2\cf11 OUT_B}{\f2 ); }{\i\f2\cf17 // normal direction for OUT_A and OUT_B}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 This is the same as using }{\f2\cf2 SetGlobalDirection}{\f1  with the }{\f2\cf11 OUT_FWD}{\f1  direction.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_Indirect}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  Indirect}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  Indirect}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  Indirect}}}{\b\f1\fs24 Indirect(const int n)\tab Value - RCX2, Spy
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the value of a variable indirectly.  The parameter is the address of a global variable whose value is the address of the variable you wish to read.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Indirect}{\f2 (0); }{\i\f2\cf17 // the value of the variable pointed to by variable 0}{\f2 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SetIndirectVar}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SetIndirectVar}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SetIndirectVar}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SetIndirectVar}}}{\b\f1\fs24 SetIndirectVar(const int &v, const int &n)\tab Function - RCX2, Spy
\par }{\f1 Set the value of a variable indirectly.  The first parameter is the global variable whose value is the address of the variable you wish to set.  The second parameter is the value you wish to set it to.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetIndirectVar}{\f2 (x, }{\f2\cf6 200}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_DatalogType}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  DatalogType}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  DatalogType}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  DatalogType}}}{\b\f1\fs24 DatalogType(const int &n)\tab Value \endash  Swan (and RCX2+)
\par }{\f1 Read or write the 8-bit datalog type specified by the parameter.  If a variable is used the type is read or written indirectly.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DatalogType}{\f2 (}{\f2\cf6 0}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_DatalogValue}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  DatalogValue}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  DatalogValue}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  DatalogValue}}}{\b\f1\fs24 DatalogValue(const int &n)\tab Value - Swan (and RCX2+)
\par }{\f1 Read or write the 16-bit datalog value specified by the parameter.  If a variable is used the value is read or written indirectly.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DatalogValue}{\f2 (}{\f2\cf6 0}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_DatalogByte}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  DatalogByte}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  DatalogByte}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  DatalogByte}}}{\b\f1\fs24 DatalogByte(const int &n)\tab Value \endash  Swan (and RCX2+)
\par }{\f1 Read or write the 8-bit datalog byte specified by the parameter.  If a variable is used the byte is read or written indirectly.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DatalogByte}{\f2 (}{\f2\cf6 0}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_InitSpybotComm}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  InitSpybotComm}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  InitSpybotComm}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  InitSpybotComm}}}{\b\f1\fs24 InitSpybotComm()\tab Function - RCX2
\par }{\f1 Use this function to configure the serial communication registers in preparation for sending messages using the Spybot protocol.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 InitSpybotComm}{\f2 (); }{\i\f2\cf17 // prepare to send IR using Spybot protocol}{\f2 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SendSpybotMsg}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SendSpybotMsg}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SendSpybotMsg}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SendSpybotMsg}}}{\b\f1\fs24 SendSpybotMsg()\tab Function - RCX2
\par }{\f1 Use this function to send a 7 byte Spybot message which was previously set via a call to }{\f2\cf2 SetSpybotMessage}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotMsg}{\f2 (); 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SetSpybotMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SetSpybotMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SetSpybotMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SetSpybotMessage}}}{\b\f1\fs24 SetSpybotMessage(mode, myID, addr, cmd, hi, lo)\tab Function - RCX2
\par }{\f1 Use this function to set the contents of a Spybot message.  The message can then be sent repeatedly via calls to }{\f2\cf2 SendSpybotMsg}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSpybotMessage}{\f2 (}{\f2\cf11 MSG_BROADCAST}{\f2 , }{\f2\cf6 9}{\f2 , }{\f2\cf6 0}{\f2 , }{\f2\cf11 CMD_FIRE_LASER}{\f2 , }{\f2\cf6 1}{\f2 , }{\f2\cf6 100}{
\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SendSpybotMessage2}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SendSpybotMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SendSpybotMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SendSpybotMessage}}}{\b\f1\fs24 SendSpybotMessage(mode, myID, addr, cmd, hi, lo)\tab Function - RCX2
\par }{\f1 Use this function to send a 7 byte Spybot message.  This function calls }{\f2\cf2 InitSpybotComm}{\f1 , }{\f2\cf2 SetSpybotMessage}{\f1 , and }{\f2\cf2 SendSpybotMsg}{\f1  in sequence.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotMessage}{\f2 (}{\f2\cf11 MSG_BROADCAST}{\f2 , }{\f2\cf6 9}{\f2 , }{\f2\cf6 0}{\f2 , }{\f2\cf11 CMD_FIRE_LASER}{\f2 , }{\f2\cf6 1}{\f2 , }{\f2\cf6 100}
{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SendSpybotCtrlMsg}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlMsg}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlMsg}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlMsg}}}{\b\f1\fs24 SendSpybotCtrlMsg()\tab Function - RCX2
\par }{\f1 Use this function to send a 2 byte Spybot controller message which was previously set via a call to }{\f2\cf2 SetSpybotCtrlMessage}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotCtrlMsg}{\f2 (); 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SetSpybotCtrlMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SetSpybotCtrlMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SetSpybotCtrlMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SetSpybotCtrlMessage}}}{\b\f1\fs24 SetSpybotCtrlMessage(nMyID, nMsg)\tab Function - RCX2
\par }{\f1 Use this function to set the contents of a Spybot controller message.  The message can then be sent repeatedly via calls to }{\f2\cf2 SendSpybotCtrlMsg}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSpybotCtrlMessage}{\f2 (}{\f2\cf11 ID_CTRL_1}{\f2 , }{\f2\cf11 SPY_CTRL_BTN_1}{\f2 ); 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SendSpybotCtrlMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlMessage}}}{\b\f1\fs24 SendSpybotCtrlMessage(nMyID, nMsg)\tab Function - RCX2
\par }{\f1 Use this function to send a 2 byte Spybot controller message.  This function calls }{\f2\cf2 InitSpybotComm}{\f1 , }{\f2\cf2 SetSpybotCtrlMessage}{\f1 , and }{\f2\cf2 SendSpybotCtrlMsg}{\f1  in sequence.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotCtrlMessage}{\f2 (}{\f2\cf11 ID_CTRL_1}{\f2 , }{\f2\cf11 SPY_CTRL_BTN_1}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SendSpybotCtrlPingMsg}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlPingMsg}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlPingMsg}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlPingMsg}}}{\b\f1\fs24 SendSpybotCtrlPingMsg()\tab Function - RCX2
\par }{\f1 Use this function to send a 2 byte Spybot controller ping message which was previously set via a call to }{\f2\cf2 SetSpybotCtrlPingMessage}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotCtrlPingMsg}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SetSpybotCtrlPingMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SetSpybotCtrlPingMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SetSpybotCtrlPingMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SetSpybotCtrlPingMessage}}}{\b\f1\fs24 SetSpybotCtrlPingMessage(nID)\tab Function - RCX2
\par }{\f1 Use this function to set the contents of a Spybot controller ping message.  The message can then be sent repeatedly via calls to }{\f2\cf2 SendSpybotCtrlPingMsg}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSpybotCtrlPingMessage}{\f2 (}{\f2\cf11 ID_CTRL_1}{\f2 ); 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SendSpybotCtrlPingMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlPingMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlPingMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SendSpybotCtrlPingMessage}}}{\b\f1\fs24 SendSpybotCtrlPingMessage(nID)\tab Function - RCX2
\par }{\f1 Use this function to send a 2 byte Spybot controller message.  This function calls }{\f2\cf2 InitSpybotComm}{\f1 , }{\f2\cf2 SetSpybotCtrlPingMessage}{\f1 , and }{\f2\cf2 SendSpybotCtrlPingMsg}{\f1  in sequence.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotCtrlPingMessage}{\f2 (}{\f2\cf11 ID_CTRL_1}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SendSpybotPingMsg}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 $}{\f1\lang1036\langfe1033\langnp1036  SendSpybotPingMsg}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036  SendSpybotPingMsg}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SendSpybotPingMsg}}}{\b\f1\fs24 SendSpybotPingMsg()\tab Function - RCX2
\par }{\f1 Use this function to send a 4 byte Spybot ping message which was previously set via a call to }{\f2\cf2 SetSpybotPingMessage}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotPingMsg}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1036\langfe1033\super\langnp1036 #}{\f1\lang1036\langfe1033\langnp1036  IDH_API_SetSpybotPing}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SetSpybotPing}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSpybotPing}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSpybotPing}}}{\b\f1\fs24 SetSpybotPing(nLinkID, nMyID, nInfo)\tab Function - RCX2
\par }{\f1 Use this function to set the contents of a Spybot ping message.  The message can then be sent repeatedly via calls to }{\f2\cf2 SendSpybotPingMsg}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSpybotPingMessage}{\f2 (}{\f2\cf11 ID_CTRL_1}{\f2 , }{\f2\cf11 ID_MIN_BOT}{\f2 +}{\f2\cf6 1}{\f2 , }{\f2\cf6 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SendSpybotPing}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SendSpybotPing}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SendSpybotPing}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SendSpybotPing}}}{\b\f1\fs24 SendSpybotPing(nLinkID, nMyID, nInfo)\tab Function - RCX2
\par }{\f1 Use this function to send a 4 byte Spybot ping message.  This function calls }{\f2\cf2 InitSpybotComm}{\f1 , }{\f2\cf2 SetSpybotPingMessage}{\f1 , and }{\f2\cf2 SendSpybotPingMsg}{\f1  in sequence.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendSpybotPingMessage}{\f2 (}{\f2\cf11 ID_CTRL_1}{\f2 , }{\f2\cf11 ID_MIN_BOT}{\f2 +}{\f2\cf6 1}{\f2 , }{\f2\cf6 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_InitRCComm}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  InitRCComm}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  InitRCComm}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  InitRCComm}}}{\b\f1\fs24 InitRCComm()\tab Function - RCX2
\par }{\f1 Use this function to configure the serial communication registers in preparation for sending messages using the Spybot RC protocol.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 InitRCComm}{\f2 (); }{\i\f2\cf17 // prepare to send IR using RC protocol}{\f2 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SendRCMsg}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{
\f1\lang1031\langfe1033\langnp1031  SendRCMsg}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{
\f1\lang1031\langfe1033\langnp1031  SendRCMsg}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{
\f1\lang1031\langfe1033\langnp1031  SendRCMsg}}}{\b\f1\fs24 SendRCMsg()\tab Function - RCX2
\par }{\f1 Use this function to send a 4 byte RC message which was previously set via a call to }{\f2\cf2 SetRCMessage}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendRCMsg}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SetRCMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{\f1\lang1031\langfe1033\langnp1031  SetRCMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{\f1\lang1031\langfe1033\langnp1031  SetRCMessage}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{\f1\lang1031\langfe1033\langnp1031  SetRCMessage}}}{\b\f1\fs24 SetRCMessage(nChannel, nLeft, nRight)\tab Function - RCX2
\par }{\f1 Use this function to set the contents of a Spybot RC message.  The message can then be sent repeatedly via calls to }{\f2\cf2 SendRCMsg}{\f1 .
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetRCMessage}{\f2 (}{\f2\cf11 RC_CHANNEL_2}{\f2 , }{\f2\cf11 RC_CMD_FWD}{\f2 , }{\f2\cf11 RC_CMD_FWD}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SendRCMessage}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  SendRCMessage}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SendRCMessage}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SendRCMessage}}}{\b\f1\fs24 SendRCMessage(nChannel, nLeft, nRight)\tab Function - RCX2
\par }{\f1 Use this function to send a 2 byte Spybot ping message.  This function calls }{\f2\cf2 InitRCComm}{\f1 , }{\f2\cf2 SetRCMessage}{\f1 , and }{\f2\cf2 SendRCMsg}{\f1  in sequence.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendRCMessage}{\f2 (}{\f2\cf11 RC_CHANNEL_2}{\f2 , }{\f2\cf11 RC_CMD_FWD}{\f2 , }{\f2\cf11 RC_CMD_FWD}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\f1\fs24\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_BitClear}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  BitClear}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  BitClear}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  BitClear}}}{\b\f1\fs24 BitClear(const int &result, const int &operand)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Clear the bit in the result specified by the operand.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 BitClear}{\f2 (}{\f1 x, }{\f1\cf6 0x01}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_BitSet}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  BitSet}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  BitSet}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  BitSet}}}{\b\f1\fs24 BitSet(const int &result, const int &operand) \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the bit in the result specified by the operand.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 BitSet}{\f2 (}{\f1 x, }{\f1\cf6 0x01}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ClearAll}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ClearAll}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ClearAll}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ClearAll}}}{\b\f1\fs24 ClearAll(const int &nCmdFlags) \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Clear the specified items.  The constants can be added together to clear multiple items at once.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 ClearAll}{\f2 (}{\f1\cf11 CLR_TIMERS}{\f2 );
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1 ClearAll Constants\tab Meaning
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 CLR_TIMERS}{\f1 \tab clear all timers
\par }{\f1\cf11 CLR_INPUTS}{\f1 \tab clear all inputs
\par }{\f1\cf11 CLR_VARIABLES}{\f1 \tab clear all variables
\par }{\f1\cf11 CLR_TASK_STACK}{\f1 \tab clear all task stacks
\par }{\f1\cf11 CLR_EVENTS}{\f1 \tab clear all events
\par }{\f1\cf11 CLR_BREAKPOINTS}{\f1 \tab clear all breakpoints
\par }{\f1\cf11 CLR_DATALOG}{\f1 \tab clear the datalog
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_CommErrorsFraming}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  CommErrorsFraming}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CommErrorsFraming}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CommErrorsFraming}}}{\b\f1\fs24 CommErrorsFraming()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of communication framing errors.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 CommErrorsFraming}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_CommErrorsOverrun}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  CommErrorsOverrun}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CommErrorsOverrun}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CommErrorsOverrun}}}{\b\f1\fs24 CommErrorsOverrun()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of communication overrun errors.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 CommErrorsOverrun}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_CommErrorsParity}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  CommErrorsParity}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CommErrorsParity}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CommErrorsParity}}}{\b\f1\fs24 CommErrorsParity()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of communication parity errors.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 CommErrorsParity}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_CommErrorsTimeout}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  CommErrorsTimeout}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CommErrorsTimeout}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CommErrorsTimeout}}}{\b\f1\fs24 CommErrorsTimeout()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of communication timeout errors.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 CommErrorsTimeout}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_CurrentTask}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  CurrentTask}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  CurrentTask}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  CurrentTask}}}{\b\f1\fs24 CurrentTask()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the current task number.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 CurrentTask}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DatalogSize}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  DatalogSize}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  DatalogSize}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  DatalogSize}}}{\b\f1\fs24 DatalogSize()\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the datalog size.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DatalogSize}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DebugTaskMode}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  DebugTaskMode}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  DebugTaskMode}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  DebugTaskMode}}}{\b\f1\fs24 DebugTaskMode()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the debug task mode.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DebugTaskMode}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DefaultSerialComm}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  DefaultSerialComm}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  DefaultSerialComm}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  DefaultSerialComm}}}{\b\f1\fs24 DefaultSerialComm()\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Returns the default UART transmit parameter configuration.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DefaultSerialComm}{\f2 (); // read the default UART transmit config
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DefaultSerialPacket}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  DefaultSerialPacket}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  DefaultSerialPacket}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  DefaultSerialPacket}}}{\b\f1\fs24 DefaultSerialPacket()\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Returns the default packet data formatting configuration.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DefaultSerialPacket}{\f2 (); // read the default packet config
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_DefaultStackSize}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  DefaultStackSize}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  DefaultStackSize}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  DefaultStackSize}}}{\b\f1\fs24 DefaultStackSize()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Returns the default stack size.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 DefaultStackSize}{\f2 (); // read the default stack size
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_EventCounts}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  EventCounts}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EventCounts}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EventCounts}}}{\b\f1\fs24 EventCounts(const int n)\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the event counts of an event.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EventCounts}{\f2 (MyEvent);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_EventSrc}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  EventSrc}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EventSrc; ES_BELOW_LOWER; ES_BETWEEN; ES_ABOVE_UPPER; ES_UNDETERMINED}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EventSrc; ES_BELOW_LOWER; ES_BETWEEN; ES_ABOVE_UPPER; ES_UNDETERMINED}}}{\b\f1\fs24 EventSrc(const int n)\tab 
Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the event source of an event.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EventSrc}{\f2 (MyEvent);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 There are also constants for the event state: }{\f1\cf11 ES_BELOW_LOWER, ES_BETWEEN, ES_ABOVE_UPPER, ES_UNDETERMINED
\par }{\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_EventType}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  EventType}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  EventType}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  EventType}}}{\b\f1\fs24 EventType(const int n)\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the event type of an event.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 EventType}{\f2 (MyEvent);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ExpandedRemoteMessages}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ExpandedRemoteMessages}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ExpandedRemoteMessages}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ExpandedRemoteMessages}}}{\b\f1\fs24 ExpandedRemoteMessages()\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value indicating whether or not to support expanded remote control messages.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 ExpandedRemoteMessages}{\f2 (); // 0 or 1
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ExpandedSubroutines}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ExpandedSubroutines}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ExpandedSubroutines}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ExpandedSubroutines}}}{\b\f1\fs24 ExpandedSubroutines()\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value specifying whether or not to allow an expanded number of subroutines.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 ExpandedSubroutines}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_FloatDuringInactivePWM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  FloatDuringInactivePWM}}}{
\f1\super A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  FloatDuringInactivePWM}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  FloatDuringInactivePWM}}}{\b\f1\fs24 FloatDuringInactivePWM()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value specifying whether or not to float motors during inactive pulse width modulation.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 FloatDuringInactivePWM}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_GlobalVar}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  GlobalVar}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  GlobalVar}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  GlobalVar}}}{\b\f1\fs24 GlobalVar(const int n) \tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read or write the value of a global variable (either directly or indirectly).
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 GlobalVar}{\f2 (y);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_IgnoreMessagesCPU}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  IgnoreMessagesCPU}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  IgnoreMessagesCPU}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  IgnoreMessagesCPU}}}{\b\f1\fs24 IgnoreMessagesCPU()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value specifying whether or not to ignore CPU messages.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 IgnoreMessagesCPU}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ImmediateBatteryLevel}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ImmediateBatteryLevel}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ImmediateBatteryLevel}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ImmediateBatteryLevel}}}{\b\f1\fs24 ImmediateBatteryLevel()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the immediate battery level.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 ImmediateBatteryLevel}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_InterCharTimeout}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  InterCharTimeout}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  InterCharTimeout}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  InterCharTimeout}}}{\b\f1\fs24 InterCharTimeout()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the inter-character timeout value.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 InterCharTimeout}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_IntrinsicIndGlobal}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  IntrinsicIndGlobal}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  IntrinsicIndGlobal}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  IntrinsicIndGlobal}}}{\b\f1\fs24 IntrinsicIndGlobal(const int n) \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Access the value of an intrinsic indirectly.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 IntrinsicIndGlobal}{\f2 (}{\f2\cf6 15}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_LCDRefreshRate}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  LCDRefreshRate}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  LCDRefreshRate}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  LCDRefreshRate}}}{\b\f1\fs24 LCDRefreshRate()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the LCD refresh rate.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 LCDRefreshRate}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MemoryMapAddress}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MemoryMapAddress}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MemoryMapAddress}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MemoryMapAddress}}}{\b\f1\fs24 MemoryMapAddress()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the memory map address.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MemoryMapAddress}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MessageParam}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MessageParam}}}{\f1\super A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MessageParam}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MessageParam}}}{\b\f1\fs24 MessageParam()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the message parameter.  The Swan firmware supports a 2 byte message parameter in addition to the single byte supported by the RCX firmware.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MessageParam}{\f2 (); // read the received message parameter value
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MissedSensorADConversions}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MissedSensorADConversions}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MissedSensorADConversions}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MissedSensorADConversions}}}{\b\f1\fs24 MissedSensorADConversions()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of missed sensor analog to digital conversions.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MissedSensorADConversions}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MotorBrakePower}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MotorBrakePower}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MotorBrakePower}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MotorBrakePower}}}{\b\f1\fs24 MotorBrakePower(const int motor)\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the brake power setting of a motor.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MotorBrakePower}{\f2 (}{\f2\cf11 MTR_A}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MotorPower128}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MotorPower128}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MotorPower128}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MotorPower128}}}{\b\f1\fs24 MotorPower128(const int n)\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the power setting of a motor (using a scale from 0 to 127).
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MotorPower128}{\f2 (}{\f2\cf11 MTR_A}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MotorPower8}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MotorPower8}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MotorPower8}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MotorPower8}}}{\b\f1\fs24 MotorPower8(const int n)\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the power setting of a motor (using a scale from 0 to 7).
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MotorPower8}{\f2 (}{\f2\cf11 MTR_A}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MotorPowerSigned}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MotorPowerSigned}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MotorPowerSigned}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MotorPowerSigned}}}{\b\f1\fs24 MotorPowerSigned(const int motor)\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the signed power setting of a motor.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MotorPowerSigned}{\f2 (}{\f2\cf11 MTR_A}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MotorTransitionDelay}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MotorTransitionDelay}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MotorTransitionDelay}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MotorTransitionDelay}}}{\b\f1\fs24 MotorTransitionDelay()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of milliseconds to delay when changing motor direction.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MotorTransitionDelay}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_MSTimer}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  MSTimer}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  MSTimer}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  MSTimer}}}{\b\f1\fs24 MSTimer(const int n)\tab Value - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the specified 1 ms timer value.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 MSTimer}{\f2 (}{\f2\cf18 T1}{\f2 ); // get the value of timer 1
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_Negate}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  Negate}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Negate}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Negate}}}{\b\f1\fs24 Negate(const int &result, const int &operand) \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Negate the bits in the result specified by the operand.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 Negate}{\f2 (}{\f1 x, }{\f1\cf6 0x01}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_NoPowerDownOnAC}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  NoPowerDownOnAC}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  NoPowerDownOnAC}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  NoPowerDownOnAC}}}{\b\f1\fs24 NoPowerDownOnAC()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value specifying whether or not to power down while running on AC power.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 NoPowerDownOnAC}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_OpcodesPerTimeslice}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  OpcodesPerTimeslice}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  OpcodesPerTimeslice}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  OpcodesPerTimeslice}}}{\b\f1\fs24 OpcodesPerTimeslice()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of opcodes to execute per timeslice.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 OpcodesPerTimeslice}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_PlaySounds}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  PlaySounds}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  PlaySounds}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  PlaySounds}}}{\b\f1\fs24 PlaySounds()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value specifying whether or not to allow sound playing.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 PlaySounds}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_PowerDownDelay}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  PowerDownDelay}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  PowerDownDelay}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  PowerDownDelay}}}{\b\f1\fs24 PowerDownDelay()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the power down delay.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 PowerDownDelay}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_QueuedSoundCount}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  QueuedSoundCount}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  QueuedSoundCount}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  QueuedSoundCount}}}{\b\f1\fs24 QueuedSoundCount()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of sounds currently waiting to be played.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 QueuedSoundCount}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ResetMSTimer}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  ResetMSTimer}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  ResetMSTimer}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  ResetMSTimer}}}{\b\f1\fs24 ResetMSTimer(const int n)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the specified 1 ms timer back to zero.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2\lang1036\langfe1033\langnp1036 ResetMSTimer}{\f2\lang1036\langfe1033\langnp1036 (}{\f2\cf11\lang1036\langfe1033\langnp1036 T1}{
\f2\lang1036\langfe1033\langnp1036 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\lang1036\langfe1033\langnp1036 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1\lang1036\langfe1033\langnp1036 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_RotDebouncedGlitches}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super $}{\f1  RotDebouncedGlitches}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RotDebouncedGlitches}}K{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RotDebouncedGlitches}}}{\b\f1\fs24 RotDebouncedGlitches()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the rotation sensor debounced glitches.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RotDebouncedGlitches}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_RotErrorsCount}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  RotErrorsCount}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  RotErrorsCount}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  RotErrorsCount}}}{\b\f1\fs24 RotErrorsCount()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the rotation sensor errors count.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 RotErrorsCount}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SendMessageWithParam}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SendMessageWithParam}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SendMessageWithParam}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SendMessageWithParam}}}{\b\f1\fs24 SendMessageWithParam(const int &m, const int &p) \tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Send an IR message with an additional parameter.  The first parameter is restricted a single byte while the second parameter can be two bytes.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SendMessageWithParam}{\f2 (3, 1024); // send an IR message
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SensorDelayCycles}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SensorDelayCycles}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SensorDelayCycles}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SensorDelayCycles}}}{\b\f1\fs24 SensorDelayCycles()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the number of sensor delay cycles.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorDelayCycles}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SensorRefreshRate}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{
\f1\lang1031\langfe1033\langnp1031  SensorRefreshRate}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{
\f1\lang1031\langfe1033\langnp1031  SensorRefreshRate}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{
\f1\lang1031\langfe1033\langnp1031  SensorRefreshRate}}}{\b\f1\fs24 SensorRefreshRate()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the sensor refresh rate.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorRefreshRate}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SensorRefreshState}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\cs16\f1\super $}{\f1  SensorRefreshState}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SensorRefreshState}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SensorRefreshState}}}{\b\f1\fs24 SensorRefreshState()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the sensor refresh state.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorRefreshState}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SensorScanCount}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SensorScanCount}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SensorScanCount}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SensorScanCount}}}{\b\f1\fs24 SensorScanCount()\tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the sensor scan count.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorScanCount}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SensorStartupDelay}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SensorStartupDelay}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SensorStartupDelay}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SensorStartupDelay}}}{\b\f1\fs24 SensorStartupDelay()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the sensor startup delay.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SensorStartupDelay}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SerialLinkStatus}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SerialLinkStatus}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SerialLinkStatus}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SerialLinkStatus}}}{\b\f1\fs24 SerialLinkStatus()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the serial link status.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SerialLinkStatus}{\f2 ();
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Serial Link Status Constants\tab Meaning
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf18 SLS_WAIT_FOR_MSG\tab }{\f1 waiting for message
\par }{\f1\cf18 SLS_RECEIVING_MSG\tab }{\f1 receiving message
\par }{\f1\cf18 SLS_TRANSMITTING\tab }{\f1 transmitting
\par }{\f1\cf18 SLS_UNKNOWN\tab }{\f1 unknown
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetDefaultSerialComm}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetDefaultSerialComm}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetDefaultSerialComm}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetDefaultSerialComm}}}{\b\f1\fs24 SetDefaultSerialComm(settings)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the default communication settings, which determine how the bits are sent over IR
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetDefaultSerialComm}{\f2 (}{\f2\cf18 SERIAL_COMM_DEFAULT}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetDefaultSerialPacket}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetDefaultSerialPacket}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetDefaultSerialPacket}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetDefaultSerialPacket}}}{\b\f1\fs24 SetDefaultSerialPacket(settings)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the default packet settings, which control how bytes are assembled into packets.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetDefaultSerialPacket}{\f2 (}{\f2\cf18 SERIAL_PACKET_DEFAULT}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetDefaultStackSize}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetDefaultStackSize}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetDefaultStackSize}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetDefaultStackSize}}}{\b\f1\fs24 SetDefaultStackSize(const int &v)\tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the default stack size.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetDefaultStackSize}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetEventCounts}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetEventCounts}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetEventCounts}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetEventCounts}}}{\b\f1\fs24 SetEventCounts(const int n, const int &v)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the event count of event n to the count specified by v.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEventCounts}{\f2 (MyEvent, 10);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetEventSrc}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetEventSrc}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 A}{\f1\lang1036\langfe1033\langnp1036 
 SetEventSrc; EST_SENSOR_1; EST_SENSOR_2; EST_SENSOR_3; EST_TIMER_1; EST_TIMER_2; 
\par EST_TIMER_3; EST_TIMER_4; EST_LAST_IR_MSG; EST_COUNTER_1; EST_COUNTER_2; EST_COUNTER_3; EST_USER_EVENT_0; EST_USER_EVENT_1; EST_USER_
EVENT_2; EST_USER_EVENT_3; EST_USER_EVENT_4; EST_VIRTUAL_MOTOR; EST_VIRTUAL_SENSOR; EST_WAIT_FOR_MSG; EST_INFRARED_STATUS; EST_SENSOR_UNUSED}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1036\langfe1033\super\langnp1036 K}{\f1\lang1036\langfe1033\langnp1036  SetEventSrc; EST_SENSOR_1; EST_SENSOR_2; EST_SENSOR_3; EST_TIMER_1; EST_TIMER_2; 
\par EST_TIMER_3; EST_TIMER_4; EST_
LAST_IR_MSG; EST_COUNTER_1; EST_COUNTER_2; EST_COUNTER_3; EST_USER_EVENT_0; EST_USER_EVENT_1; EST_USER_EVENT_2; EST_USER_EVENT_3; EST_USER_EVENT_4; EST_VIRTUAL_MOTOR; EST_VIRTUAL_SENSOR; EST_WAIT_FOR_MSG; EST_INFRARED_STATUS; EST_SENSOR_UNUSED}}}{
\b\f1\fs24 SetEventSrc(const int n, const int &v)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the event source of event n to the source specified by v.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2\lang1036\langfe1033\langnp1036 SetEventSrc}{\f2\lang1036\langfe1033\langnp1036 (MyEvent, }{\f2\cf11\lang1036\langfe1033\langnp1036 EST_SENSOR_1}{
\f2\lang1036\langfe1033\langnp1036 );
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1\lang1036\langfe1033\langnp1036 Event Source
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11\lang1036\langfe1033\langnp1036 EST_SENSOR_1, EST_SENSOR_2, EST_SENSOR_3, EST_TIMER_1, EST_TIMER_2, 
\par EST_TIMER_3, EST_TIMER_4, EST_LAST_IR_MSG, EST_COUNTER_1, EST_COUNTER_2, EST_COUNTER_3, EST_USER_EVENT_0, EST_USER_EVENT_1, EST_USER_EVENT_2, EST_USER_EVENT_3, EST_USER_EVENT_4, EST_VIRTUAL_MOTOR, EST_VIRTUAL_SENSOR, EST_WAIT_FOR_MSG, EST_INFRARED_STATUS,
 EST_SENSOR_UNUSED
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1\lang1036\langfe1033\langnp1036 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetEventType}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetEventType}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetEventType}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetEventType}}}{\b\f1\fs24 SetEventType(const int n, const int &v)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the event type of event n to the type specified by v.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetEventType}{\f2 (MyEvent, }{\f2\cf11 EVENT_TYPE_PRESSED}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetExpandedRemoteMessages}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetExpandedRemoteMessages}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetExpandedRemoteMessages}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetExpandedRemoteMessages}}}{\b\f1\fs24 SetExpandedRemoteMessages(const int &v)}{\b\f1\fs24  \tab Function - Swan
}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Enable or disable expanded remote control messages.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetExpandedRemoteMessages}{\f2 (}{\b\f1 false}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetExpandedSubroutines}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetExpandedSubroutines}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetExpandedSubroutines}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetExpandedSubroutines}}}{\b\f1\fs24 SetExpandedSubroutines(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 

\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Enable or disable support for an expanded number of subroutines.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetExpandedSubroutines}{\f2 (}{\b\f1 false}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetFloatDuringInactivePWM}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetFloatDuringInactivePWM}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetFloatDuringInactivePWM}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetFloatDuringInactivePWM}}}{\b\f1\fs24 SetFloatDuringInactivePWM(const int &v)}{\b\f1\fs24  \tab Function - Swan
}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Enable or disable floating the motors during inactive pulse width modulation.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetFloatDuringInactivePWM}{\f2 (}{\b\f1 false}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetInterCharTimeout}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetInterCharTimeout}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetInterCharTimeout}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetInterCharTimeout}}}{\b\f1\fs24 SetInterCharTimeout(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 

\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the inter-character timeout value.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetInterCharTimeout}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetLCDRefreshRate}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetLCDRefreshRate}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetLCDRefreshRate}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetLCDRefreshRate}}}{\b\f1\fs24 SetLCDRefreshRate(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the LCD refresh rate.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetLCDRefreshRate}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetMessageByteParam}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMessageByteParam}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMessageByteParam}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMessageByteParam}}}{\b\f1\fs24 SetMessageByteParam(const int m, const int p) \tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the IR message and its parameter using constants.  The parameter must be a single byte value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMessageByteParam}{\f2 (3, 43);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetMessageVariableParam}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMessageVariableParam}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMessageVariableParam}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMessageVariableParam}}}{\b\f1\fs24 SetMessageVariableParam(const int &m, const int &p) \tab Function - Swan

\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the IR message and its parameter using variables.  The parameter can be 2 bytes.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMessageVariableParam}{\f2 (x, y);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetMessageWordParam}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMessageWordParam}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMessageWordParam}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMessageWordParam}}}{\b\f1\fs24 SetMessageWordParam(const int m, const int p) \tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the IR message and its parameter using constants.  The parameter can be 2 bytes.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMessageWordParam}{\f2 (3, 1024);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetMotorBrakePower}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMotorBrakePower}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMotorBrakePower}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMotorBrakePower}}}{\b\f1\fs24 SetMotorBrakePower(const int motor, const int &v)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the brake power of a motor to the specified value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMotorBrakePower}{\f2 (MTR_A, 10);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetMotorPower128}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMotorPower128}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMotorPower128}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMotorPower128}}}{\b\f1\fs24 SetMotorPower128(const int motor, const int &v)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the power of a motor to the specified value (using a scale from 0 to 127).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMotorPower128}{\f2 (MTR_A, 100);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetMotorPower8}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMotorPower8}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMotorPower8}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMotorPower8}}}{\b\f1\fs24 SetMotorPower8(const int motor, const int &v)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the power of a motor to the specified value (using a scale from 0 to 7).
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMotorPower8}{\f2 (MTR_A, 7);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ SetMotorPowerSigned}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMotorPowerSigned}}A{\footnote 
\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1 
 SetMotorPowerSigned; MTR_A; MTR_B; MTR_C; MTR_D; MTR_E; MTR_F; MPD_FWD; MPD_REV; MPD_FLOAT; MPD_OFF; MS_FLOAT; MS_BRAKE; MS_FWD; MS_REV; MTR_FWD_POWER_1; MTR_FWD_POWER_2; MTR_FWD_POWER_3; MTR_FWD_POWER_4; MTR_FWD_POWER_5; MTR_FWD_POWER_6; MTR_FWD_POW
ER_7; MTR_FWD_POWER_8; MTR_REV_POWER_1; MTR_REV_POWER_2; MTR_REV_POWER_3; MTR_REV_POWER_4; MTR_REV_POWER_5; MTR_REV_POWER_6; MTR_REV_POWER_7; MTR_REV_POWER_8;  MTR_FLOAT_POWER_1; MTR_FLOAT_POWER_2; MTR_FLOAT_POWER_3; MTR_FLOAT_POWER_4; MTR_FLOAT_POWER_5; 
MTR_FLOAT_POWER_6; MTR_FLOAT_POWER_7; MTR_FLOAT_POWER_8;  MTR_BRAKE_POWER_1; MTR_BRAKE_POWER_2; MTR_BRAKE_POWER_3; MTR_BRAKE_POWER_4; MTR_BRAKE_POWER_5; MTR_BRAKE_POWER_6; MTR_BRAKE_POWER_7; MTR_BRAKE_POWER_8}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMotorPowerSigned; MTR_A; MTR_B; MTR_C; MTR
_D; MTR_E; MTR_F; MPD_FWD; MPD_REV; MPD_FLOAT; MPD_OFF; MS_FLOAT; MS_BRAKE; MS_FWD; MS_REV; MTR_FWD_POWER_1; MTR_FWD_POWER_2; MTR_FWD_POWER_3; MTR_FWD_POWER_4; MTR_FWD_POWER_5; MTR_FWD_POWER_6; MTR_FWD_POWER_7; MTR_FWD_POWER_8; MTR_REV_POWER_1; MTR_REV_PO
W
ER_2; MTR_REV_POWER_3; MTR_REV_POWER_4; MTR_REV_POWER_5; MTR_REV_POWER_6; MTR_REV_POWER_7; MTR_REV_POWER_8;  MTR_FLOAT_POWER_1; MTR_FLOAT_POWER_2; MTR_FLOAT_POWER_3; MTR_FLOAT_POWER_4; MTR_FLOAT_POWER_5; MTR_FLOAT_POWER_6; MTR_FLOAT_POWER_7; MTR_FLOAT_POW
ER_8;  MTR_BRAKE_POWER_1; MTR_BRAKE_POWER_2; MTR_BRAKE_POWER_3; MTR_BRAKE_POWER_4; MTR_BRAKE_POWER_5; MTR_BRAKE_POWER_6; MTR_BRAKE_POWER_7; MTR_BRAKE_POWER_8}}}{\b\f1\fs24 SetMotorPowerSigned(const int motor, const int &v)\tab Function - Swan
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the power of a motor to the specified signed value.
\par }\pard \ql \li720\ri0\sb120\sa120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMotorPowerSigned}{\f2 (}{\f2\cf11 MTR_A}{\f2 , 10);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The motor can be specified using the following constants.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Motor Constants
\par }\pard \ql \li720\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 MTR_A}{\f1 , }{\f1\cf11 MTR_B}{\f1 , }{\f1\cf11 MTR_C}{\f1 , }{\f1\cf11 MTR_D}{\f1 , }{\f1\cf11 MTR_E}{\f1 , }{\f1\cf11 MTR_F
\par }{\f1 
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 There are additional constants for the motor power functions and values.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Motor Power Direction
\par }\pard \ql \li720\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 MPD_FWD, MPD_REV, MPD_FLOAT, MPD_OFF
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Motor State
\par }\pard \ql \li720\ri0\widctlpar\tx2880\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 MS_FLOAT, MS_BRAKE, MS_FWD, MS_REV
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Motor Forward Power
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 MTR_FWD_POWER_1, MTR_FWD_POWER_2, MTR_FWD_POWER_3, MTR_FWD_POWER_4, MTR_FWD_POWER_5, MTR_FWD_POWER_6, MTR_FWD_POWER_7, MTR_FWD_POWER_8
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Motor Reverse Power
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 MTR_REV_POWER_1, MTR_REV_POWER_2, MTR_REV_POWER_3, MTR_REV_POWER_4, MTR_REV_POWER_5, MTR_REV_POWER_6, MTR_REV_POWER_7, MTR_REV_POWER_8
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Motor Float Power
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 MTR_FLOAT_POWER_1, MTR_FLOAT_POWER_2, MTR_FLOAT_POWER_3, MTR_FLOAT_POWER_4, MTR_FLOAT_POWER_5, MTR_FLOAT_POWER_6, MTR_FLOAT_POWER_7, MTR_FLOAT_POWER_8
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Motor Brake Power
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf11 MTR_BRAKE_POWER_1, MTR_BRAKE_POWER_2, MTR_BRAKE_POWER_3, MTR_BRAKE_POWER_4, MTR_BRAKE_POWER_5, MTR_BRAKE_POWER_6, MTR_BRAKE_POWER_7, MTR_BRAKE_POWER_8
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetMotorTransitionDelay}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetMotorTransitionDelay}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetMotorTransitionDelay}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetMotorTransitionDelay}}}{\b\f1\fs24 SetMotorTransitionDelay(const int &v)}{\b\f1\fs24  \tab Function - Swan}{
\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the motor transition delay to the specified value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetMotorTransitionDelay}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetNoPowerDownOnAC}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetNoPowerDownOnAC}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetNoPowerDownOnAC}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetNoPowerDownOnAC}}}{\b\f1\fs24 SetNoPowerDownOnAC(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Enable or disable power down while running on AC power.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetNoPowerDownOnAC}{\f2 (}{\f1 false}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetOpcodesPerTimeslice}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetOpcodesPerTimeslice}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetOpcodesPerTimeslice}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetOpcodesPerTimeslice}}}{\b\f1\fs24 SetOpcodesPerTimeslice(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 

\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the system item to the specified value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetOpcodesPerTimeslice}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetPlaySounds}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetPlaySounds}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetPlaySounds}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetPlaySounds}}}{\b\f1\fs24 SetPlaySounds(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Enable or disable support for playing sounds.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetPlaySounds}{\f2 (}{\f1 false}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetSensorRefreshRate}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 $}{
\f1\lang1031\langfe1033\langnp1031  SetSensorRefreshRate}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 A}{
\f1\lang1031\langfe1033\langnp1031  SetSensorRefreshRate}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\lang1031\langfe1033\super\langnp1031 K}{
\f1\lang1031\langfe1033\langnp1031  SetSensorRefreshRate}}}{\b\f1\fs24 SetSensorRefreshRate(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the sensor refresh rate to the specified value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorRefreshRate}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\lang1031\langfe1033\super\langnp1031 #}{\f1\lang1031\langfe1033\langnp1031  IDH_API_SetSensorStartupDelay}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetSensorStartupDelay}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super A}{\f1  SetSensorStartupDelay}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSensorStartupDelay}}}{\b\f1\fs24 
SetSensorStartupDelay(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the sensor startup delay.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSensorStartupDelay}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetSystem}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetSystem}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSystem}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSystem}}}{\b\f1\fs24 SetSystem(const int n, const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the system item to the specified value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSystem}{\f2 (}{\f1\cf18 SYS_OPCODES_PER_TIMESLICE}{\f1 , 10}{\f2 );
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx5040\faauto\adjustright\rin0\lin720\itap0 {\b\f1 System Constants\tab Meaning
\par }\pard \ql \li720\ri0\widctlpar\tx5040\faauto\adjustright\rin0\lin720\itap0 {\f1\cf18 SYS_BATTERY_LEVEL\tab }{\f1 battery level
\par }{\f1\cf18 SYS_DEBUG_TASK_MODE\tab }{\f1 debug task mode
\par }{\f1\cf18 SYS_MEMORY_MAP_ADDRESS\tab }{\f1 memory map address
\par }{\f1\cf18 SYS_CURRENT_TASK\tab }{\f1 current task
\par }{\f1\cf18 SYS_SERIAL_LINK_STATUS\tab }{\f1 serial link status
\par }{\f1\cf18 SYS_OPCODES_PER_TIMESLICE\tab }{\f1 opcodes per timeslice
\par }{\f1\cf18 SYS_MOTOR_TRANSITION_DELAY\tab }{\f1 motor transition delay
\par }{\f1\cf18 SYS_SENSOR_REFRESH_RATE\tab }{\f1 sensor refresh rate
\par }{\f1\cf18 SYS_EXPANDED_RC_MESSAGES\tab }{\f1 expanded remote control messages
\par }{\f1\cf18 SYS_LCD_REFRESH_RATE\tab }{\f1 LCD refresh rate
\par }{\f1\cf18 SYS_NO_POWER_DOWN_ON_AC\tab }{\f1 power down while on AC
\par }{\f1\cf18 SYS_DEFAULT_TASK_STACK_SIZE\tab }{\f1 default task size
\par }{\f1\cf18 SYS_TASK_ACQUIRE_PRIORITY\tab }{\f1 task acquire priority
\par }{\f1\cf18 SYS_TRANSMITTER_RANGE\tab }{\f1 transmitter range
\par }{\f1\cf18 SYS_FLOAT_DURING_INACTIVE_PWM\tab }{\f1 float motors during inactive PWM
\par }{\f1\cf18 SYS_ROT_ERRORS_COUNT\tab }{\f1 rotation sensor errors count
\par }{\f1\cf18 SYS_ROT_DEBOUNCED_GLITCHES\tab }{\f1 rotation sensor debounce glitches
\par }{\f1\cf18 SYS_PREAMBLE_SIZE\tab }{\f1 preamble size
\par }{\f1\cf18 SYS_UNSOLICITED_MESSAGE\tab }{\f1 unsolicited messages
\par }{\f1\cf18 SYS_EXPANDED_SUBROUTINES\tab }{\f1 expanded subroutines
\par }{\f1\cf18 SYS_POWER_DOWN_DELAY\tab }{\f1 power down delay
\par }{\f1\cf18 SYS_WATCH_FORMAT\tab }{\f1 watch format
\par }{\f1\cf18 SYS_SENSOR_MISSED_CONVERSIONS\tab }{\f1 sensor missed conversions
\par }{\f1\cf18\lang1036\langfe1033\langnp1036 SYS_IGNORE_MESSAGES_CPU\tab }{\f1\lang1036\langfe1033\langnp1036 ignore messages CPU
\par }{\f1\cf18 SYS_COMM_ERRORS_TIMEOUT\tab }{\f1 count of timeout errors
\par }{\f1\cf18 SYS_COMM_ERRORS_PARITY\tab }{\f1 count of parity errors
\par }{\f1\cf18 SYS_COMM_ERRORS_FRAMING\tab }{\f1 count of framing errors
\par }{\f1\cf18 SYS_COMM_ERRORS_OVERRUN\tab }{\f1 count of overrun errors
\par }{\f1\cf18 SYS_INTER_CHAR_TIMEOUT\tab }{\f1 inter-character timeout
\par }{\f1\cf18 SYS_TASK_SCHEDULING_PRIORITY\tab }{\f1 task scheduling priority
\par }{\f1\cf18 SYS_VOLUME\tab }{\f1 volume level
\par }{\f1\cf18 SYS_SOUND_PLAYING\tab }{\f1 sound playing state
\par }{\f1\cf18 SYS_PLAY_SOUNDS\tab }{\f1 enable/disable sound playing
\par }{\f1\cf18 SYS_QUEUED_SOUND_COUNT\tab }{\f1 count of sounds waiting to be played
\par }{\f1\cf18 SYS_SENSOR_STARTUP_DELAY\tab }{\f1 sensor startup delay
\par }{\f1\cf18 SYS_SENSOR_DELAY_CYCLES\tab }{\f1 sensor delay cycles
\par }{\f1\cf18 SYS_SENSOR_REFRESH_STATE\tab }{\f1 sensor refresh state
\par }{\f1\cf18 SYS_SENSOR_SCAN_COUNT\tab }{\f1 sensor scan count
\par }{\f1\cf18 SYS_DATALOG_SIZE\tab }{\f1 datalog size
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetSystemPreambleSize}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetSystemPreambleSize}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetSystemPreambleSize}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetSystemPreambleSize}}}{\b\f1\fs24 SetSystemPreambleSize(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 

\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the system preamble size.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetSystemPreambleSize}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetTaskAcquirePriority}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetTaskAcquirePriority}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTaskAcquirePriority}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetTaskAcquirePriority}}}{\b\f1\fs24 SetTaskAcquirePriority(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 

\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the task acquire priority level.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetTaskAcquirePriority}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetTaskSchedulingPriority}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetTaskSchedulingPriority}}A
{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetTaskSchedulingPriority}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetTaskSchedulingPriority}}}{\b\f1\fs24 SetTaskSchedulingPriority(const int &v)}{\b\f1\fs24  \tab Function - Swan
}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the task scheduling priority.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetTaskSchedulingPriority}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetVolume}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetVolume}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetVolume}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetVolume}}}{\b\f1\fs24 SetVolume(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the system volume level.  The maximum volume level is MAX_VOLUME.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetVolume}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SetWatchFormat}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SetWatchFormat}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SetWatchFormat}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SetWatchFormat}}}{\b\f1\fs24 SetWatchFormat(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Set the watch format.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 SetWatchFormat}{\f2 (}{\f1 10}{\f2 );
\par }\pard \ql \li720\ri0\sb120\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\b\f1 Watch Format Constants\tab Meaning
\par }\pard \ql \li720\ri0\widctlpar\tx3600\faauto\adjustright\rin0\lin720\itap0 {\f1\cf18 FMT_HHMM\tab }{\f1 hours and minutes
\par }{\f1\cf18 FMT_MMSS\tab }{\f1 minutes and seconds
\par }{\f1\cf18 FMT_MSSTENTHS\tab }{\f1 minutes, seconds, and tenths of seconds
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SoundActive}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SoundActive}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SoundActive}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SoundActive}}}{\b\f1\fs24 SoundActive()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value specifying whether or not a sound is currently playing.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SoundActive}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_StackAddress}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  StackAddress}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  StackAddress}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  StackAddress}}}{\b\f1\fs24 StackAddress(const int n)}{\b\f1\fs24  \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the stack address of the specified task.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 StackAddress}{\f2 (1);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_StackSize}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  StackSize}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  StackSize}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  StackSize}}}{\b\f1\fs24 StackSize(const int n)}{\b\f1\fs24  \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the size of the stack for the specified task.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 StackSize}{\f2 (1);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_System}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  System}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  System}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  System}}}{\b\f1\fs24 System(const int n)}{\b\f1\fs24  \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the specified system value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 System}{\f2 (SYS_BATTERY_LEVEL); // get the system value
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_SystemPreambleSize}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  SystemPreambleSize}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  SystemPreambleSize}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  SystemPreambleSize}}}{\b\f1\fs24 SystemPreambleSize()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the system preamble size.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 SystemPreambleSize}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_TaskAcquirePriority}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  TaskAcquirePriority}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  TaskAcquirePriority}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  TaskAcquirePriority}}}{\b\f1\fs24 TaskAcquirePriority()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the task acquire priority level.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 TaskAcquirePriority}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_ TaskSchedulingPriority()
\par }}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  TaskSchedulingPriority()
\par 
\par }}A{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  TaskSchedulingPriority()
\par 
\par }}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  TaskSchedulingPriority()
\par 
\par }}}{\b\f1\fs24 TaskSchedulingPriority()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the task scheduling priority.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 TaskSchedulingPriority}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_TransmitterRange}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  TransmitterRange}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  TransmitterRange}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  TransmitterRange}}}{\b\f1\fs24 TransmitterRange()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the transmitter range value.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 TransmitterRange}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_UnsolicitedMessages}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  UnsolicitedMessages}}A{\footnote 
\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  UnsolicitedMessages}}K{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  UnsolicitedMessages}}}{\b\f1\fs24 UnsolicitedMessages()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read a boolean value specifying whether or not to accept unsolicted messages.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 UnsolicitedMessages}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_Volume}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  Volume}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  Volume}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  Volume}}}{\b\f1\fs24 Volume()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the system volume level.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 Volume}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_WaitMS}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  WaitMS}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WaitMS}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WaitMS}}}{\b\f1\fs24 WaitMS(const int &v)}{\b\f1\fs24  \tab Function - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Wait for the specified number of milliseconds.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2\cf2 WaitMS}{\f2 (T1);
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par }\pard \ql \li0\ri0\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\cs16\f1\super #}{\f1  IDH_API_WatchFormat}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  WatchFormat}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  WatchFormat}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  WatchFormat}}}{\b\f1\fs24 WatchFormat()}{\b\f1\fs24 \tab Value - Swan}{\f1 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Read the watch format.
\par }\pard \ql \li720\ri0\sb120\widctlpar\tqr\tx8640\faauto\adjustright\rin0\lin720\itap0 {\f2 x = }{\f2\cf2 WatchFormat}{\f2 ();
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
\par \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{\f1  IDH_API_ASM}}${\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  asm}}A{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  asm}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  asm}
}}{\f1 The asm statement is used to define almost all of the NQC API calls. The syntax of the statement is:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\b\f2 asm}{\f2  \{ item1, item2 ... itemN \}
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 Where an item is one of the following
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\i\f2 constant_expression
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 $ }{\i\f2 expression}{\f2 
\par $ }{\i\f2 expression}{\f2  : }{\i\f2 restrictor}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The statement simply emits 
the values of each of the items as raw bytecodes. Constant items are the simplest - they result in a single byte of raw data (the lower 8 bits of the constant value). 
\par Many API functions take arguments, and these arguments must be encoded into an appropria
te effective address for the bytecode interpreter. In the most general case, an effective address contains a source code followed by a two byte value (least significant byte first). Source codes are explained in the SDK documentation available from LEGO. 
H
owever, it is often desirable to encode the value in some other manner - for example to use only a single byte value after the source code, omit the source code itself, or only allow certain sources to be used. A restrictor may be used to control how the 
effective address is formatted. A restrictor is a 32 bit constant value. The lower 24 bits form a bitmask indicating which sources are valid (bit 0 should be set to allow source 0, etc).
\par The upper 8 bits include formatting flags for the effective address. N
ote that when no restrictor is specified, this is the same as using a restrictor of 0 (no restriction on sources, and a format of source followed by two value bytes). The API file defines the following constants which can be used to build restrictors:

\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 # define __ASM_SMALL_VALUE 0x01000000
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 # define __ASM_NO_TYPE 0x02000000
\par # define __ASM_NO_LOCAL 0x04000000
\par # if __RCX == 2
\par }{\f2 // no restriction
\par }{\f2\cf12 # define __ASM_SRC_BASIC 0
\par # define __ASM_SRC_EXT 0
\par # else
\par # define __ASM_SRC_BASIC 0x000005
\par # define __ASM_SRC_EXT 0x000015
\par # endif
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
The __ASM_SMALL_VALUE flag indicates that a one-byte value should be used instead of a two-byte value. The __ASM_NO_TYPE flag indicates that the source code should be omitted. The __ASM_NO_LOCAL flag specifies that local variables are not
 a legal source for the expression. Note that the RCX2, Swan, and Spybotics firmwares are less restrictive than the other interpreters, thus the definition of __ASM_SRC_BASIC and __ASM_SRC_EXT are relaxed in these cases.
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page }{\cs16\f1\super #{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super #}{
\f1  IDH_API_AT}}${\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super $}{\f1  @}}A{\footnote \pard\plain 
\s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super A}{\f1  @}}K{\footnote \pard\plain \s15\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cs16\f1\super K}{\f1  @}}}{\f1 NQC provides a special operator to represent a data source:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 @ }{\i\f2 constant}{\f2 
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
The value of this expression is the data source described by the constant. The lower 16 bits of the constant represent the data value, and the next 8 bits are the source code. For example, t
he source code for a random number is 4, so the expression for a random number between 0 and 9 would be:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2 @0x40009
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 The NQC API file defines a number of macros which make the use of the @ operator transparent to the programmer. For example, in the case of random numbers:
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #define Random(n) @(0x40000 + (n))
\par }\pard \ql \li0\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 
Note that since source 0 is the global variable space, the global storage locations can be referenced by number: @0 refers to storage location 0. If for some reason you need explicit control over where varia
bles are being stored, then you should use #pragma reserve to instruct NQC not to use those storage locations, and then access them manually with the @ operator. For example, the following code snippet reserves location 0 and creates a macro for it called
 x.
\par }\pard \ql \li720\ri0\sb120\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #pragma reserve 0
\par }\pard \ql \li720\ri0\widctlpar\faauto\adjustright\rin0\lin720\itap0 {\f2\cf12 #define x(@0)
\par }\pard \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 {\f1 \page 
\par }}
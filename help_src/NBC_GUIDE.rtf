{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}
{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier{\*\falt Courier New};}{\f6\froman\fcharset0\fprq2{\*\panose 02020603040505020304}Tms Rmn;}{\f7\fswiss\fcharset0\fprq2{\*\panose 020b0604020202030204}Helv;}
{\f8\froman\fcharset0\fprq2{\*\panose 02040503060506020304}New York;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f11\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt ?l?r ??\'81\'66c};}
{\f12\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Batang{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt SimSun};}{\f14\froman\fcharset136\fprq2{\*\panose 02020300000000000000}PMingLiU{\*\falt !Ps2OcuAe};}
{\f15\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic{\*\falt ?l?r ?S?V?b?N};}
{\f16\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}Dotum{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcEcE\'a2\'aeE\'a1\'cbcE};}
{\f17\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimHei{\*\falt o???????????????????\'a1\'ec?????????2};}{\f18\fmodern\fcharset136\fprq1{\*\panose 02020309000000000000}MingLiU{\*\falt 2OcuAe};}
{\f19\froman\fcharset128\fprq1{\*\panose 02020609040305080305}Mincho{\*\falt ??\'81\'66c};}
{\f20\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}Gulim{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f21\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century;}{\f22\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Angsana New;}{\f23\fswiss\fcharset0\fprq2{\*\panose 020b0304020202020204}Cordia New;}
{\f24\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Mangal;}{\f25\fnil\fcharset0\fprq2{\*\panose 02000400000000000000}Latha;}{\f26\froman\fcharset0\fprq2{\*\panose 010a0502050306030303}Sylfaen;}
{\f27\fnil\fcharset0\fprq2{\*\panose 01010600010101010101}Vrinda;}{\f28\fnil\fcharset0\fprq2{\*\panose 02000500000000000000}Raavi;}{\f29\fnil\fcharset0\fprq2{\*\panose 02000500000000000000}Shruti;}
{\f30\froman\fcharset1\fprq2{\*\panose 00000400000000000000}Sendnya;}{\f31\fnil\fcharset0\fprq2{\*\panose 02000500000000000000}Gautami;}{\f32\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Tunga;}
{\f33\fscript\fcharset0\fprq2{\*\panose 03080600000000000000}Estrangelo Edessa;}{\f34\froman\fcharset0\fprq2{\*\panose 02020503030404060203}Kartika;}{\f35\fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS;}
{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f37\fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri{\*\falt Century Gothic};}{\f38\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}
{\f39\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times;}{\f40\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Palatino;}{\f41\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f42\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}{\f43\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Goudy;}{\f44\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}Carta;}
{\f45\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Optima;}{\f46\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Oxford;}{\f47\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bodoni;}
{\f48\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}{\f49\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Monaco;}{\f50\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Tekton;}
{\f51\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Chicago;}{\f52\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 55;}{\f53\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans;}
{\f54\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Marigold;}{\f55\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Joanna MT;}{\f56\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Clarendon;}
{\f57\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Eurostile;}{\f58\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus MT;}{\f59\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Cooper Black;}
{\f60\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bookman;}{\f61\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Letter Gothic;}{\f62\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 45 Light;}
{\f63\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}ZapfDingbats;}{\f64\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bodoni Poster;}{\f65\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans Light;}
{\f66\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Eurostile Bold;}{\f67\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Mona Lisa Recut;}{\f68\fscript\fcharset0\fprq2{\*\panose 00000000000000000000}Apple Chancery;}
{\f69\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Coronet;}{\f70\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Goudy ExtraBold;}{\f71\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Clarendon Light;}
{\f72\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}AvantGarde;}{\f73\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers Extended;}{\f74\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus MT Lt;}
{\f75\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica-Narrow;}{\f76\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Antique Olive Roman;}{\f77\froman\fcharset0\fprq2{\*\panose 00000000000000000000}LubalinGraph;}
{\f78\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Hoefler Text Black;}{\f79\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 57 Condensed;}{\f80\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans Condensed;}
{\f81\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}GillSans ExtraBold;}{\f82\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Hoefler Text;}{\f83\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica Condensed;}
{\f84\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Antique Olive Compact;}{\f85\froman\fcharset0\fprq2{\*\panose 00000000000000000000}StempelGaramond Roman;}{\f86\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Eurostile ExtendedTwo;}
{\f87\froman\fcharset0\fprq2{\*\panose 00000000000000000000}NewCenturySchlbk;}{\f88\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers 47 CondensedLight;}{\f89\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Copperplate32bc;}
{\f90\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bodoni PosterCompressed;}{\f91\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Copperplate33bc;}{\f92\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ZapfChancery;}
{\f93\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}{\f94\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f95\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}
{\f96\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f97\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f98\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}
{\f99\fswiss\fcharset0\fprq2{\*\panose 020b0603020102020204}Franklin Gothic Medium;}{\f100\froman\fcharset0\fprq2{\*\panose 02040502050505030304}Palatino Linotype;}{\f101\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}
{\f102\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f103\fnil\fcharset0\fprq2{\*\panose 02000500030200090000}MV Boli;}{\f104\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Microsoft Sans Serif;}
{\f105\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f106\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f107\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}
{\f108\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}{\f109\fnil\fcharset2\fprq2{\*\panose 05010100010000000000}MS Outlook;}{\f110\fscript\fcharset0\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}
{\f111\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f112\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f113\fnil\fcharset2\fprq2{\*\panose 05010101010101010101}Bookshelf Symbol 7;}
{\f114\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}MS Reference Sans Serif;}{\f115\fnil\fcharset2\fprq2{\*\panose 05000500000000000000}MS Reference Specialty;}{\f116\froman\fcharset222\fprq2{\*\panose 02020603050405020304}AngsanaUPC;}
{\f117\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}BrowalliaUPC;}{\f118\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Browallia New;}{\f119\fswiss\fcharset222\fprq2{\*\panose 020b0304020202020204}CordiaUPC;}
{\f120\froman\fcharset222\fprq2{\*\panose 02020603050405020304}DilleniaUPC;}{\f121\froman\fcharset222\fprq2{\*\panose 02020603050405020304}EucrosiaUPC;}{\f122\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}FreesiaUPC;}
{\f123\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}IrisUPC;}{\f124\froman\fcharset222\fprq2{\*\panose 02020603050405020304}JasmineUPC;}{\f125\froman\fcharset222\fprq2{\*\panose 02020603050405020304}KodchiangUPC;}
{\f126\fswiss\fcharset222\fprq2{\*\panose 020b0604020202020204}LilyUPC;}{\f127\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Aharoni;}{\f128\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David;}
{\f129\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}David Transparent;}{\f130\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}FrankRuehl;}{\f131\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Levenim MT;}
{\f132\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam;}{\f133\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Miriam Transparent;}{\f134\fbidi \fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Miriam Fixed;}
{\f135\fbidi \fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Fixed Miriam Transparent;}{\f136\fbidi \fnil\fcharset177\fprq2{\*\panose 00000000000000000000}Narkisim;}{\f137\fbidi \fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Rod;}
{\f138\fbidi \fmodern\fcharset177\fprq1{\*\panose 00000009000000000000}Rod Transparent;}{\f139\fbidi \fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Traditional Arabic;}
{\f140\fbidi \fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Arabic Transparent;}{\f141\fbidi \fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Andalus;}{\f142\fbidi \fnil\fcharset178\fprq2{\*\panose 02010000000000000000}Simplified Arabic;}
{\f143\fbidi \fmodern\fcharset178\fprq1{\*\panose 02010009000000000000}Simplified Arabic Fixed;}{\f144\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}{\f145\froman\fcharset128\fprq2{\*\panose 02020600040205080304}MS PMincho;}
{\f146\froman\fcharset128\fprq2{\*\panose 02020600040205080304}@MS PMincho;}{\f147\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}@MS Gothic;}{\f148\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS PGothic;}
{\f149\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS PGothic;}{\f150\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS UI Gothic;}{\f151\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS UI Gothic;}
{\f152\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}@Gulim;}{\f153\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}GulimChe;}{\f154\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}@GulimChe;}
{\f155\fswiss\fcharset129\fprq2{\*\panose 020b0600000101010101}@Dotum;}{\f156\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}DotumChe;}{\f157\fmodern\fcharset129\fprq1{\*\panose 020b0609000101010101}@DotumChe;}
{\f158\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Batang;}{\f159\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}BatangChe;}{\f160\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}@BatangChe;}
{\f161\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Gungsuh;}{\f162\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Gungsuh;}{\f163\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}GungsuhChe;}
{\f164\fmodern\fcharset129\fprq1{\*\panose 02030609000101010101}@GungsuhChe;}{\f165\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}NSimSun;}{\f166\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}@NSimSun;}
{\f167\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimHei;}{\f168\fmodern\fcharset136\fprq1{\*\panose 02020309000000000000}@MingLiU;}{\f169\froman\fcharset136\fprq2{\*\panose 02020300000000000000}@PMingLiU;}
{\f170\fmodern\fcharset0\fprq1{\*\panose 00000409000000000000}sshlinedraw;}{\f171\fswiss\fcharset0\fprq2{\*\panose 020b0503020202020204}Agency FB;}{\f172\fswiss\fcharset0\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}
{\f173\fdecor\fcharset0\fprq2{\*\panose 04020505051007020d02}Blackadder ITC;}{\f174\froman\fcharset0\fprq2{\*\panose 02070603080606020203}Bodoni MT;}{\f175\froman\fcharset0\fprq2{\*\panose 02070a03080606020203}Bodoni MT Black;}
{\f176\froman\fcharset0\fprq2{\*\panose 02070606080606020203}Bodoni MT Condensed;}{\f177\fscript\fcharset0\fprq2{\*\panose 03070402050302030203}Bradley Hand ITC;}{\f178\froman\fcharset0\fprq2{\*\panose 02040603050505030304}Calisto MT;}
{\f179\froman\fcharset0\fprq2{\*\panose 020a0402060406010301}Castellar;}{\f180\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f181\fswiss\fcharset0\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}
{\f182\fswiss\fcharset0\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f183\fdecor\fcharset0\fprq2{\*\panose 04040404050702020202}Curlz MT;}{\f184\fscript\fcharset0\fprq2{\*\panose 030303020407070d0804}Edwardian Script ITC;}
{\f185\froman\fcharset0\fprq2{\*\panose 02020904090505020303}Elephant;}{\f186\froman\fcharset0\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f187\fswiss\fcharset0\fprq2{\*\panose 020b0907030504020204}Eras Bold ITC;}
{\f188\fswiss\fcharset0\fprq2{\*\panose 020b0805030504020804}Eras Demi ITC;}{\f189\fswiss\fcharset0\fprq2{\*\panose 020b0402030504020804}Eras Light ITC;}{\f190\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020804}Eras Medium ITC;}
{\f191\fdecor\fcharset0\fprq2{\*\panose 04060505060202020a04}Felix Titling;}{\f192\fscript\fcharset0\fprq2{\*\panose 03060902040502070203}Forte;}{\f193\fswiss\fcharset0\fprq2{\*\panose 020b0503020102020204}Franklin Gothic Book;}
{\f194\fswiss\fcharset0\fprq2{\*\panose 020b0703020102020204}Franklin Gothic Demi;}{\f195\fswiss\fcharset0\fprq2{\*\panose 020b0706030402020204}Franklin Gothic Demi Cond;}{\f196\fswiss\fcharset0\fprq2{\*\panose 020b0903020102020204}Franklin Gothic Heavy;}
{\f197\fswiss\fcharset0\fprq2{\*\panose 020b0606030402020204}Franklin Gothic Medium Cond;}{\f198\fscript\fcharset0\fprq2{\*\panose 03020402040607040605}French Script MT;}{\f199\fdecor\fcharset0\fprq2{\*\panose 04040504061007020d02}Gigi;}
{\f200\fswiss\fcharset0\fprq2{\*\panose 020b0902020104020203}Gill Sans MT Ext Condensed Bold;}{\f201\fswiss\fcharset0\fprq2{\*\panose 020b0502020104020203}Gill Sans MT;}{\f202\fswiss\fcharset0\fprq2{\*\panose 020b0506020104020203}Gill Sans MT Condensed;}
{\f203\fswiss\fcharset0\fprq2{\*\panose 020b0a02020104020203}Gill Sans Ultra Bold;}{\f204\fswiss\fcharset0\fprq2{\*\panose 020b0a06020104020203}Gill Sans Ultra Bold Condensed;}
{\f205\froman\fcharset0\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}{\f206\froman\fcharset0\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f207\froman\fcharset0\fprq2{\*\panose 0202090407030b020401}Goudy Stout;}
{\f208\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}{\f209\fdecor\fcharset0\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}{\f210\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}
{\f211\fmodern\fcharset0\fprq1{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f212\fswiss\fcharset0\fprq2{\*\panose 020e0502030308020204}Maiandra GD;}{\f213\fmodern\fcharset0\fprq2{\*\panose 02010509020102010303}OCR A Extended;}
{\f214\fscript\fcharset0\fprq2{\*\panose 030303020206070c0b05}Palace Script MT;}{\f215\fscript\fcharset0\fprq2{\*\panose 03070502060502030205}Papyrus;}{\f216\froman\fcharset0\fprq2{\*\panose 02020502060401020303}Perpetua;}
{\f217\froman\fcharset0\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}{\f218\fscript\fcharset0\fprq2{\*\panose 03060402040406080204}Pristina;}{\f219\fscript\fcharset0\fprq2{\*\panose 03070502040507070304}Rage Italic;}
{\f220\froman\fcharset0\fprq2{\*\panose 02060603020205020403}Rockwell;}{\f221\froman\fcharset0\fprq2{\*\panose 02060603050405020104}Rockwell Condensed;}{\f222\froman\fcharset0\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}
{\f223\fscript\fcharset0\fprq2{\*\panose 03040602040607080904}Script MT Bold;}{\f224\fswiss\fcharset0\fprq2{\*\panose 020b0602020104020603}Tw Cen MT;}{\f225\fswiss\fcharset0\fprq2{\*\panose 020b0606020104020203}Tw Cen MT Condensed;}
{\f226\fswiss\fcharset0\fprq2{\*\panose 020b0803020202020204}Tw Cen MT Condensed Extra Bold;}{\f227\fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}@Arial Unicode MS;}{\f228\fswiss\fcharset0\fprq2{\*\panose 020b0606030504040204}Nina;}
{\f229\fswiss\fcharset2\fprq2{\*\panose 020b0504020104020203}Andale Mono IPA;}{\f230\froman\fcharset129\fprq2{\*\panose 02020603020101020101}VoicewarePron;}{\f231\froman\fcharset129\fprq2{\*\panose 02020603020101020101}@VoicewarePron;}
{\f232\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f233\froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}{\f234\froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f235\fswiss\fcharset0\fprq2{\*\panose 020e0502030303020204}Candara;}{\f236\fmodern\fcharset0\fprq1{\*\panose 020b0609020204030204}Consolas;}{\f237\froman\fcharset0\fprq2{\*\panose 02030602050306030303}Constantia;}
{\f238\fswiss\fcharset0\fprq2{\*\panose 020b0503020204020204}Corbel;}{\f239\froman\fcharset0\fprq2{\*\panose 0207060307050a020302}BernhardMod BT{\*\falt Times New Roman};}{\f240\fnil\fcharset0\fprq0{\*\panose 00000000000000000000}TimesNewRoman,Italic;}
{\f241\fnil\fcharset0\fprq0{\*\panose 00000000000000000000}TimesNewRoman;}{\f242\fswiss\fcharset0\fprq2{\*\panose 020b0603030502020204}ChaletOffice{\*\falt Trebuchet MS};}{\f243\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}CourierPS;}
{\f244\froman\fcharset0\fprq0{\*\panose 00000000000000000000}????????\'a1\'a7?????;}{\f245\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@\'cb\'ce\'cc\'e5;}{\f246\froman\fcharset0\fprq2 Times New Roman CYR;}
{\f247\froman\fcharset0\fprq2 Times New Roman TUR;}{\f248\fswiss\fcharset0\fprq2 Arial CYR;}{\f249\fswiss\fcharset0\fprq2 Arial TUR;}{\f250\fmodern\fcharset0\fprq1 Courier New CYR;}{\f251\fmodern\fcharset0\fprq1 Courier New TUR;}
{\f252\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Estrangella Edessa;}{\f253\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f254\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times{\*\falt Times New Roman};}
{\f255\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ITC Bookman;}{\f256\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Hoefler Text Regular;}{\f257\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}Hoefler Text Ornaments;}
{\f258\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Lubalin Graph;}{\f259\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ACaslon Regular;}{\f260\froman\fcharset0\fprq2{\*\panose 00000000000000000000}AGaramond Bold;}
{\f261\froman\fcharset0\fprq2{\*\panose 00000000000000000000}AGaramond;}{\f262\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Americana;}{\f263\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Americana ExtraBold;}
{\f264\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Barmeno Bold;}{\f265\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Barmeno ExtraBold;}{\f266\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Barmeno Regular;}
{\f267\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Blackoak;}{\f268\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Formata Regular;}{\f269\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica Black;}
{\f270\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica Light;}{\f271\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Kaufmann;}{\f272\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Korinna;}
{\f273\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Lithos Regular;}{\f274\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Parisian;}{\f275\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Park Avenue;}
{\f276\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}Poetica SuppOrnaments;}{\f277\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Trajan;}{\f278\fdecor\fcharset0\fprq2{\*\panose 00000000000000000000}Woodtype Ornaments 2;}
{\f279\froman\fcharset0\fprq2{\*\panose 02020602060405030402}Berling Antiqua;}{\f280\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Bookdings;}{\f281\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Frutiger Linotype;}
{\f282\froman\fcharset0\fprq2{\*\panose 02090504030505020304}AmerType Md BT;}{\f283\fswiss\fcharset0\fprq2{\*\panose 020b0402020204020303}Futura Lt BT;}{\f284\fswiss\fcharset0\fprq2{\*\panose 020b0903020204020204}Futura XBlk BT;}
{\f285\froman\fcharset0\fprq2{\*\panose 02020502050305020303}GoudyOlSt BT;}{\f286\froman\fcharset0\fprq2{\*\panose 02030904050306020704}Benguiat Bk BT;}{\f287\fswiss\fcharset0\fprq2{\*\panose 020b0802020204020204}Futura Md BT;}
{\f288\fdecor\fcharset0\fprq2{\*\panose 040409040d0702020402}Allegro BT;}{\f289\fscript\fcharset0\fprq2{\*\panose 03020702030807050705}TypoUpright BT;}{\f290\froman\fcharset0\fprq2{\*\panose 02040503050506040803}ZapfEllipt BT;}
{\f291\fdecor\fcharset0\fprq2{\*\panose 04030205020b02020502}BernhardFashion BT;}{\f292\froman\fcharset0\fprq2{\*\panose 02080503040505020303}Souvenir Lt BT;}{\f293\froman\fcharset0\fprq2{\*\panose 0204050203030b020204}Dauphin;}
{\f294\fswiss\fcharset0\fprq2{\*\panose 020e0705020203020404}CopprplGoth Bd BT;}{\f295\fswiss\fcharset0\fprq2{\*\panose 020b0807040502030204}Zurich BlkEx BT;}{\f296\fswiss\fcharset0\fprq2{\*\panose 020b0505020202020204}Zurich Ex BT;}
{\f297\fdecor\fcharset0\fprq2{\*\panose 04060705040702020204}Charlesworth;}{\f298\fdecor\fcharset0\fprq2{\*\panose 04040807060d02020704}Bremen Bd BT;}{\f299\fswiss\fcharset0\fprq2{\*\panose 020b0807020203060204}BankGothic Md BT;}
{\f300\fdecor\fcharset0\fprq2{\*\panose 04020604050203030203}GoudyHandtooled BT;}{\f301\fdecor\fcharset0\fprq2{\*\panose 040409050d0b02020403}FuturaBlack BT;}{\f302\fswiss\fcharset2\fprq2{\*\panose 020b0603050302020204}CommonBullets;}
{\f303\fscript\fcharset0\fprq2{\*\panose 03080702020302020206}OzHandicraft BT;}{\f304\fscript\fcharset0\fprq2{\*\panose 03030702030607090b03}ShelleyAllegro BT;}{\f305\froman\fcharset0\fprq2{\*\panose 02060303030505020204}Serifa Th BT;}
{\f306\fscript\fcharset0\fprq2{\*\panose 03090702030407020403}Staccato222 BT;}{\f307\fswiss\fcharset0\fprq2{\*\panose 020b0402020202020204}AvantGarde Bk BT;}{\f308\fswiss\fcharset0\fprq2{\*\panose 020b0602020202020204}AvantGarde Md BT;}
{\f309\froman\fcharset0\fprq2{\*\panose 02060503030505020204}Serifa BT;}{\f310\fdecor\fcharset0\fprq2{\*\panose 040b0500000000000000}LithographLight;}{\f311\fswiss\fcharset0\fprq2{\*\panose 020d0902020204020204}Kabel Ult BT;}
{\f312\fswiss\fcharset0\fprq2{\*\panose 020b0708030702060204}Swiss911 XCm BT;}{\f313\fswiss\fcharset0\fprq2{\*\panose 020d0402020204020904}Kabel Bk BT;}{\f314\fswiss\fcharset0\fprq2{\*\panose 020b0602020204020204}Humanst521 BT;}
{\f315\fmodern\fcharset0\fprq1{\*\panose 02070509020205020404}CourierThai;}{\f316\froman\fcharset0\fprq2{\*\panose 02040603070505020404}Lucida Bright;}{\f317\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Thonburi;}
{\f318\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Lithograph;}{\f319\froman\fcharset0\fprq2{\*\panose 02070a02080905020204}PosterBodoni BT;}{\f320\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Icom symbols;}
{\f321\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}TI-83 Symbols;}{\f322\froman\fcharset2\fprq2{\*\panose 05050102010205020202}MT Extra;}{\f323\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Sydnie;}
{\f324\froman\fcharset0\fprq0{\*\panose 00000000000000000000}DMOACursiveArrowDot;}{\f325\froman\fcharset0\fprq0{\*\panose 00000000000000000000}DU<;}{\f326\fnil\fcharset2\fprq2{\*\panose 00000400000000000000}VisualUI;}
{\f327\fnil\fcharset161\fprq2{\*\panose 00000000000000000000}Sydnie Greek;}{\f328\fmodern\fcharset222\fprq1{\*\panose 00000000000000000000}CourierThai (Thai);}{\f329\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Bright CE;}
{\f330\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Bright Tur;}{\f331\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Bright Baltic;}{\f332\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Lucida Sans CE;}
{\f333\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Lucida Sans Cyr;}{\f334\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Lucida Sans Greek;}{\f335\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Lucida Sans Tur;}
{\f336\fbidi \fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Lucida Sans (Hebrew);}{\f337\fbidi \fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Lucida Sans (Arabic);}
{\f338\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Lucida Sans Baltic;}{\f339\fswiss\fcharset238\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter CE;}
{\f340\fswiss\fcharset204\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Cyr;}{\f341\fswiss\fcharset161\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Greek;}
{\f342\fswiss\fcharset162\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Tur;}{\f343\fbidi \fswiss\fcharset177\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter (Hebrew);}
{\f344\fswiss\fcharset186\fprq1{\*\panose 00000000000000000000}Lucida Sans Typewriter Baltic;}{\f345\fswiss\fcharset222\fprq2{\*\panose 00000000000000000000}Thonburi (Thai);}{\f346\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}LinePrinter;}
{\f347\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers;}{\f348\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Univers Condensed;}{\f349\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Antique Olive;}
{\f350\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}CG Omega;}{\f351\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus Medium;}{\f352\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Albertus Extra Bold;}
{\f353\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Clarendon Condensed;}{\f354\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}Mural Script;}{\f355\froman\fcharset0\fprq0{\*\panose 00000000000000000000}TimesNewRoman,Bold;}
{\f356\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Berling Antiqua CE;}{\f357\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Berling Antiqua Tur;}{\f358\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Berling Antiqua Baltic;}
{\f359\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Frutiger Linotype CE;}{\f360\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Frutiger Linotype Tur;}
{\f361\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Frutiger Linotype Baltic;}{\f362\froman\fcharset238\fprq2{\*\panose 00000000000000000000}AmerType Md BT CE;}
{\f363\froman\fcharset161\fprq2{\*\panose 00000000000000000000}AmerType Md BT Greek;}{\f364\froman\fcharset162\fprq2{\*\panose 00000000000000000000}AmerType Md BT Tur;}{\f365\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Futura Lt BT CE;}
{\f366\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Futura Lt BT Greek;}{\f367\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Futura Lt BT Tur;}{\f368\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Futura XBlk BT CE;}
{\f369\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Futura XBlk BT Greek;}{\f370\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Futura XBlk BT Tur;}{\f371\froman\fcharset238\fprq2{\*\panose 00000000000000000000}GoudyOlSt BT CE;}
{\f372\froman\fcharset161\fprq2{\*\panose 00000000000000000000}GoudyOlSt BT Greek;}{\f373\froman\fcharset162\fprq2{\*\panose 00000000000000000000}GoudyOlSt BT Tur;}{\f374\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Benguiat Bk BT CE;}
{\f375\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Benguiat Bk BT Greek;}{\f376\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Benguiat Bk BT Tur;}{\f377\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Futura Md BT CE;}
{\f378\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Futura Md BT Greek;}{\f379\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Futura Md BT Tur;}{\f380\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}Allegro BT CE;}
{\f381\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}Allegro BT Greek;}{\f382\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}Allegro BT Tur;}{\f383\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}TypoUpright BT CE;}
{\f384\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}TypoUpright BT Greek;}{\f385\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}TypoUpright BT Tur;}{\f386\froman\fcharset238\fprq2{\*\panose 00000000000000000000}ZapfEllipt BT CE;}
{\f387\froman\fcharset161\fprq2{\*\panose 00000000000000000000}ZapfEllipt BT Greek;}{\f388\froman\fcharset162\fprq2{\*\panose 00000000000000000000}ZapfEllipt BT Tur;}{\f389\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}BernhardFashion BT CE;}
{\f390\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}BernhardFashion BT Greek;}{\f391\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}BernhardFashion BT Tur;}
{\f392\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Souvenir Lt BT CE;}{\f393\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Souvenir Lt BT Greek;}{\f394\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Souvenir Lt BT Tur;}
{\f395\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}CopprplGoth Bd BT CE;}{\f396\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}CopprplGoth Bd BT Greek;}
{\f397\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}CopprplGoth Bd BT Tur;}{\f398\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Zurich BlkEx BT CE;}{\f399\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Zurich BlkEx BT Greek;}
{\f400\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Zurich BlkEx BT Tur;}{\f401\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Zurich Ex BT CE;}{\f402\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Zurich Ex BT Greek;}
{\f403\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Zurich Ex BT Tur;}{\f404\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}Bremen Bd BT CE;}{\f405\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}Bremen Bd BT Greek;}
{\f406\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}Bremen Bd BT Tur;}{\f407\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}BankGothic Md BT CE;}{\f408\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}BankGothic Md BT Greek;}
{\f409\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}BankGothic Md BT Tur;}{\f410\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}GoudyHandtooled BT CE;}
{\f411\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}GoudyHandtooled BT Greek;}{\f412\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}GoudyHandtooled BT Tur;}
{\f413\fdecor\fcharset238\fprq2{\*\panose 00000000000000000000}FuturaBlack BT CE;}{\f414\fdecor\fcharset161\fprq2{\*\panose 00000000000000000000}FuturaBlack BT Greek;}{\f415\fdecor\fcharset162\fprq2{\*\panose 00000000000000000000}FuturaBlack BT Tur;}
{\f416\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}OzHandicraft BT CE;}{\f417\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}OzHandicraft BT Greek;}
{\f418\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}OzHandicraft BT Tur;}{\f419\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}ShelleyAllegro BT CE;}
{\f420\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}ShelleyAllegro BT Greek;}{\f421\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}ShelleyAllegro BT Tur;}
{\f422\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Serifa Th BT CE;}{\f423\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Serifa Th BT Greek;}{\f424\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Serifa Th BT Tur;}
{\f425\fscript\fcharset238\fprq2{\*\panose 00000000000000000000}Staccato222 BT CE;}{\f426\fscript\fcharset161\fprq2{\*\panose 00000000000000000000}Staccato222 BT Greek;}{\f427\fscript\fcharset162\fprq2{\*\panose 00000000000000000000}Staccato222 BT Tur;}
{\f428\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}AvantGarde Bk BT CE;}{\f429\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}AvantGarde Bk BT Greek;}
{\f430\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}AvantGarde Bk BT Tur;}{\f431\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}AvantGarde Md BT CE;}
{\f432\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}AvantGarde Md BT Greek;}{\f433\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}AvantGarde Md BT Tur;}{\f434\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Serifa BT CE;}
{\f435\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Serifa BT Greek;}{\f436\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Serifa BT Tur;}{\f437\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Kabel Ult BT CE;}
{\f438\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Kabel Ult BT Greek;}{\f439\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Kabel Ult BT Tur;}{\f440\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Swiss911 XCm BT CE;}
{\f441\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Swiss911 XCm BT Greek;}{\f442\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Swiss911 XCm BT Tur;}{\f443\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Kabel Bk BT CE;}
{\f444\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Kabel Bk BT Greek;}{\f445\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Kabel Bk BT Tur;}{\f446\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Humanst521 BT CE;}
{\f447\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Humanst521 BT Greek;}{\f448\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Humanst521 BT Tur;}{\f449\froman\fcharset238\fprq2{\*\panose 00000000000000000000}PosterBodoni BT CE;}
{\f450\froman\fcharset161\fprq2{\*\panose 00000000000000000000}PosterBodoni BT Greek;}{\f451\froman\fcharset162\fprq2{\*\panose 00000000000000000000}PosterBodoni BT Tur;}
{\f452\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}@\'d0\'c2\'cb\'ce\'cc\'e5;}{\f453\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@\'ba\'da\'cc\'e5;}
{\f454\fnil\fcharset0\fprq2{\*\panose 00000000000000000000}@\'cb\'ce\'cc\'e5 Western;}{\f455\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman CYR (Vietnamese;}{\f456\froman\fcharset0\fprq2 Times New Roman Greek;}
{\f457\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman Greek (Vietname;}{\f458\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman TUR (Vietnamese;}{\f459\froman\fcharset0\fprq2 Times New Roman Baltic;}
{\f460\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times New Roman Baltic (Vietnam;}{\f461\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Microsoft Sans Serif (Vietnames;}
{\f462\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Franklin Gothic Demi Cond Balti;}{\f463\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Franklin Gothic Medium Cond Gre;}
{\f464\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Franklin Gothic Medium Cond Bal;}{\f465\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Gill Sans Ultra Bold Condensed ;}
{\f466\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}MS Reference Sans Serif (Vietna;}{\f467\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Tw Cen MT Condensed Extra Bold ;}
{\f468\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@\'d0\'c2\'cb\'ce\'cc\'e5 Western;}{\f469\froman\fcharset0\fprq0{\*\panose 00000000000000000000}(Use Asian text font){\*\falt Times New Roman};}
{\f470\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}ChaletOffice CE{\*\falt Trebuchet MS};}{\f471\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}ChaletOffice Cyr{\*\falt Trebuchet MS};}
{\f472\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}ChaletOffice Tur{\*\falt Trebuchet MS};}{\f473\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}ChaletOffice Baltic{\*\falt Trebuchet MS};}
{\f474\froman\fcharset238\fprq2{\*\panose 00000000000000000000}BernhardMod BT CE{\*\falt Times New Roman};}{\f475\froman\fcharset161\fprq2{\*\panose 00000000000000000000}BernhardMod BT Greek{\*\falt Times New Roman};}
{\f476\froman\fcharset162\fprq2{\*\panose 00000000000000000000}BernhardMod BT Tur{\*\falt Times New Roman};}{\f477\froman\fcharset0\fprq2 Times New Roman CE;}{\f478\fswiss\fcharset0\fprq2 Arial CE;}{\f479\fswiss\fcharset0\fprq2 Arial Greek;}
{\f480\fswiss\fcharset0\fprq2 Arial Baltic;}{\f481\fmodern\fcharset0\fprq1 Courier New CE;}{\f482\fmodern\fcharset0\fprq1 Courier New Greek;}{\f483\fmodern\fcharset0\fprq1 Courier New Baltic;}
{\f484\fswiss\fcharset238\fprq2{\*\panose 00000000000000000000}Helvetica CE;}{\f485\fswiss\fcharset204\fprq2{\*\panose 00000000000000000000}Helvetica Cyr;}{\f486\fswiss\fcharset161\fprq2{\*\panose 00000000000000000000}Helvetica Greek;}
{\f487\fswiss\fcharset162\fprq2{\*\panose 00000000000000000000}Helvetica Tur;}{\f488\fbidi \fswiss\fcharset177\fprq2{\*\panose 00000000000000000000}Helvetica (Hebrew);}
{\f489\fbidi \fswiss\fcharset178\fprq2{\*\panose 00000000000000000000}Helvetica (Arabic);}{\f490\fswiss\fcharset186\fprq2{\*\panose 00000000000000000000}Helvetica Baltic;}
{\f491\fswiss\fcharset163\fprq2{\*\panose 00000000000000000000}Helvetica (Vietnamese);}{\f492\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Times CE;}{\f493\froman\fcharset204\fprq2{\*\panose 00000000000000000000}Times Cyr;}
{\f494\froman\fcharset161\fprq2{\*\panose 00000000000000000000}Times Greek;}{\f495\froman\fcharset162\fprq2{\*\panose 00000000000000000000}Times Tur;}{\f496\fbidi \froman\fcharset177\fprq2{\*\panose 00000000000000000000}Times (Hebrew);}
{\f497\fbidi \froman\fcharset178\fprq2{\*\panose 00000000000000000000}Times (Arabic);}{\f498\froman\fcharset186\fprq2{\*\panose 00000000000000000000}Times Baltic;}{\f499\froman\fcharset163\fprq2{\*\panose 00000000000000000000}Times (Vietnamese);}
{\f500\froman\fcharset238\fprq2{\*\panose 00000000000000000000}Rockwell CE;}{\f501\froman\fcharset238\fprq2 Times New Roman CE;}{\f502\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f504\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f505\froman\fcharset162\fprq2 Times New Roman Tur;}{\f506\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f507\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f508\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f509\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f511\fswiss\fcharset238\fprq2 Arial CE;}{\f512\fswiss\fcharset204\fprq2 Arial Cyr;}{\f514\fswiss\fcharset161\fprq2 Arial Greek;}{\f515\fswiss\fcharset162\fprq2 Arial Tur;}
{\f516\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f517\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f518\fswiss\fcharset186\fprq2 Arial Baltic;}{\f519\fswiss\fcharset163\fprq2 Arial (Vietnamese);}
{\f521\fmodern\fcharset238\fprq1 Courier New CE;}{\f522\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f524\fmodern\fcharset161\fprq1 Courier New Greek;}{\f525\fmodern\fcharset162\fprq1 Courier New Tur;}
{\f526\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f527\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f528\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f529\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}
{\f613\fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt ?l?r ??\'81\'66c};}{\f611\fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt ?l?r ??\'81\'66c};}{\f612\fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt ?l?r ??\'81\'66c};}
{\f614\fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt ?l?r ??\'81\'66c};}{\f615\fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt ?l?r ??\'81\'66c};}{\f618\fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt ?l?r ??\'81\'66c};}
{\f623\froman\fcharset0\fprq2 Batang Western{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f621\froman\fcharset238\fprq2 Batang CE{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f622\froman\fcharset204\fprq2 Batang Cyr{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f624\froman\fcharset161\fprq2 Batang Greek{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f625\froman\fcharset162\fprq2 Batang Tur{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f628\froman\fcharset186\fprq2 Batang Baltic{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}{\f633\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}
{\f643\froman\fcharset0\fprq2 PMingLiU Western{\*\falt !Ps2OcuAe};}{\f653\fmodern\fcharset0\fprq1 MS Gothic Western{\*\falt ?l?r ?S?V?b?N};}{\f651\fmodern\fcharset238\fprq1 MS Gothic CE{\*\falt ?l?r ?S?V?b?N};}
{\f652\fmodern\fcharset204\fprq1 MS Gothic Cyr{\*\falt ?l?r ?S?V?b?N};}{\f654\fmodern\fcharset161\fprq1 MS Gothic Greek{\*\falt ?l?r ?S?V?b?N};}{\f655\fmodern\fcharset162\fprq1 MS Gothic Tur{\*\falt ?l?r ?S?V?b?N};}
{\f658\fmodern\fcharset186\fprq1 MS Gothic Baltic{\*\falt ?l?r ?S?V?b?N};}{\f663\fswiss\fcharset0\fprq2 Dotum Western{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcEcE\'a2\'aeE\'a1\'cbcE};}
{\f661\fswiss\fcharset238\fprq2 Dotum CE{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcEcE\'a2\'aeE\'a1\'cbcE};}
{\f662\fswiss\fcharset204\fprq2 Dotum Cyr{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcEcE\'a2\'aeE\'a1\'cbcE};}
{\f664\fswiss\fcharset161\fprq2 Dotum Greek{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcEcE\'a2\'aeE\'a1\'cbcE};}
{\f665\fswiss\fcharset162\fprq2 Dotum Tur{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcEcE\'a2\'aeE\'a1\'cbcE};}
{\f668\fswiss\fcharset186\fprq2 Dotum Baltic{\*\falt \'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcEcE\'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcEcE\'a2\'aeE\'a1\'cbcE};}{\f683\fmodern\fcharset0\fprq1 MingLiU Western{\*\falt 2OcuAe};}
{\f703\fswiss\fcharset0\fprq2 Gulim Western{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f701\fswiss\fcharset238\fprq2 Gulim CE{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f702\fswiss\fcharset204\fprq2 Gulim Cyr{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f704\fswiss\fcharset161\fprq2 Gulim Greek{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f705\fswiss\fcharset162\fprq2 Gulim Tur{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}
{\f708\fswiss\fcharset186\fprq2 Gulim Baltic{\*\falt \'a2\'aeE\'a1\'cbcE\'a1\'cb\'a2\'e7EcE\'a1\'cb\'a2\'e7E\'a2\'aeEcEcE\'a1\'cb\'a2\'e7E\'a2\'aeEcE\'a2\'aeE\'a1\'cbcE};}{\f711\froman\fcharset238\fprq2 Century CE;}
{\f712\froman\fcharset204\fprq2 Century Cyr;}{\f714\froman\fcharset161\fprq2 Century Greek;}{\f715\froman\fcharset162\fprq2 Century Tur;}{\f718\froman\fcharset186\fprq2 Century Baltic;}{\f730\froman\fcharset222\fprq2 Angsana New (Thai);}
{\f740\fswiss\fcharset222\fprq2 Cordia New (Thai);}{\f761\froman\fcharset238\fprq2 Sylfaen CE;}{\f762\froman\fcharset204\fprq2 Sylfaen Cyr;}{\f764\froman\fcharset161\fprq2 Sylfaen Greek;}{\f765\froman\fcharset162\fprq2 Sylfaen Tur;}
{\f768\froman\fcharset186\fprq2 Sylfaen Baltic;}{\f853\fswiss\fcharset0\fprq2 Arial Unicode MS Western;}{\f851\fswiss\fcharset238\fprq2 Arial Unicode MS CE;}{\f852\fswiss\fcharset204\fprq2 Arial Unicode MS Cyr;}
{\f854\fswiss\fcharset161\fprq2 Arial Unicode MS Greek;}{\f855\fswiss\fcharset162\fprq2 Arial Unicode MS Tur;}{\f856\fbidi \fswiss\fcharset177\fprq2 Arial Unicode MS (Hebrew);}{\f857\fbidi \fswiss\fcharset178\fprq2 Arial Unicode MS (Arabic);}
{\f858\fswiss\fcharset186\fprq2 Arial Unicode MS Baltic;}{\f859\fswiss\fcharset163\fprq2 Arial Unicode MS (Vietnamese);}{\f860\fswiss\fcharset222\fprq2 Arial Unicode MS (Thai);}{\f861\fswiss\fcharset238\fprq2 Tahoma CE;}
{\f862\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f864\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f865\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f866\fbidi \fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f867\fbidi \fswiss\fcharset178\fprq2 Tahoma (Arabic);}
{\f868\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f869\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}{\f870\fswiss\fcharset222\fprq2 Tahoma (Thai);}{\f871\fswiss\fcharset238\fprq2 Calibri CE{\*\falt Century Gothic};}
{\f872\fswiss\fcharset204\fprq2 Calibri Cyr{\*\falt Century Gothic};}{\f874\fswiss\fcharset161\fprq2 Calibri Greek{\*\falt Century Gothic};}{\f875\fswiss\fcharset162\fprq2 Calibri Tur{\*\falt Century Gothic};}
{\f878\fswiss\fcharset186\fprq2 Calibri Baltic{\*\falt Century Gothic};}{\f881\fswiss\fcharset238\fprq2 Century Gothic CE;}{\f882\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f884\fswiss\fcharset161\fprq2 Century Gothic Greek;}
{\f885\fswiss\fcharset162\fprq2 Century Gothic Tur;}{\f888\fswiss\fcharset186\fprq2 Century Gothic Baltic;}{\f911\fswiss\fcharset238\fprq2 Verdana CE;}{\f912\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f914\fswiss\fcharset161\fprq2 Verdana Greek;}
{\f915\fswiss\fcharset162\fprq2 Verdana Tur;}{\f918\fswiss\fcharset186\fprq2 Verdana Baltic;}{\f919\fswiss\fcharset163\fprq2 Verdana (Vietnamese);}{\f923\fnil\fcharset0\fprq2 @SimSun Western;}{\f1441\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}
{\f1442\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}{\f1444\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f1445\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f1446\fbidi \fswiss\fcharset177\fprq2 Lucida Sans Unicode (Hebrew);}
{\f1451\fswiss\fcharset238\fprq2 Arial Black CE;}{\f1452\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f1454\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f1455\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f1458\fswiss\fcharset186\fprq2 Arial Black Baltic;}
{\f1461\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f1462\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}{\f1464\fscript\fcharset161\fprq2 Comic Sans MS Greek;}{\f1465\fscript\fcharset162\fprq2 Comic Sans MS Tur;}
{\f1468\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f1471\fswiss\fcharset238\fprq2 Impact CE;}{\f1472\fswiss\fcharset204\fprq2 Impact Cyr;}{\f1474\fswiss\fcharset161\fprq2 Impact Greek;}{\f1475\fswiss\fcharset162\fprq2 Impact Tur;}
{\f1478\fswiss\fcharset186\fprq2 Impact Baltic;}{\f1481\froman\fcharset238\fprq2 Georgia CE;}{\f1482\froman\fcharset204\fprq2 Georgia Cyr;}{\f1484\froman\fcharset161\fprq2 Georgia Greek;}{\f1485\froman\fcharset162\fprq2 Georgia Tur;}
{\f1488\froman\fcharset186\fprq2 Georgia Baltic;}{\f1491\fswiss\fcharset238\fprq2 Franklin Gothic Medium CE;}{\f1492\fswiss\fcharset204\fprq2 Franklin Gothic Medium Cyr;}{\f1494\fswiss\fcharset161\fprq2 Franklin Gothic Medium Greek;}
{\f1495\fswiss\fcharset162\fprq2 Franklin Gothic Medium Tur;}{\f1498\fswiss\fcharset186\fprq2 Franklin Gothic Medium Baltic;}{\f1501\froman\fcharset238\fprq2 Palatino Linotype CE;}{\f1502\froman\fcharset204\fprq2 Palatino Linotype Cyr;}
{\f1504\froman\fcharset161\fprq2 Palatino Linotype Greek;}{\f1505\froman\fcharset162\fprq2 Palatino Linotype Tur;}{\f1508\froman\fcharset186\fprq2 Palatino Linotype Baltic;}{\f1509\froman\fcharset163\fprq2 Palatino Linotype (Vietnamese);}
{\f1511\fswiss\fcharset238\fprq2 Trebuchet MS CE;}{\f1512\fswiss\fcharset204\fprq2 Trebuchet MS Cyr;}{\f1514\fswiss\fcharset161\fprq2 Trebuchet MS Greek;}{\f1515\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}
{\f1518\fswiss\fcharset186\fprq2 Trebuchet MS Baltic;}{\f1541\fswiss\fcharset238\fprq2 Microsoft Sans Serif CE;}{\f1542\fswiss\fcharset204\fprq2 Microsoft Sans Serif Cyr;}{\f1544\fswiss\fcharset161\fprq2 Microsoft Sans Serif Greek;}
{\f1545\fswiss\fcharset162\fprq2 Microsoft Sans Serif Tur;}{\f1546\fbidi \fswiss\fcharset177\fprq2 Microsoft Sans Serif (Hebrew);}{\f1547\fbidi \fswiss\fcharset178\fprq2 Microsoft Sans Serif (Arabic);}
{\f1548\fswiss\fcharset186\fprq2 Microsoft Sans Serif Baltic;}{\f1549\fswiss\fcharset163\fprq2 Microsoft Sans Serif (Vietnamese);}{\f1550\fswiss\fcharset222\fprq2 Microsoft Sans Serif (Thai);}{\f1551\fswiss\fcharset238\fprq2 Arial Narrow CE;}
{\f1552\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f1554\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f1555\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f1558\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}
{\f1561\froman\fcharset238\fprq2 Book Antiqua CE;}{\f1562\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f1564\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f1565\froman\fcharset162\fprq2 Book Antiqua Tur;}
{\f1568\froman\fcharset186\fprq2 Book Antiqua Baltic;}{\f1571\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f1572\froman\fcharset204\fprq2 Bookman Old Style Cyr;}{\f1574\froman\fcharset161\fprq2 Bookman Old Style Greek;}
{\f1575\froman\fcharset162\fprq2 Bookman Old Style Tur;}{\f1578\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f1581\froman\fcharset238\fprq2 Garamond CE;}{\f1582\froman\fcharset204\fprq2 Garamond Cyr;}
{\f1584\froman\fcharset161\fprq2 Garamond Greek;}{\f1585\froman\fcharset162\fprq2 Garamond Tur;}{\f1588\froman\fcharset186\fprq2 Garamond Baltic;}{\f1601\fscript\fcharset238\fprq2 Monotype Corsiva CE;}
{\f1602\fscript\fcharset204\fprq2 Monotype Corsiva Cyr;}{\f1604\fscript\fcharset161\fprq2 Monotype Corsiva Greek;}{\f1605\fscript\fcharset162\fprq2 Monotype Corsiva Tur;}{\f1608\fscript\fcharset186\fprq2 Monotype Corsiva Baltic;}
{\f1641\fswiss\fcharset238\fprq2 MS Reference Sans Serif CE;}{\f1642\fswiss\fcharset204\fprq2 MS Reference Sans Serif Cyr;}{\f1644\fswiss\fcharset161\fprq2 MS Reference Sans Serif Greek;}{\f1645\fswiss\fcharset162\fprq2 MS Reference Sans Serif Tur;}
{\f1648\fswiss\fcharset186\fprq2 MS Reference Sans Serif Baltic;}{\f1649\fswiss\fcharset163\fprq2 MS Reference Sans Serif (Vietnamese);}{\f1690\fswiss\fcharset222\fprq2 Browallia New (Thai);}{\f1943\fmodern\fcharset0\fprq1 @MS Mincho Western;}
{\f1941\fmodern\fcharset238\fprq1 @MS Mincho CE;}{\f1942\fmodern\fcharset204\fprq1 @MS Mincho Cyr;}{\f1944\fmodern\fcharset161\fprq1 @MS Mincho Greek;}{\f1945\fmodern\fcharset162\fprq1 @MS Mincho Tur;}{\f1948\fmodern\fcharset186\fprq1 @MS Mincho Baltic;}
{\f1953\froman\fcharset0\fprq2 MS PMincho Western;}{\f1951\froman\fcharset238\fprq2 MS PMincho CE;}{\f1952\froman\fcharset204\fprq2 MS PMincho Cyr;}{\f1954\froman\fcharset161\fprq2 MS PMincho Greek;}{\f1955\froman\fcharset162\fprq2 MS PMincho Tur;}
{\f1958\froman\fcharset186\fprq2 MS PMincho Baltic;}{\f1963\froman\fcharset0\fprq2 @MS PMincho Western;}{\f1961\froman\fcharset238\fprq2 @MS PMincho CE;}{\f1962\froman\fcharset204\fprq2 @MS PMincho Cyr;}{\f1964\froman\fcharset161\fprq2 @MS PMincho Greek;}
{\f1965\froman\fcharset162\fprq2 @MS PMincho Tur;}{\f1968\froman\fcharset186\fprq2 @MS PMincho Baltic;}{\f1973\fmodern\fcharset0\fprq1 @MS Gothic Western;}{\f1971\fmodern\fcharset238\fprq1 @MS Gothic CE;}{\f1972\fmodern\fcharset204\fprq1 @MS Gothic Cyr;}
{\f1974\fmodern\fcharset161\fprq1 @MS Gothic Greek;}{\f1975\fmodern\fcharset162\fprq1 @MS Gothic Tur;}{\f1978\fmodern\fcharset186\fprq1 @MS Gothic Baltic;}{\f1983\fswiss\fcharset0\fprq2 MS PGothic Western;}{\f1981\fswiss\fcharset238\fprq2 MS PGothic CE;}
{\f1982\fswiss\fcharset204\fprq2 MS PGothic Cyr;}{\f1984\fswiss\fcharset161\fprq2 MS PGothic Greek;}{\f1985\fswiss\fcharset162\fprq2 MS PGothic Tur;}{\f1988\fswiss\fcharset186\fprq2 MS PGothic Baltic;}{\f1993\fswiss\fcharset0\fprq2 @MS PGothic Western;}
{\f1991\fswiss\fcharset238\fprq2 @MS PGothic CE;}{\f1992\fswiss\fcharset204\fprq2 @MS PGothic Cyr;}{\f1994\fswiss\fcharset161\fprq2 @MS PGothic Greek;}{\f1995\fswiss\fcharset162\fprq2 @MS PGothic Tur;}{\f1998\fswiss\fcharset186\fprq2 @MS PGothic Baltic;}
{\f2003\fswiss\fcharset0\fprq2 MS UI Gothic Western;}{\f2001\fswiss\fcharset238\fprq2 MS UI Gothic CE;}{\f2002\fswiss\fcharset204\fprq2 MS UI Gothic Cyr;}{\f2004\fswiss\fcharset161\fprq2 MS UI Gothic Greek;}
{\f2005\fswiss\fcharset162\fprq2 MS UI Gothic Tur;}{\f2008\fswiss\fcharset186\fprq2 MS UI Gothic Baltic;}{\f2013\fswiss\fcharset0\fprq2 @MS UI Gothic Western;}{\f2011\fswiss\fcharset238\fprq2 @MS UI Gothic CE;}
{\f2012\fswiss\fcharset204\fprq2 @MS UI Gothic Cyr;}{\f2014\fswiss\fcharset161\fprq2 @MS UI Gothic Greek;}{\f2015\fswiss\fcharset162\fprq2 @MS UI Gothic Tur;}{\f2018\fswiss\fcharset186\fprq2 @MS UI Gothic Baltic;}
{\f2023\fswiss\fcharset0\fprq2 @Gulim Western;}{\f2021\fswiss\fcharset238\fprq2 @Gulim CE;}{\f2022\fswiss\fcharset204\fprq2 @Gulim Cyr;}{\f2024\fswiss\fcharset161\fprq2 @Gulim Greek;}{\f2025\fswiss\fcharset162\fprq2 @Gulim Tur;}
{\f2028\fswiss\fcharset186\fprq2 @Gulim Baltic;}{\f2033\fmodern\fcharset0\fprq1 GulimChe Western;}{\f2031\fmodern\fcharset238\fprq1 GulimChe CE;}{\f2032\fmodern\fcharset204\fprq1 GulimChe Cyr;}{\f2034\fmodern\fcharset161\fprq1 GulimChe Greek;}
{\f2035\fmodern\fcharset162\fprq1 GulimChe Tur;}{\f2038\fmodern\fcharset186\fprq1 GulimChe Baltic;}{\f2043\fmodern\fcharset0\fprq1 @GulimChe Western;}{\f2041\fmodern\fcharset238\fprq1 @GulimChe CE;}{\f2042\fmodern\fcharset204\fprq1 @GulimChe Cyr;}
{\f2044\fmodern\fcharset161\fprq1 @GulimChe Greek;}{\f2045\fmodern\fcharset162\fprq1 @GulimChe Tur;}{\f2048\fmodern\fcharset186\fprq1 @GulimChe Baltic;}{\f2053\fswiss\fcharset0\fprq2 @Dotum Western;}{\f2051\fswiss\fcharset238\fprq2 @Dotum CE;}
{\f2052\fswiss\fcharset204\fprq2 @Dotum Cyr;}{\f2054\fswiss\fcharset161\fprq2 @Dotum Greek;}{\f2055\fswiss\fcharset162\fprq2 @Dotum Tur;}{\f2058\fswiss\fcharset186\fprq2 @Dotum Baltic;}{\f2063\fmodern\fcharset0\fprq1 DotumChe Western;}
{\f2061\fmodern\fcharset238\fprq1 DotumChe CE;}{\f2062\fmodern\fcharset204\fprq1 DotumChe Cyr;}{\f2064\fmodern\fcharset161\fprq1 DotumChe Greek;}{\f2065\fmodern\fcharset162\fprq1 DotumChe Tur;}{\f2068\fmodern\fcharset186\fprq1 DotumChe Baltic;}
{\f2073\fmodern\fcharset0\fprq1 @DotumChe Western;}{\f2071\fmodern\fcharset238\fprq1 @DotumChe CE;}{\f2072\fmodern\fcharset204\fprq1 @DotumChe Cyr;}{\f2074\fmodern\fcharset161\fprq1 @DotumChe Greek;}{\f2075\fmodern\fcharset162\fprq1 @DotumChe Tur;}
{\f2078\fmodern\fcharset186\fprq1 @DotumChe Baltic;}{\f2083\froman\fcharset0\fprq2 @Batang Western;}{\f2081\froman\fcharset238\fprq2 @Batang CE;}{\f2082\froman\fcharset204\fprq2 @Batang Cyr;}{\f2084\froman\fcharset161\fprq2 @Batang Greek;}
{\f2085\froman\fcharset162\fprq2 @Batang Tur;}{\f2088\froman\fcharset186\fprq2 @Batang Baltic;}{\f2093\fmodern\fcharset0\fprq1 BatangChe Western;}{\f2091\fmodern\fcharset238\fprq1 BatangChe CE;}{\f2092\fmodern\fcharset204\fprq1 BatangChe Cyr;}
{\f2094\fmodern\fcharset161\fprq1 BatangChe Greek;}{\f2095\fmodern\fcharset162\fprq1 BatangChe Tur;}{\f2098\fmodern\fcharset186\fprq1 BatangChe Baltic;}{\f2103\fmodern\fcharset0\fprq1 @BatangChe Western;}{\f2101\fmodern\fcharset238\fprq1 @BatangChe CE;}
{\f2102\fmodern\fcharset204\fprq1 @BatangChe Cyr;}{\f2104\fmodern\fcharset161\fprq1 @BatangChe Greek;}{\f2105\fmodern\fcharset162\fprq1 @BatangChe Tur;}{\f2108\fmodern\fcharset186\fprq1 @BatangChe Baltic;}{\f2113\froman\fcharset0\fprq2 Gungsuh Western;}
{\f2111\froman\fcharset238\fprq2 Gungsuh CE;}{\f2112\froman\fcharset204\fprq2 Gungsuh Cyr;}{\f2114\froman\fcharset161\fprq2 Gungsuh Greek;}{\f2115\froman\fcharset162\fprq2 Gungsuh Tur;}{\f2118\froman\fcharset186\fprq2 Gungsuh Baltic;}
{\f2123\froman\fcharset0\fprq2 @Gungsuh Western;}{\f2121\froman\fcharset238\fprq2 @Gungsuh CE;}{\f2122\froman\fcharset204\fprq2 @Gungsuh Cyr;}{\f2124\froman\fcharset161\fprq2 @Gungsuh Greek;}{\f2125\froman\fcharset162\fprq2 @Gungsuh Tur;}
{\f2128\froman\fcharset186\fprq2 @Gungsuh Baltic;}{\f2133\fmodern\fcharset0\fprq1 GungsuhChe Western;}{\f2131\fmodern\fcharset238\fprq1 GungsuhChe CE;}{\f2132\fmodern\fcharset204\fprq1 GungsuhChe Cyr;}{\f2134\fmodern\fcharset161\fprq1 GungsuhChe Greek;}
{\f2135\fmodern\fcharset162\fprq1 GungsuhChe Tur;}{\f2138\fmodern\fcharset186\fprq1 GungsuhChe Baltic;}{\f2143\fmodern\fcharset0\fprq1 @GungsuhChe Western;}{\f2141\fmodern\fcharset238\fprq1 @GungsuhChe CE;}
{\f2142\fmodern\fcharset204\fprq1 @GungsuhChe Cyr;}{\f2144\fmodern\fcharset161\fprq1 @GungsuhChe Greek;}{\f2145\fmodern\fcharset162\fprq1 @GungsuhChe Tur;}{\f2148\fmodern\fcharset186\fprq1 @GungsuhChe Baltic;}
{\f2153\fmodern\fcharset0\fprq1 NSimSun Western;}{\f2163\fmodern\fcharset0\fprq1 @NSimSun Western;}{\f2183\fmodern\fcharset0\fprq1 @MingLiU Western;}{\f2193\froman\fcharset0\fprq2 @PMingLiU Western;}{\f2301\froman\fcharset238\fprq2 Century Schoolbook CE;}
{\f2302\froman\fcharset204\fprq2 Century Schoolbook Cyr;}{\f2304\froman\fcharset161\fprq2 Century Schoolbook Greek;}{\f2305\froman\fcharset162\fprq2 Century Schoolbook Tur;}{\f2308\froman\fcharset186\fprq2 Century Schoolbook Baltic;}
{\f2431\fswiss\fcharset238\fprq2 Franklin Gothic Book CE;}{\f2432\fswiss\fcharset204\fprq2 Franklin Gothic Book Cyr;}{\f2434\fswiss\fcharset161\fprq2 Franklin Gothic Book Greek;}{\f2435\fswiss\fcharset162\fprq2 Franklin Gothic Book Tur;}
{\f2438\fswiss\fcharset186\fprq2 Franklin Gothic Book Baltic;}{\f2441\fswiss\fcharset238\fprq2 Franklin Gothic Demi CE;}{\f2442\fswiss\fcharset204\fprq2 Franklin Gothic Demi Cyr;}{\f2444\fswiss\fcharset161\fprq2 Franklin Gothic Demi Greek;}
{\f2445\fswiss\fcharset162\fprq2 Franklin Gothic Demi Tur;}{\f2448\fswiss\fcharset186\fprq2 Franklin Gothic Demi Baltic;}{\f2451\fswiss\fcharset238\fprq2 Franklin Gothic Demi Cond CE;}{\f2452\fswiss\fcharset204\fprq2 Franklin Gothic Demi Cond Cyr;}
{\f2454\fswiss\fcharset161\fprq2 Franklin Gothic Demi Cond Greek;}{\f2455\fswiss\fcharset162\fprq2 Franklin Gothic Demi Cond Tur;}{\f2458\fswiss\fcharset186\fprq2 Franklin Gothic Demi Cond Baltic;}
{\f2461\fswiss\fcharset238\fprq2 Franklin Gothic Heavy CE;}{\f2462\fswiss\fcharset204\fprq2 Franklin Gothic Heavy Cyr;}{\f2464\fswiss\fcharset161\fprq2 Franklin Gothic Heavy Greek;}{\f2465\fswiss\fcharset162\fprq2 Franklin Gothic Heavy Tur;}
{\f2468\fswiss\fcharset186\fprq2 Franklin Gothic Heavy Baltic;}{\f2471\fswiss\fcharset238\fprq2 Franklin Gothic Medium Cond CE;}{\f2472\fswiss\fcharset204\fprq2 Franklin Gothic Medium Cond Cyr;}
{\f2474\fswiss\fcharset161\fprq2 Franklin Gothic Medium Cond Greek;}{\f2475\fswiss\fcharset162\fprq2 Franklin Gothic Medium Cond Tur;}{\f2478\fswiss\fcharset186\fprq2 Franklin Gothic Medium Cond Baltic;}
{\f2501\fswiss\fcharset238\fprq2 Gill Sans MT Ext Condensed Bold CE;}{\f2511\fswiss\fcharset238\fprq2 Gill Sans MT CE;}{\f2521\fswiss\fcharset238\fprq2 Gill Sans MT Condensed CE;}{\f2531\fswiss\fcharset238\fprq2 Gill Sans Ultra Bold CE;}
{\f2541\fswiss\fcharset238\fprq2 Gill Sans Ultra Bold Condensed CE;}{\f2581\fswiss\fcharset238\fprq2 Haettenschweiler CE;}{\f2582\fswiss\fcharset204\fprq2 Haettenschweiler Cyr;}{\f2584\fswiss\fcharset161\fprq2 Haettenschweiler Greek;}
{\f2585\fswiss\fcharset162\fprq2 Haettenschweiler Tur;}{\f2588\fswiss\fcharset186\fprq2 Haettenschweiler Baltic;}{\f2741\fswiss\fcharset238\fprq2 Tw Cen MT CE;}{\f2751\fswiss\fcharset238\fprq2 Tw Cen MT Condensed CE;}
{\f2761\fswiss\fcharset238\fprq2 Tw Cen MT Condensed Extra Bold CE;}{\f2773\fswiss\fcharset0\fprq2 @Arial Unicode MS Western;}{\f2771\fswiss\fcharset238\fprq2 @Arial Unicode MS CE;}{\f2772\fswiss\fcharset204\fprq2 @Arial Unicode MS Cyr;}
{\f2774\fswiss\fcharset161\fprq2 @Arial Unicode MS Greek;}{\f2775\fswiss\fcharset162\fprq2 @Arial Unicode MS Tur;}{\f2776\fbidi \fswiss\fcharset177\fprq2 @Arial Unicode MS (Hebrew);}{\f2777\fbidi \fswiss\fcharset178\fprq2 @Arial Unicode MS (Arabic);}
{\f2778\fswiss\fcharset186\fprq2 @Arial Unicode MS Baltic;}{\f2779\fswiss\fcharset163\fprq2 @Arial Unicode MS (Vietnamese);}{\f2780\fswiss\fcharset222\fprq2 @Arial Unicode MS (Thai);}{\f2781\fswiss\fcharset238\fprq2 Nina CE;}
{\f2782\fswiss\fcharset204\fprq2 Nina Cyr;}{\f2784\fswiss\fcharset161\fprq2 Nina Greek;}{\f2785\fswiss\fcharset162\fprq2 Nina Tur;}{\f2788\fswiss\fcharset186\fprq2 Nina Baltic;}{\f2821\fmodern\fcharset238\fprq1 Lucida Console CE;}
{\f2822\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f2824\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f2825\fmodern\fcharset162\fprq1 Lucida Console Tur;}{\f2831\froman\fcharset238\fprq2 Cambria CE;}{\f2832\froman\fcharset204\fprq2 Cambria Cyr;}
{\f2834\froman\fcharset161\fprq2 Cambria Greek;}{\f2835\froman\fcharset162\fprq2 Cambria Tur;}{\f2838\froman\fcharset186\fprq2 Cambria Baltic;}{\f2841\froman\fcharset238\fprq2 Cambria Math CE;}{\f2842\froman\fcharset204\fprq2 Cambria Math Cyr;}
{\f2844\froman\fcharset161\fprq2 Cambria Math Greek;}{\f2845\froman\fcharset162\fprq2 Cambria Math Tur;}{\f2848\froman\fcharset186\fprq2 Cambria Math Baltic;}{\f2851\fswiss\fcharset238\fprq2 Candara CE;}{\f2852\fswiss\fcharset204\fprq2 Candara Cyr;}
{\f2854\fswiss\fcharset161\fprq2 Candara Greek;}{\f2855\fswiss\fcharset162\fprq2 Candara Tur;}{\f2858\fswiss\fcharset186\fprq2 Candara Baltic;}{\f2861\fmodern\fcharset238\fprq1 Consolas CE;}{\f2862\fmodern\fcharset204\fprq1 Consolas Cyr;}
{\f2864\fmodern\fcharset161\fprq1 Consolas Greek;}{\f2865\fmodern\fcharset162\fprq1 Consolas Tur;}{\f2868\fmodern\fcharset186\fprq1 Consolas Baltic;}{\f2871\froman\fcharset238\fprq2 Constantia CE;}{\f2872\froman\fcharset204\fprq2 Constantia Cyr;}
{\f2874\froman\fcharset161\fprq2 Constantia Greek;}{\f2875\froman\fcharset162\fprq2 Constantia Tur;}{\f2878\froman\fcharset186\fprq2 Constantia Baltic;}{\f2881\fswiss\fcharset238\fprq2 Corbel CE;}{\f2882\fswiss\fcharset204\fprq2 Corbel Cyr;}
{\f2884\fswiss\fcharset161\fprq2 Corbel Greek;}{\f2885\fswiss\fcharset162\fprq2 Corbel Tur;}{\f2888\fswiss\fcharset186\fprq2 Corbel Baltic;}{\f2961\froman\fcharset238\fprq2 Times New Roman CYR CE;}{\f2962\froman\fcharset204\fprq2 Times New Roman CYR Cyr;}
{\f2964\froman\fcharset161\fprq2 Times New Roman CYR Greek;}{\f2965\froman\fcharset162\fprq2 Times New Roman CYR Tur;}{\f2966\fbidi \froman\fcharset177\fprq2 Times New Roman CYR (Hebrew);}
{\f2967\fbidi \froman\fcharset178\fprq2 Times New Roman CYR (Arabic);}{\f2968\froman\fcharset186\fprq2 Times New Roman CYR Baltic;}{\f2969\froman\fcharset163\fprq2 Times New Roman CYR (Vietnamese);}{\f2971\froman\fcharset238\fprq2 Times New Roman TUR CE;}
{\f2972\froman\fcharset204\fprq2 Times New Roman TUR Cyr;}{\f2974\froman\fcharset161\fprq2 Times New Roman TUR Greek;}{\f2975\froman\fcharset162\fprq2 Times New Roman TUR Tur;}{\f2976\fbidi \froman\fcharset177\fprq2 Times New Roman TUR (Hebrew);}
{\f2977\fbidi \froman\fcharset178\fprq2 Times New Roman TUR (Arabic);}{\f2978\froman\fcharset186\fprq2 Times New Roman TUR Baltic;}{\f2979\froman\fcharset163\fprq2 Times New Roman TUR (Vietnamese);}{\f2981\fswiss\fcharset238\fprq2 Arial CYR CE;}
{\f2982\fswiss\fcharset204\fprq2 Arial CYR Cyr;}{\f2984\fswiss\fcharset161\fprq2 Arial CYR Greek;}{\f2985\fswiss\fcharset162\fprq2 Arial CYR Tur;}{\f2986\fbidi \fswiss\fcharset177\fprq2 Arial CYR (Hebrew);}
{\f2987\fbidi \fswiss\fcharset178\fprq2 Arial CYR (Arabic);}{\f2988\fswiss\fcharset186\fprq2 Arial CYR Baltic;}{\f2989\fswiss\fcharset163\fprq2 Arial CYR (Vietnamese);}{\f2991\fswiss\fcharset238\fprq2 Arial TUR CE;}
{\f2992\fswiss\fcharset204\fprq2 Arial TUR Cyr;}{\f2994\fswiss\fcharset161\fprq2 Arial TUR Greek;}{\f2995\fswiss\fcharset162\fprq2 Arial TUR Tur;}{\f2996\fbidi \fswiss\fcharset177\fprq2 Arial TUR (Hebrew);}
{\f2997\fbidi \fswiss\fcharset178\fprq2 Arial TUR (Arabic);}{\f2998\fswiss\fcharset186\fprq2 Arial TUR Baltic;}{\f2999\fswiss\fcharset163\fprq2 Arial TUR (Vietnamese);}{\f3001\fmodern\fcharset238\fprq1 Courier New CYR CE;}
{\f3002\fmodern\fcharset204\fprq1 Courier New CYR Cyr;}{\f3004\fmodern\fcharset161\fprq1 Courier New CYR Greek;}{\f3005\fmodern\fcharset162\fprq1 Courier New CYR Tur;}{\f3006\fbidi \fmodern\fcharset177\fprq1 Courier New CYR (Hebrew);}
{\f3007\fbidi \fmodern\fcharset178\fprq1 Courier New CYR (Arabic);}{\f3008\fmodern\fcharset186\fprq1 Courier New CYR Baltic;}{\f3009\fmodern\fcharset163\fprq1 Courier New CYR (Vietnamese);}{\f3011\fmodern\fcharset238\fprq1 Courier New TUR CE;}
{\f3012\fmodern\fcharset204\fprq1 Courier New TUR Cyr;}{\f3014\fmodern\fcharset161\fprq1 Courier New TUR Greek;}{\f3015\fmodern\fcharset162\fprq1 Courier New TUR Tur;}{\f3016\fbidi \fmodern\fcharset177\fprq1 Courier New TUR (Hebrew);}
{\f3017\fbidi \fmodern\fcharset178\fprq1 Courier New TUR (Arabic);}{\f3018\fmodern\fcharset186\fprq1 Courier New TUR Baltic;}{\f3019\fmodern\fcharset163\fprq1 Courier New TUR (Vietnamese);}{\f5061\froman\fcharset238\fprq2 Times New Roman Greek CE;}
{\f5062\froman\fcharset204\fprq2 Times New Roman Greek Cyr;}{\f5064\froman\fcharset161\fprq2 Times New Roman Greek Greek;}{\f5065\froman\fcharset162\fprq2 Times New Roman Greek Tur;}{\f5066\fbidi \froman\fcharset177\fprq2 Times New Roman Greek (Hebrew);}
{\f5067\fbidi \froman\fcharset178\fprq2 Times New Roman Greek (Arabic);}{\f5068\froman\fcharset186\fprq2 Times New Roman Greek Baltic;}{\f5069\froman\fcharset163\fprq2 Times New Roman Greek (Vietnamese);}
{\f5091\froman\fcharset238\fprq2 Times New Roman Baltic CE;}{\f5092\froman\fcharset204\fprq2 Times New Roman Baltic Cyr;}{\f5094\froman\fcharset161\fprq2 Times New Roman Baltic Greek;}{\f5095\froman\fcharset162\fprq2 Times New Roman Baltic Tur;}
{\f5096\fbidi \froman\fcharset177\fprq2 Times New Roman Baltic (Hebrew);}{\f5097\fbidi \froman\fcharset178\fprq2 Times New Roman Baltic (Arabic);}{\f5098\froman\fcharset186\fprq2 Times New Roman Baltic Baltic;}
{\f5099\froman\fcharset163\fprq2 Times New Roman Baltic (Vietnamese);}{\f5271\froman\fcharset238\fprq2 Times New Roman CE CE;}{\f5272\froman\fcharset204\fprq2 Times New Roman CE Cyr;}{\f5274\froman\fcharset161\fprq2 Times New Roman CE Greek;}
{\f5275\froman\fcharset162\fprq2 Times New Roman CE Tur;}{\f5276\fbidi \froman\fcharset177\fprq2 Times New Roman CE (Hebrew);}{\f5277\fbidi \froman\fcharset178\fprq2 Times New Roman CE (Arabic);}{\f5278\froman\fcharset186\fprq2 Times New Roman CE Baltic;}
{\f5279\froman\fcharset163\fprq2 Times New Roman CE (Vietnamese);}{\f5281\fswiss\fcharset238\fprq2 Arial CE CE;}{\f5282\fswiss\fcharset204\fprq2 Arial CE Cyr;}{\f5284\fswiss\fcharset161\fprq2 Arial CE Greek;}{\f5285\fswiss\fcharset162\fprq2 Arial CE Tur;}
{\f5286\fbidi \fswiss\fcharset177\fprq2 Arial CE (Hebrew);}{\f5287\fbidi \fswiss\fcharset178\fprq2 Arial CE (Arabic);}{\f5288\fswiss\fcharset186\fprq2 Arial CE Baltic;}{\f5289\fswiss\fcharset163\fprq2 Arial CE (Vietnamese);}
{\f5291\fswiss\fcharset238\fprq2 Arial Greek CE;}{\f5292\fswiss\fcharset204\fprq2 Arial Greek Cyr;}{\f5294\fswiss\fcharset161\fprq2 Arial Greek Greek;}{\f5295\fswiss\fcharset162\fprq2 Arial Greek Tur;}
{\f5296\fbidi \fswiss\fcharset177\fprq2 Arial Greek (Hebrew);}{\f5297\fbidi \fswiss\fcharset178\fprq2 Arial Greek (Arabic);}{\f5298\fswiss\fcharset186\fprq2 Arial Greek Baltic;}{\f5299\fswiss\fcharset163\fprq2 Arial Greek (Vietnamese);}
{\f5301\fswiss\fcharset238\fprq2 Arial Baltic CE;}{\f5302\fswiss\fcharset204\fprq2 Arial Baltic Cyr;}{\f5304\fswiss\fcharset161\fprq2 Arial Baltic Greek;}{\f5305\fswiss\fcharset162\fprq2 Arial Baltic Tur;}
{\f5306\fbidi \fswiss\fcharset177\fprq2 Arial Baltic (Hebrew);}{\f5307\fbidi \fswiss\fcharset178\fprq2 Arial Baltic (Arabic);}{\f5308\fswiss\fcharset186\fprq2 Arial Baltic Baltic;}{\f5309\fswiss\fcharset163\fprq2 Arial Baltic (Vietnamese);}
{\f5311\fmodern\fcharset238\fprq1 Courier New CE CE;}{\f5312\fmodern\fcharset204\fprq1 Courier New CE Cyr;}{\f5314\fmodern\fcharset161\fprq1 Courier New CE Greek;}{\f5315\fmodern\fcharset162\fprq1 Courier New CE Tur;}
{\f5316\fbidi \fmodern\fcharset177\fprq1 Courier New CE (Hebrew);}{\f5317\fbidi \fmodern\fcharset178\fprq1 Courier New CE (Arabic);}{\f5318\fmodern\fcharset186\fprq1 Courier New CE Baltic;}{\f5319\fmodern\fcharset163\fprq1 Courier New CE (Vietnamese);}
{\f5321\fmodern\fcharset238\fprq1 Courier New Greek CE;}{\f5322\fmodern\fcharset204\fprq1 Courier New Greek Cyr;}{\f5324\fmodern\fcharset161\fprq1 Courier New Greek Greek;}{\f5325\fmodern\fcharset162\fprq1 Courier New Greek Tur;}
{\f5326\fbidi \fmodern\fcharset177\fprq1 Courier New Greek (Hebrew);}{\f5327\fbidi \fmodern\fcharset178\fprq1 Courier New Greek (Arabic);}{\f5328\fmodern\fcharset186\fprq1 Courier New Greek Baltic;}
{\f5329\fmodern\fcharset163\fprq1 Courier New Greek (Vietnamese);}{\f5331\fmodern\fcharset238\fprq1 Courier New Baltic CE;}{\f5332\fmodern\fcharset204\fprq1 Courier New Baltic Cyr;}{\f5334\fmodern\fcharset161\fprq1 Courier New Baltic Greek;}
{\f5335\fmodern\fcharset162\fprq1 Courier New Baltic Tur;}{\f5336\fbidi \fmodern\fcharset177\fprq1 Courier New Baltic (Hebrew);}{\f5337\fbidi \fmodern\fcharset178\fprq1 Courier New Baltic (Arabic);}
{\f5338\fmodern\fcharset186\fprq1 Courier New Baltic Baltic;}{\f5339\fmodern\fcharset163\fprq1 Courier New Baltic (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 \styrsid5050517 Normal;}{
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af1\afs28\alang1025 \ltrch\fcs0 \b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 \styrsid7098678 heading 1;}{\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 
\b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \styrsid7098678 heading 2;}{\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af1\afs24\alang1025 
\ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \slink45 \styrsid7098678 heading 3;}{\s4\ql \fi-864\li864\ri0\sb240\sa60\keepn\widctlpar
\jclisttab\tx864\wrapdefault\aspalpha\aspnum\faauto\outlinelevel3\adjustright\rin0\lin864\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \b\i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \slink44 \styrsid1277459 
heading 4;}{\s5\ql \fi-1008\li1008\ri0\sb240\sa120\keep\keepn\widctlpar\jclisttab\tx1008\wrapdefault\aspalpha\aspnum\faauto\outlinelevel4\adjustright\rin0\lin1008\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \styrsid1277459 heading 5;}{\s6\ql \fi-1152\li1152\ri0\sb240\sa120\keep\keepn\widctlpar
\jclisttab\tx1152\wrapdefault\aspalpha\aspnum\faauto\outlinelevel5\adjustright\rin0\lin1152\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \styrsid1277459 heading 6;}{
\s7\ql \fi-1296\li1296\ri0\sb240\sa120\keepn\widctlpar\jclisttab\tx1296\wrapdefault\aspalpha\aspnum\faauto\outlinelevel6\adjustright\rin0\lin1296\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \b\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 \styrsid1277459 heading 7;}{\s8\ql \fi-1440\li1440\ri0\sb240\sa60\widctlpar\jclisttab\tx1440\wrapdefault\aspalpha\aspnum\faauto\outlinelevel7\adjustright\rin0\lin1440\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\i\f4\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \styrsid1277459 heading 8;}{\s9\ql \fi-1584\li1584\ri0\sb240\sa60\widctlpar\jclisttab\tx1584\wrapdefault\aspalpha\aspnum\faauto\outlinelevel8\adjustright\rin0\lin1584\itap0 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \b\i\f4\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \styrsid1277459 heading 9;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 \ssemihidden \styrsid7098678 footnote text;}{\*\cs16 
\additive \rtlch\fcs1 \af0 \ltrch\fcs0 \super \sbasedon10 \ssemihidden \styrsid7098678 footnote reference;}{\*\cs17 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \ul\cf2 \sbasedon10 \styrsid2560862 Hyperlink;}{\s18\ql \li0\ri0\sa120\sl360\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 \styrsid4985131 Body Text;}{\*\cs19 \additive \rtlch\fcs1 
\af5\afs22 \ltrch\fcs0 \f5\fs22\chshdng0\chcfpat0\chcbpat0 \sbasedon10 \styrsid4985131 Code Inline;}{\s20\ql \li720\ri720\sl360\slmult1\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0 \rtlch\fcs1 \af5\afs22\alang1025 
\ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 \sbasedon0 \snext20 \styrsid12388851 Code Listing;}{\s21\ql \li360\ri0\sa120\sl360\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext21 \styrsid12388851 Body Text 2;}{
\s22\ql \li0\ri0\sb120\sa120\sl360\slmult1\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 \b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext22 \styrsid12388851 API Name;}{\s23\ql \li0\ri0\sl360\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon18 \snext23 \styrsid16073269 Table;}{\*\ts24\tsrowd\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \sbasedon11 \snext24 \styrsid1515108 Table Grid;}{
\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext25 \slink26 \styrsid2963429 
Body Text Indent;}{\*\cs26 \additive \rtlch\fcs1 \af0\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slink25 \slocked \styrsid1277459 Body Text Indent Char1;}{
\s27\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 \ssemihidden \styrsid7746146 caption;}{\s28\qc \li0\ri0\sa240\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\f105\fs48\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext28 \styrsid1277459 Title;}{\s29\ql \li720\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext29 \styrsid1277459 Bullet;}{\s30\ql \li0\ri0\sa240\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext30 \styrsid1277459 Section;}{\s31\ql \fi-360\li360\ri0\sa120\widctlpar\jclisttab\tx360\wrapdefault{\*\pn \pnlvlbody\ilvl0\ls30\pnrnot0\pndec }
\aspalpha\aspnum\faauto\ls30\adjustright\rin0\lin360\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\expnd-1\expndtw-5\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext31 \sautoupd \styrsid1277459 List Bullet;}{
\s32\ql \li0\ri0\sa120\widctlpar\tqc\tx4320\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext32 \styrsid1277459 
header;}{\s33\ql \li0\ri0\sa120\widctlpar\tqc\tx4320\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext33 \styrsid1277459 footer;}{\*\cs34 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \sbasedon10 \styrsid1277459 page number;}{\s35\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1277459 toc 1;}{\*\cs36 \additive \rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b \sbasedon10 \styrsid1277459 Strong;}{\*\cs37 
\additive \rtlch\fcs1 \af0\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \styrsid1277459 Body Text Indent Char;}{\s38\ql \li90\ri0\sb240\sa60\keepn\widctlpar
\tx990\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin90\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \b\f4\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon3 \snext38 \styrsid1277459 
Body Text + Indent;}{\*\cs39 \additive \rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \fs20\loch\f2\hich\af2\dbch\af13 \sbasedon10 \styrsid1277459 HTML Typewriter;}{\*\cs40 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \ul\cf12 \sbasedon10 \styrsid1277459 
FollowedHyperlink;}{\s41\ql \li0\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext41 \ssemihidden \styrsid1277459 endnote text;}{\s42\ql \li960\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin960\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1277459 toc 5;}{\s43\ql \li1200\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1200\itap0 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \sautoupd \ssemihidden \styrsid1277459 toc 6;}{\*\cs44 \additive \rtlch\fcs1 \af0\alang1025 \ltrch\fcs0 
\b\i\fs24\lang1033\langfe1033\langnp1033\langfenp1033 \sbasedon10 \slink4 \slocked \styrsid15928143 Heading 4 Char;}{\*\cs45 \additive \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\langnp1033\langfenp1033 
\sbasedon10 \slink3 \slocked \styrsid5778616 Heading 3 Char;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable{\list\listtemplateid0\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }{\listname ;}\listid-125}{\list\listtemplateid0\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid-120}{\list\listtemplateid0\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid-119}{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0
\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listname ;}\listid-2}{\list\listtemplateid0{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow1\levelstartat1\levelspace0\levelindent0{\leveltext\'09Chapter \'00;}{\levelnumbers\'09;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0
\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 
\ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255
\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0
\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 
\ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255
\leveljc0\leveljcn0\levelfollow2\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listname ;}\listid1}{\list\listtemplateid-1734441242\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat4\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-720\li1440\jclisttab\tx1440\lin1440 }{\listname ;}\listid107166021}{\list\listtemplateid68354049
\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid156653440}
{\list\listtemplateid1944737318\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3929 ?;}{\levelnumbers;}
\f10\fbias0\hres0\chhres0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li5040
\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid241331705}
{\list\listtemplateid1693582972\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat5\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-720\li1440
\jclisttab\tx1440\lin1440 }{\listname ;}\listid298150666}{\list\listtemplateid67698719{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 
\ltrch\fcs0 \hres0\chhres0 \fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'04\'00.\'01.;}{\levelnumbers\'01\'03;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-432\li792\jclisttab\tx792\lin792 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'06\'00.\'01.\'02.;}{\levelnumbers\'01\'03\'05;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-504\li1224\jclisttab\tx1224\lin1224 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'08\'00.\'01.\'02.\'03.;}{\levelnumbers\'01\'03\'05\'07;}\rtlch\fcs1 \af0 
\ltrch\fcs0 \hres0\chhres0 \fi-648\li1728\jclisttab\tx1728\lin1728 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0a\'00.\'01.\'02.\'03.\'04.;}{\levelnumbers\'01\'03\'05\'07\'09;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-792\li2232\jclisttab\tx2232\lin2232 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0c\'00.\'01.\'02.\'03.\'04.\'05.;}{\levelnumbers
\'01\'03\'05\'07\'09\'0b;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-936\li2736\jclisttab\tx2736\lin2736 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'0e\'00.\'01.\'02.\'03.\'04.\'05.\'06.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1080\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'10\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1224\li3744\jclisttab\tx3744\lin3744 }{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'12\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1440\li4320
\jclisttab\tx4320\lin4320 }{\listname ;}\listid308441429}{\list\listtemplateid68354049\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0\hres0\chhres0 \fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid663700731}{\list\listtemplateid290347014\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat3\levelspace0\levelindent0{\leveltext
\'01\'00;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listname ;}\listid956595244}{\list\listtemplateid1252801822{\listlevel\levelnfc1\levelnfcn1\leveljc0\leveljcn0\levelfollow1
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext
\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }
{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2
\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers
;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255
\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow2\levelstartat1
\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 }{\listname ;}\listid1621105010}{\list\listtemplateid-1472415022{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2
\levelspace0\levelindent0{\leveltext\'01\'00;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat5\levelspace0
\levelindent0{\leveltext\'03\'00.\'01;}{\levelnumbers\'01\'03;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-360\li360\jclisttab\tx360\lin360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-720\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-1080\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-1080\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-1440\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-1440\li1440
\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\rtlch\fcs1 \af0 
\ltrch\fcs0 \fbias0\hres0\chhres0 \fi-1800\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers
\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0\hres0\chhres0 \fi-1800\li1800\jclisttab\tx1800\lin1800 }{\listname ;}\listid1636643281}{\list\listtemplateid-2081125238\listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \s31\fi-360\li360\jclisttab\tx360\lin360 }{\listname ;}\listid1786537913}{\list\listtemplateid1668292118\listhybrid{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360
\levelindent0{\leveltext\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01o;}{\levelnumbers;}
\f2\fbias0\hres0\chhres0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li4320
\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0\hres0\chhres0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\fbias0\hres0\chhres0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0\hres0\chhres0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1789619211}}{\*\listoverridetable{\listoverride\listid-119
\listoverridecount0\ls1}{\listoverride\listid-119\listoverridecount0\ls2}{\listoverride\listid-119\listoverridecount0\ls3}{\listoverride\listid-119\listoverridecount0\ls4}{\listoverride\listid-119\listoverridecount0\ls5}{\listoverride\listid-119
\listoverridecount0\ls6}{\listoverride\listid-119\listoverridecount0\ls7}{\listoverride\listid-119\listoverridecount0\ls8}{\listoverride\listid-119\listoverridecount0\ls9}{\listoverride\listid-119\listoverridecount0\ls10}{\listoverride\listid-119
\listoverridecount0\ls11}{\listoverride\listid-119\listoverridecount0\ls12}{\listoverride\listid-119\listoverridecount0\ls13}{\listoverride\listid-119\listoverridecount0\ls14}{\listoverride\listid-119\listoverridecount0\ls15}{\listoverride\listid-119
\listoverridecount0\ls16}{\listoverride\listid-119\listoverridecount0\ls17}{\listoverride\listid298150666\listoverridecount0\ls18}{\listoverride\listid107166021\listoverridecount0\ls19}{\listoverride\listid956595244\listoverridecount0\ls20}
{\listoverride\listid663700731\listoverridecount0\ls21}{\listoverride\listid156653440\listoverridecount0\ls22}{\listoverride\listid1621105010\listoverridecount0\ls23}{\listoverride\listid1621105010\listoverridecount9{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls24}{\listoverride\listid1789619211\listoverridecount0\ls25}{\listoverride\listid241331705\listoverridecount0\ls26}
{\listoverride\listid-119\listoverridecount0\ls27}{\listoverride\listid-125\listoverridecount0\ls28}{\listoverride\listid-120\listoverridecount0\ls29}{\listoverride\listid1786537913\listoverridecount0\ls30}{\listoverride\listid-2
\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f48\fbias0\hres0\chhres0 \fi-360\li720\lin720 }}
\ls31}{\listoverride\listid1\listoverridecount0\ls32}{\listoverride\listid1\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat0}{\lfolevel\listoverridestartat\levelstartat0}{\lfolevel
\listoverridestartat\levelstartat0}{\lfolevel\listoverridestartat\levelstartat0}{\lfolevel\listoverridestartat\levelstartat0}{\lfolevel\listoverridestartat\levelstartat0}{\lfolevel\listoverridestartat\levelstartat0}{\lfolevel\listoverridestartat
\levelstartat0}\ls33}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}
\f6\fbias0\hres0\chhres0 \fi-360\li720\lin720 }}\ls34}{\listoverride\listid308441429\listoverridecount0\ls35}{\listoverride\listid1636643281\listoverridecount0\ls36}}{\*\revtbl {Unknown;}}{\*\rsidtbl \rsid17448\rsid65799\rsid72627\rsid74742\rsid79491\rsid82960\rsid95456
\rsid138544\rsid143864\rsid144521\rsid150249\rsid156090\rsid198695\rsid205684\rsid264065\rsid264230\rsid283004\rsid336372\rsid337940\rsid349762\rsid411087\rsid468610\rsid489262\rsid539465\rsid547850\rsid614211\rsid616010\rsid657911\rsid667166\rsid669408
\rsid675590\rsid680492\rsid685108\rsid737757\rsid744577\rsid748410\rsid852446\rsid868137\rsid933160\rsid934190\rsid945634\rsid989103\rsid989374\rsid1057354\rsid1127579\rsid1179828\rsid1183283\rsid1186452\rsid1212097\rsid1253010\rsid1256723\rsid1270704
\rsid1271034\rsid1271474\rsid1276158\rsid1277459\rsid1321450\rsid1408577\rsid1450136\rsid1455160\rsid1457546\rsid1515108\rsid1574483\rsid1583308\rsid1588704\rsid1593256\rsid1640718\rsid1652495\rsid1665182\rsid1716622\rsid1718071\rsid1725892\rsid1772694
\rsid1775364\rsid1782756\rsid1797641\rsid1842793\rsid1855541\rsid1861676\rsid1902003\rsid1916600\rsid1916713\rsid1920233\rsid1924431\rsid1969170\rsid1982627\rsid1985248\rsid1995102\rsid2103920\rsid2111269\rsid2170814\rsid2194498\rsid2237893\rsid2256970
\rsid2297159\rsid2298620\rsid2318493\rsid2323374\rsid2323544\rsid2323866\rsid2385108\rsid2386998\rsid2494969\rsid2501938\rsid2509573\rsid2518969\rsid2559302\rsid2560862\rsid2562807\rsid2572753\rsid2581081\rsid2631421\rsid2635343\rsid2645027\rsid2706814
\rsid2709321\rsid2709417\rsid2709703\rsid2717987\rsid2765000\rsid2777712\rsid2781468\rsid2832052\rsid2838610\rsid2848167\rsid2849664\rsid2891659\rsid2895162\rsid2898679\rsid2901063\rsid2914754\rsid2963429\rsid3020744\rsid3028740\rsid3028837\rsid3045788
\rsid3082905\rsid3093253\rsid3096457\rsid3102889\rsid3105524\rsid3106699\rsid3155384\rsid3158226\rsid3161436\rsid3165630\rsid3174269\rsid3177878\rsid3213828\rsid3215552\rsid3236034\rsid3236859\rsid3286511\rsid3296609\rsid3300882\rsid3306987\rsid3344506
\rsid3346225\rsid3347007\rsid3372217\rsid3373751\rsid3480039\rsid3483534\rsid3497359\rsid3500201\rsid3539363\rsid3539985\rsid3541756\rsid3557194\rsid3569843\rsid3570514\rsid3628953\rsid3687695\rsid3758134\rsid3761695\rsid3764165\rsid3803187\rsid3805534
\rsid3821098\rsid3833508\rsid3883358\rsid3932916\rsid3959624\rsid4006338\rsid4017197\rsid4020212\rsid4077298\rsid4133659\rsid4136500\rsid4143337\rsid4195862\rsid4221489\rsid4226918\rsid4260847\rsid4266087\rsid4283181\rsid4328816\rsid4331494\rsid4348552
\rsid4354756\rsid4398637\rsid4403927\rsid4418420\rsid4458014\rsid4480171\rsid4525619\rsid4533372\rsid4537766\rsid4544606\rsid4596102\rsid4603966\rsid4608171\rsid4676615\rsid4680145\rsid4685778\rsid4734418\rsid4734894\rsid4738259\rsid4742113\rsid4748437
\rsid4864438\rsid4925629\rsid4943899\rsid4984969\rsid4985131\rsid4985961\rsid4987032\rsid5000020\rsid5005107\rsid5050517\rsid5052890\rsid5064014\rsid5112631\rsid5116418\rsid5185073\rsid5204372\rsid5264820\rsid5267631\rsid5314561\rsid5319506\rsid5330381
\rsid5330527\rsid5337838\rsid5387502\rsid5392164\rsid5397466\rsid5443940\rsid5448958\rsid5461451\rsid5521381\rsid5526380\rsid5531717\rsid5534396\rsid5594725\rsid5720082\rsid5727849\rsid5770293\rsid5778616\rsid5784934\rsid5792670\rsid5850797\rsid5854963
\rsid5861053\rsid5861148\rsid5862370\rsid5864067\rsid5909509\rsid5918628\rsid5925061\rsid5965366\rsid5970953\rsid5989439\rsid5990804\rsid6051778\rsid6055195\rsid6057953\rsid6096593\rsid6097635\rsid6118528\rsid6120061\rsid6165826\rsid6172209\rsid6179685
\rsid6191940\rsid6229429\rsid6233318\rsid6240194\rsid6241746\rsid6307689\rsid6318740\rsid6367020\rsid6368703\rsid6369968\rsid6380173\rsid6386057\rsid6389182\rsid6447890\rsid6489256\rsid6491820\rsid6520425\rsid6561496\rsid6569998\rsid6578873\rsid6580504
\rsid6621851\rsid6629879\rsid6631226\rsid6631972\rsid6641930\rsid6650279\rsid6651752\rsid6688552\rsid6688864\rsid6689930\rsid6693686\rsid6707623\rsid6714806\rsid6716771\rsid6753868\rsid6761662\rsid6777765\rsid6779001\rsid6779073\rsid6826657\rsid6837370
\rsid6840335\rsid6840417\rsid6887097\rsid6892520\rsid6951515\rsid6960259\rsid7024076\rsid7030765\rsid7079948\rsid7084737\rsid7098678\rsid7103194\rsid7109674\rsid7148954\rsid7301400\rsid7344434\rsid7346034\rsid7350823\rsid7358450\rsid7364224\rsid7372290
\rsid7474480\rsid7541324\rsid7542145\rsid7550769\rsid7602451\rsid7615401\rsid7621405\rsid7668247\rsid7668503\rsid7668935\rsid7690349\rsid7738874\rsid7741927\rsid7746146\rsid7803049\rsid7810975\rsid7813090\rsid7822684\rsid7825932\rsid7829207\rsid7871313
\rsid7897030\rsid7931886\rsid7941138\rsid7942323\rsid7948705\rsid7957357\rsid7959943\rsid8072590\rsid8079688\rsid8080230\rsid8127797\rsid8130582\rsid8141597\rsid8142273\rsid8220169\rsid8265424\rsid8270354\rsid8351257\rsid8355390\rsid8389993\rsid8391966
\rsid8397578\rsid8401498\rsid8408289\rsid8409026\rsid8463818\rsid8465851\rsid8473238\rsid8475324\rsid8520409\rsid8520755\rsid8538779\rsid8585829\rsid8592295\rsid8598203\rsid8605096\rsid8658168\rsid8662834\rsid8718108\rsid8727616\rsid8732951\rsid8741124
\rsid8794084\rsid8810504\rsid8861408\rsid8870507\rsid8879252\rsid8914426\rsid8920301\rsid8934691\rsid8979885\rsid8983983\rsid8996923\rsid9004297\rsid9009323\rsid9045295\rsid9056787\rsid9070135\rsid9110971\rsid9114225\rsid9115419\rsid9200057\rsid9200443
\rsid9248331\rsid9262434\rsid9267671\rsid9317516\rsid9319488\rsid9324297\rsid9372129\rsid9376517\rsid9379347\rsid9399679\rsid9438526\rsid9510954\rsid9516000\rsid9516918\rsid9526905\rsid9528906\rsid9534744\rsid9568861\rsid9574086\rsid9588887\rsid9657517
\rsid9720415\rsid9832171\rsid9836928\rsid9841484\rsid9845570\rsid9897534\rsid9908006\rsid10040384\rsid10059308\rsid10099397\rsid10160526\rsid10161653\rsid10165484\rsid10174626\rsid10190674\rsid10239879\rsid10242976\rsid10296908\rsid10314690\rsid10321387
\rsid10367554\rsid10420298\rsid10487839\rsid10488481\rsid10497937\rsid10502071\rsid10509418\rsid10551698\rsid10555555\rsid10567079\rsid10579337\rsid10626292\rsid10633919\rsid10637280\rsid10646331\rsid10710704\rsid10748962\rsid10750337\rsid10752381
\rsid10753368\rsid10758721\rsid10774658\rsid10840280\rsid10844733\rsid10880368\rsid10884975\rsid10887841\rsid10901483\rsid10902510\rsid10944671\rsid10951365\rsid10958382\rsid10962899\rsid10968874\rsid10970266\rsid10976052\rsid10976933\rsid11011385
\rsid11012206\rsid11027987\rsid11028262\rsid11078304\rsid11093306\rsid11101795\rsid11171958\rsid11207412\rsid11235187\rsid11235556\rsid11235870\rsid11277131\rsid11340796\rsid11363493\rsid11414802\rsid11477389\rsid11479821\rsid11483996\rsid11488776
\rsid11491430\rsid11538749\rsid11539620\rsid11541524\rsid11542846\rsid11556418\rsid11563256\rsid11623106\rsid11671979\rsid11685294\rsid11686571\rsid11698142\rsid11732354\rsid11742157\rsid11747852\rsid11810568\rsid11826548\rsid11875770\rsid11877918
\rsid11880930\rsid11932012\rsid11939024\rsid12062448\rsid12063202\rsid12069584\rsid12077121\rsid12086578\rsid12134570\rsid12144699\rsid12146902\rsid12153072\rsid12191179\rsid12217695\rsid12255717\rsid12287149\rsid12323065\rsid12336429\rsid12346734
\rsid12388851\rsid12390011\rsid12394434\rsid12402425\rsid12409626\rsid12411664\rsid12412816\rsid12413498\rsid12415600\rsid12416453\rsid12464705\rsid12464755\rsid12479566\rsid12517803\rsid12520922\rsid12527372\rsid12545092\rsid12548453\rsid12588373
\rsid12596683\rsid12598516\rsid12652189\rsid12652339\rsid12667784\rsid12720402\rsid12721619\rsid12725009\rsid12727051\rsid12732176\rsid12736641\rsid12737611\rsid12741000\rsid12780595\rsid12853278\rsid12876201\rsid12918899\rsid12927548\rsid12930120
\rsid12980558\rsid12987887\rsid12990023\rsid13071077\rsid13071948\rsid13072512\rsid13107230\rsid13115129\rsid13121744\rsid13125500\rsid13188769\rsid13189708\rsid13191801\rsid13240598\rsid13257959\rsid13320139\rsid13326347\rsid13329630\rsid13380222
\rsid13400086\rsid13450302\rsid13451040\rsid13452877\rsid13457806\rsid13465829\rsid13507913\rsid13516371\rsid13522963\rsid13573182\rsid13576943\rsid13585113\rsid13595260\rsid13639557\rsid13658631\rsid13702772\rsid13709926\rsid13716445\rsid13720221
\rsid13723625\rsid13727485\rsid13766545\rsid13836038\rsid13846540\rsid13901928\rsid13909169\rsid13924656\rsid13925618\rsid13959393\rsid13974820\rsid13977361\rsid13977922\rsid13980933\rsid13990929\rsid14036520\rsid14041012\rsid14057255\rsid14057343
\rsid14094320\rsid14109112\rsid14119424\rsid14156640\rsid14165928\rsid14230261\rsid14243804\rsid14247755\rsid14315634\rsid14318223\rsid14318729\rsid14353007\rsid14363827\rsid14375396\rsid14419765\rsid14424243\rsid14426804\rsid14431359\rsid14442714
\rsid14491647\rsid14492311\rsid14501640\rsid14508784\rsid14509580\rsid14561269\rsid14570623\rsid14614856\rsid14634998\rsid14635604\rsid14684081\rsid14688957\rsid14689857\rsid14698202\rsid14701298\rsid14709718\rsid14755995\rsid14757854\rsid14761887
\rsid14764198\rsid14766939\rsid14775027\rsid14818187\rsid14819472\rsid14821672\rsid14836807\rsid14842607\rsid14843488\rsid14883391\rsid14893942\rsid14894151\rsid14894609\rsid14943500\rsid14968187\rsid14972455\rsid15014351\rsid15019316\rsid15028215
\rsid15078413\rsid15078994\rsid15084272\rsid15095933\rsid15104500\rsid15168300\rsid15212594\rsid15214221\rsid15230735\rsid15236186\rsid15281907\rsid15296290\rsid15296298\rsid15341668\rsid15343830\rsid15351553\rsid15358684\rsid15359887\rsid15402355
\rsid15405116\rsid15405172\rsid15412938\rsid15413722\rsid15419590\rsid15485462\rsid15532976\rsid15544775\rsid15557862\rsid15562937\rsid15598137\rsid15666914\rsid15676046\rsid15739334\rsid15749877\rsid15752753\rsid15797394\rsid15797811\rsid15807119
\rsid15823872\rsid15869849\rsid15870447\rsid15877702\rsid15889223\rsid15891313\rsid15928143\rsid15931244\rsid15940266\rsid15941107\rsid16013795\rsid16017826\rsid16057519\rsid16073269\rsid16084367\rsid16085429\rsid16136258\rsid16136938\rsid16142830
\rsid16146513\rsid16188009\rsid16195801\rsid16207847\rsid16219299\rsid16219977\rsid16275398\rsid16285456\rsid16325381\rsid16327367\rsid16329148\rsid16329188\rsid16340234\rsid16345352\rsid16395037\rsid16398524\rsid16398534\rsid16400526\rsid16403929
\rsid16455048\rsid16457114\rsid16469618\rsid16532726\rsid16539688\rsid16546800\rsid16547190\rsid16582774\rsid16585510\rsid16589264\rsid16601440\rsid16604271\rsid16605511\rsid16652810\rsid16654739\rsid16740544}{\*\generator Microsoft Word 11.0.8106;}{\info
{\title #$K+NQC Programmer's Guide}{\author John Hansen}{\operator John Hansen}{\creatim\yr2007\mo10\dy5\hr14\min46}{\revtim\yr2007\mo11\dy5\hr13\min5}{\printim\yr2007\mo11\dy5\hr7\min4}{\version253}{\edmins864}{\nofpages133}{\nofwords29934}
{\nofchars170625}{\*\company Aspect Communications, Inc.}{\nofcharsws200159}{\vern24611}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}{\xmlns2 urn:schemas-microsoft-com:office:smarttags}}
\paperw12240\paperh15840\margl1417\margr1417\margt1417\margb1417\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin
\dghspace180\dgvspace180\dghorigin1417\dgvorigin1417\dghshow1\dgvshow1\jexpand\viewkind4\viewscale90\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\rsidroot7098678 \fet0
{\*\wgrffmtfilter 013f}\ilfomacatclnup0{\*\ftnsep \ltrpar \pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid4925629 \chftnsep 
\par }}{\*\ftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid4925629 \chftnsepc 
\par }}{\*\aftnsep \ltrpar \pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid4925629 \chftnsep 
\par }}{\*\aftnsepc \ltrpar \pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid4925629 \chftnsepc 
\par }}\ltrpar \sectd \ltrsect\linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar
\qc \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid7098678\charrsid12134570 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570 
ProgrammersGuide}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  Programmer\rquote s Guide}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629 NBC;guide;programmer}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af0\afs40 \ltrch\fcs0 \f1\fs40\insrsid11277131 NBC}{\rtlch\fcs1 \af0\afs40 \ltrch\fcs0 \f1\fs40\insrsid7098678\charrsid12134570  Programmer's Guide
\par }\pard \ltrpar\qc \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8408289 {\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f1\fs28\insrsid12415600\charrsid12134570 Version }{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 
\f1\fs28\insrsid6165826\charrsid12134570 1.0.1 b33}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f1\fs28\insrsid7098678\charrsid12134570 , by }{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f1\fs28\insrsid2170814\charrsid12134570 John Hansen}{\rtlch\fcs1 \af0\afs28 
\ltrch\fcs0 \f1\fs28\insrsid7098678\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 \page }{\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid7098678\charrsid12134570 #
{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570 _Contents}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  Contents}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  contents}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \ab\af0\afs28 \ltrch\fcs0 
\b\f1\fs28\insrsid7098678\charrsid12134570 Contents
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 i }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Title page}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 ProgrammersGuide}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par ii }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Contents}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _Contents}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Introduction}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _Introduction}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 The }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570  Language}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _Language}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Lexical Rules}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _LexicalRules}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.1.1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Comments}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _Comments}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.1.2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Whitespace}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _Whitespace}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.1.3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Numerical Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _NumericConstants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.1.4 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Identifiers and Keywords}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _IdentKeywords}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Program Structure}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _ProgStructure}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.2.1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 T}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 hreads}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _Tasks}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.2.2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid11277131 Subroutines}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Subroutines}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par 2.2.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Macro Functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 MacroFunctions}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2581081 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 2.2.4 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Data segments}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 DataSegments}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid3028837 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11277131 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid11277131 2.2.4.1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid11277131 
Type Definitions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid11277131 IDH_NBC_TypeDefinitions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid11277131 
\par 2.2.4.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid11277131  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Variable}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid11277131  De}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 clarations}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid11277131 IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 
VariableDeclarations}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid11277131 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 2.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 The Preprocessor}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131\charrsid12134570 _Preprocessor}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid11277131 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid11277131 #include}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131\charrsid11277131 IDH_NBC_Include}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid11277131 
\par 2.3.2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid11277131 #define}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid11277131 IDH_NBC_Define}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid11277131 
\par 2.3.3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid11277131 ## (Concatenation)}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid11277131 IDH_NBC_Concatenation}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11277131\charrsid11277131 
\par 2.3.4 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid11277131 Conditional Compilation}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid11277131 IDH_NBC_CondCompilation}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11277131\charrsid11277131 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 2.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 
Compiler Tokens}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131 CompilerTokens}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par 2.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 5}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Expression Evaluator}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 ExpressionEvaluator}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par 2.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 6}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 IO-Map Address (IOMA) Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 IOMAPAddresses}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131 Assignment Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Assignment}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Math Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 MathStatements}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Logic Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 LogicStatements}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .4 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Bit Manipulation Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 BitManipulationStatements}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11277131 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 .5 }{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\uldb\insrsid11277131 Comparison }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Comparison}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.6}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Control Flow }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 ControlFlow}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 System Call }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 SystemCall}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.8}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Timing }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Timing}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.9}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Array }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Array}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.10}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 String }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 String}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.11}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Scheduling }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Scheduling}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Input }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Input}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.13}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Output }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 Output}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 2.7.14}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 Compile-time }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 _}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 CompileTime}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid12134570 Statements}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid11277131 NBC}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570  API}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 
_API}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2581081 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.1 General Features
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10040384 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10040384\charrsid12134570 3.1.1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid10040384\charrsid12134570 
Timing Functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10040384\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10040384\charrsid12134570 _TimingFunctions}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10040384\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1652495 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1652495\charrsid12134570 3.1.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 2}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1652495\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid1652495\charrsid12134570 Numeric Functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid1652495\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC
}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid1652495\charrsid12134570 _NumericFunctions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1652495\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.1.3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1652495\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid1652495\charrsid12134570 Low-level System Functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid1652495\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid1652495\charrsid12134570 _SystemFunctions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1652495\charrsid12134570 

\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2581081 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid12134570 Input Module}
{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 _InputModule}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid2581081\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .1 }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Types and Modes}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid7098678\charrsid12134570 _SensorTypes}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Sensor Information}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _SensorInfo}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7098678\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15797811 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15797811\charrsid12134570 .3 }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid15797811\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid15797811\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 InputIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15797811\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570  }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 O}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid12134570 utput Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _Outputs}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.3.1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid7098678\charrsid12134570 Convenience Calls}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid7098678\charrsid12134570 _OutputsConvenience}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7098678\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15877702 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 3.3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15877702\charrsid12134570 .}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid1716622 2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15877702\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid15877702\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid15877702\charrsid12134570 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 
OutputIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15877702\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2581081 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid2581081\charrsid12134570 Sound Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 
_Sound}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid12134570 High-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid2581081\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 _SoundHighLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 .2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 L}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid2581081\charrsid12134570 ow-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid2581081\charrsid12134570 _SoundLowLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 .3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid2581081\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid12134570 _SoundIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622\charrsid14561269 3.5}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid14561269  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid14561269 IO Control Module}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \v\f1\insrsid2581081\charrsid14561269 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid14561269 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid14561269 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid14561269 IOCtrl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid14561269 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622\charrsid14561269 3.5}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid14561269 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid2581081\charrsid14561269 IOMap Offsets}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \v\f1\insrsid2581081\charrsid14561269 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131\charrsid14561269 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid14561269 _}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid14561269 IOCtrl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid2581081\charrsid14561269 IOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2581081\charrsid14561269 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6389182 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.6}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid6389182\charrsid12134570 Display Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 
_Display}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.6}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 High-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _DisplayHighLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.6}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Low-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _DisplayLowLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.6}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _DisplayIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Loader Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _Loader}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.7}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _LoaderIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.8}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Command Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _Command}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.8}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _CommandIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.9}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Button Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _Button}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.9}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 High-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _ButtonHighLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.9}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Low-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _ButtonLowLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.9}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _ButtonIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par 3.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 10}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 UI Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _UserInterface}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.10}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _UIIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.11}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 LowSpeed Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _LowSpeed}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.11}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 High-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _LowSpeedHighLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.11}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Low-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _LowSpeedLowLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.11}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _LowSpeedIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Comm Module}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _Comm}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .1 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 High-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _CommHighLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10239879 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879 3.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 .2 }{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\uldb\insrsid10239879\charrsid12134570 Low-level functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid10239879\charrsid12134570 _CommLowLevel}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879 3.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 .2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879 .1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570  }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid10239879 USB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid10239879\charrsid12134570  functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid10239879 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879\charrsid12134570 _Comm}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879 USB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879 3.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 .2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879 .2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570  }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid10239879 Hi-Speed}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid10239879\charrsid12134570  functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid10239879 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879\charrsid12134570 _Comm}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879 HS}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879 3.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 .2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879 .3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570  }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid10239879 Bluetooth}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid10239879\charrsid12134570  functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid10239879 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879\charrsid12134570 _Comm}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid10239879 BT}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10239879\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6389182 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.12}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 .3 }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\uldb\insrsid6389182\charrsid12134570 IOMap Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 
_CommIOMapOffsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.13}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 HiTechnic API Functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _HiTechnic}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1716622 3.14}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\uldb\insrsid6389182\charrsid12134570 Mindsensors API Functions}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\v\f1\insrsid6389182\charrsid12134570 IDH_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \v\f1\insrsid6389182\charrsid12134570 _Mindsensors}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6389182\charrsid12134570 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid14561269 \rtlch\fcs1 \ab\af1\afs28\alang1025 \ltrch\fcs0 
\b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14561269 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14561269 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14561269 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  IDH_N}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629 B}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570 C_Introduction}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14561269 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  Introduction}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14561269 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  introduction;language}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14561269 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14561269 1 Introduction
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11538749 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11538749\charrsid11538749 NBC stands for NeXT Byte Codes. It is a simple language for programming the LEGO MINDSTORMS NXT product. The NXT has a byte-code interpreter (provided by LEGO), which can be used to execute programs. The NBC comp
iler translates a source program into LEGO NXT byte-codes, which can then be executed on the NXT itself. Although the preprocessor and format of NBC programs are similar to assembly, NBC is not a general-purpose assembly language \endash 
 there are many restrictions that stem from limitations of the LEGO byte-code interpreter.
\par Logically, NBC is defined as two separate pieces. The NBC language describes the syntax to be used in writing programs. The NBC Application Programming
 Interface (API) describes the system functions, constants, and macros that can be used by programs. This API is defined in a special file known as a "header file" which should be included at the beginning of any NBC program. By default, this file is not 
automatically included when compiling a program.
\par This document describes both the NBC language and the NBC API. In short, it provides the information needed to write NBC programs. Since there are different interfaces for NBC, this document does not describe
 how to use any specific NBC implementation (such as the command-line compiler or {\*\xmlopen\xmlns2{\factoidname PlaceName}}{\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname PlaceName}}Bricx{\*\xmlclose} 
{\*\xmlopen\xmlns2{\factoidname PlaceName}}Command{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceType}}Center{\*\xmlclose}{\*\xmlclose}{\*\xmlclose}
). Refer to the documentation provided with the NBC tool, such as the NBC User Manual, for information specific to that implementation.
\par For up-to-date information and documentation for NBC, visit the NBC website at }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11538749  HYPERLINK "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11538749\charrsid11538749 
http://bricxcc.sourceforge.net/nbc/}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11538749 " }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9267671\charrsid15230735 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000002400000068007400740070003a002f002f0062007200690063007800630063002e0073006f00750072006300650066006f007200670065002e006e00650074002f006e00620063002f000000e0c9ea79f9bace118c8200aa004ba90b48000000680074007400
70003a002f002f0062007200690063007800630063002e0073006f00750072006300650066006f007200670065002e006e00650074002f006e00620063002f00000000000000000000000200}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs17\f1\ul\cf2\insrsid11538749\charrsid15230735 
http://bricxcc.sourceforge.net/nbc/}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11538749\charrsid11538749 .}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11538749 

\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid13639557 \rtlch\fcs1 \ab\af1\afs28\alang1025 \ltrch\fcs0 
\b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13639557 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid13639557 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13639557 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 C_Language}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13639557 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  The NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 C Language}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13639557 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  language}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13639557 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13639557 2 The NBC Language
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9399679 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid9399679\charrsid9399679 This section describes the NBC language itself. This includes the lexical rules used by the compiler, the structure programs, statements, and expressions, and the operation of the preprocessor.
\par Unlike some assembly languages, NBC is a ca
se-sensitive language.  That means that the identifier "xYz" is not the same identifier as "Xyz".  Similarly, the subtract statement begins with the keyword "sub" but "suB", "Sub", or "SUB" are all just valid identifiers \endash  not keywords.}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6561496\charrsid9399679 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid13576943 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13576943 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid13576943 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13576943 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_LexicalRules}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13576943 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  Lexical Rules}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13576943 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  lexical rules}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13576943 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13576943 2.1 Lexical Rules
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7098678\charrsid12134570 The lexical rules describe how }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
 breaks a source file into individual tokens. This includes the way comments are written, then handling of whitespace, and valid characters for identifiers.
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid8355390 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8355390 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid8355390 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8355390 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570 C_Comments}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8355390 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  Comments}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8355390 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  comments}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8355390 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8355390 2.1.1 Comments
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7098678\charrsid12134570 T}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9399679 hree}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570  forms of comments are supported in }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 . The first form (traditional C comments) begin with /* and end with */. They may span multiple lines, but do not nest:
\par }\pard \ltrpar\ql \fi-360\li1080\ri0\sb120\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin1080\itap0\pararsid11078304 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 /* this is a comment */
\par }\pard \ltrpar\ql \fi-360\li1080\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin1080\itap0\pararsid11078304 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 /* this is a two}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid11078304 
\line }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 line comment * /
\par /* another commen}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678 t.}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 ..}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid11078304 \line }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7098678\charrsid3372217 /* trying to nes}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678 t.}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 ..}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid11078304 \line  \tab }{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 ending the inner comm}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678 ent.}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 .. */}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid11078304 \line }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 this text is no longer a }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid11027987\charrsid3372217 comment! }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 */
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
The second form of comments begins with // and ends with a newline (sometimes known as C++ style comments).
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7098678 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678 /}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid3372217 / a single line comment

\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9399679 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9399679\charrsid9399679 
The third form of comments begins with ; and ends with a newline (sometimes known as assembly language style comments).
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9399679 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679 ; another single line comment
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9399679 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9399679\charrsid9399679 The compiler ignores comments. }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7098678\charrsid12134570 Their only purpose is to allow the programmer to document the source code.
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid13072512 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13072512 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid13072512 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13072512 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_Whitespace}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13072512 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  Whitespace}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13072512 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  whitespace}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13072512 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13072512 2.1.2 Whitespace
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9399679 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid9399679\charrsid9399679 Whitespace (spaces, tabs, and newlines) is used to separate tokens and to make programs more readable. As l
ong as the tokens are distinguishable, adding or subtracting whitespace has no effect on the meaning of a program. For example, the following lines of code both have the same meaning:
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9399679 {\rtlch\fcs1 \af2 \ltrch\fcs0 \b\f2\insrsid9399679\charrsid9399679 set}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679  x,2}{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679 \line }{\rtlch\fcs1 \af2 \ltrch\fcs0 \b\f2\insrsid9399679\charrsid9399679 set}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679    x,   2}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679 
\line }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9399679 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9399679\charrsid9399679 Generally, whitespace is ignored outside of string
 constants and constant numeric expressions.  However, unlike in C, NBC statements may not span multiple lines.  Aside from pre-processor macros invocations, each statement in an NBC program must begin and end on the same line.  
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9399679 {\rtlch\fcs1 \af2 \ltrch\fcs0 \b\f2\insrsid9399679\charrsid9399679 add}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679 
 x, x, 2 ; okay\line }{\rtlch\fcs1 \af2 \ltrch\fcs0 \b\f2\insrsid9399679\charrsid9399679 add}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679  x,      // error\line     x, 2    // error\line }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid9399679 \line }{\rtlch\fcs1 \af2 \ltrch\fcs0 \b\f2\insrsid9399679\charrsid9399679 set}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679  x, (2*2)+43-12 ; okay\line }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\b\f2\insrsid9399679\charrsid9399679 set}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679  x, 2 * 2 ; error (constant expression contains whitespace)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679 \line }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7098678\charrsid3372217 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid14353007 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14353007 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14353007 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14353007 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_NumericConstants}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14353007 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  Numerical Constants}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14353007 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  numerical constants; constants}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14353007 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14353007 2.1.3 Numerical Constants
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7098678\charrsid12134570 Numerical constants may be written in either decimal or hexadecimal form. Decimal constants consist of one or more decimal digits. Hexadecimal constants start with 0x or 0X followed by one or more hexadecimal digits.}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9399679 {\rtlch\fcs1 \af2 \ltrch\fcs0 \b\f2\insrsid9399679\charrsid9399679 set}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679 
 x, 10 // set x to 10
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \b\f2\insrsid9399679\charrsid9399679 set}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679\charrsid9399679  x, 0x10 ; set x to 16 (10 hex)
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12411664 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid12411664 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid12411664 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12411664 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_IdentKeywords}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12411664 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  Identifiers and Keywords}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12411664 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  identifiers;keywords}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12411664 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid12411664 2.1.4 Identifiers and Keywords
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16398534 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7098678\charrsid12134570 Identifiers a}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3306987\charrsid12134570 re used for variable, task, }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 function}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3306987\charrsid12134570 , and subroutine}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570  names. The first character of an identifier must be an upper or lower case letter or the underscore ('_'). }{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid11027987\charrsid12134570 Remaining characters may be letters, numbers, and }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3306987\charrsid12134570 an }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11027987\charrsid12134570 underscore. }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3306987\charrsid12134570 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 A number of potential identifiers are reserved for use in the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
 language itself. These reserved words are call}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12464705\charrsid12134570 ed}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
 keywords and may not be used as identifiers. A complete list of keywords appears below:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx2520\tx4320\tx6480\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11875770 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679 add\tab sub\tab neg\tab mul
\par div\tab mod\tab and\tab or
\par xor\tab not\tab cmp\tab tst
\par index\tab replace\tab arrsize\tab arrbuild
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679\charrsid1457546 arrsubset\tab arrinit\tab mov\tab set
\par flatten\tab unflatten\tab numtostr\tab strtonum
\par strcat\tab strsubset\tab strtoarr\tab arrtostr
\par jmp\tab brcmp\tab brtst\tab syscall
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679 stop\tab exit\tab exitto\tab acquire
\par release\tab subcall\tab subret\tab setin
\par setout\tab getin\tab getout\tab wait
\par gettick\tab thread\tab endt\tab subroutine
\par follows\tab precedes\tab segment\tab ends
\par typedef\tab struct\tab db\tab byte
\par sbyte\tab ubyte\tab dw\tab word
\par sword\tab uword\tab dd\tab dword
\par sdword\tab udword\tab long\tab slong
\par ulong\tab void\tab mutex\tab waitv
\par call\tab return\tab abs\tab sign
\par strindex\tab strreplace\tab strlen\tab shl
\par shr\tab sizeof\tab compchk\tab compif
\par compelse\tab compend}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid1457546 \tab Function}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679 of\tab isconst
\par asl\tab asr\tab lsl\tab lsr
\par rotl\tab rotr\tab start\tab stopthread
\par priority\tab cmnt}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679\charrsid14318729  }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679 \tab }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679\charrsid14318729 fmtnum}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679 \tab compchktype}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9399679\charrsid14318729 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx2520\tx4320\tx6480\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2385108 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9399679 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5727849 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5727849 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5727849 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5727849 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_ProgStructure}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5727849 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  Program Structure}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5727849 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  structure}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5727849 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5727849 2.2 Program Structure
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11875770 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11875770\charrsid11875770 An NBC program is composed of code blocks and global variables in data segments. There are two primary types of code blocks: thread and subroutines. Each of these types of code blocks has its own unique 
features and restrictions, but they share a common structure.  
\par A third type of code block is the preprocessor macro function.  This code block type is used throughout the NBC API.  Macro functions are the only type of code block, which use a parameter pas
sing syntax similar to what you might see in a language like C or Pascal.
\par Data segment blocks are used to define types and to declare variables.  An NBC program can have zero or more data segments, which can be placed either outside of a code block or with
in a code block.  Regardless of the location of the data segment, all variables in an NBC program are global.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11875770 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid7615401 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7615401 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid7615401 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7615401 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_Tasks}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7615401 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  Threads}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7615401 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  threads}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7615401 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \insrsid7615401 2.2.1 Threads
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7803049 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7803049\charrsid7803049 The NXT implicitly supports multi-threading, thus an NBC thread directly corresponds to an NXT thread. Threads are defined using the thread keyword with the following syntax:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7803049 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7803049\charrsid7803049 thread name
\par   // the thread's code is placed here
\par endt
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7803049 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7803049\charrsid7803049 The name of the thread ma
y be any legal identifier. A program must always have at least one thread. If there is a thread named "main" then that thread will be the thread that is started whenever the program is run. If none of the threads are named "main" then the very first threa
d that the compiler encounters in the source code will be the main thread. The maximum number of threads supported by the NXT is 256.
\par The body of a thread consists of a list of statements and optional data segments. Threads may be started by scheduling depe
ndant threads using the precedes or follows statements. You may also start a thread using the start statement.  With the standard NXT firmware threads cannot be stopped by another thread.  The only way to stop a thread is by stopping all threads using the
 stop statement or by a thread stopping on its own via the exit and exitto statements. Using the NBC/NBC enhanced firmware you can also stop another thread using the stopthread statement.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7803049 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7803049\charrsid7803049 thread main
\par   precedes waiter, worker
\par   /* thread body goes here */
\par   // finalize this thread and schedule the threads in the
\par   // specified range to execute
\par   exit // all dependants are automatically scheduled
\par endt
\par 
\par thread waiter
\par   /* thread body goes here */
\par //  exit 
\par   ; exit is optional due to smart compiler finalization
\par endt
\par 
\par thread worker
\par   precedes waiter
\par   /* thread body goes here */
\par   exit // only one dependent \endash  schedule it to execute
\par endt
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7803049 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7803049 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid12667784 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid12667784 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid12667784 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12667784 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  IDH_NBC_Subroutines}
}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12667784 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid5720082 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid5720082  Subroutines}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12667784 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid5720082 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid5720082  subroutine}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629 s}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12667784 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid13450302 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid13450302  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid12667784 2.2.2 Subroutines
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15412938 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid15412938\charrsid15412938 
Subroutines allow a single copy of some code to be shared between several different callers. This makes subroutines much more space efficient than macro functions. Subroutines are defined using the subroutine keyword with the following syntax:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16219977 {\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid15412938\charrsid16219977 subroutine name
\par   // body of subroutine
\par   return // subroutines must end with a return statement
\par ends
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15412938 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15412938\charrsid15412938 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15412938 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15412938\charrsid15412938 
A subroutine is just a special type of thread that is designed to be called explicitly by other threads or subroutines.  Its name can be any legal identifier.  Subro
utines are not scheduled to run via the same mechanism that is used with threads.  Instead, subroutines and threads execute other subroutines by using the call statement (described in the section titled Statements). 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16219977 {\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid15412938\charrsid16219977 thread main
\par   /* body of main thread goes here */
\par   call mySub // compiler handles subroutine return address
\par   exit // finalize execution (details handled by the compiler)
\par endt
\par 
\par subroutine mySub
\par   /* body of subroutine goes here */
\par   return // compiler handles the subroutine return address
\par ends
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15412938 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15412938\charrsid15412938 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15412938 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15412938\charrsid15412938 
You can pass arguments into and out of subroutines using global variables. If a subroutine is designed to be used by concurrently executing threads then calls to the subroutine must be protected by acquiring a mutex prior to the subroutine call and relea
sing the mutex after the call.
\par You can also call a thread as a subroutine using a slightly different syntax.  This technique is required if you want to call a subroutine which executes two threads simultaneously.  The subcall and subret statements must be 
used instead of call and return.  You also must provide a global variable to store the return address as shown in the sample code below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid15412938 {\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid15412938\charrsid15412938 thread main
\par   /* thread body goes here */
\par   acquire ssMutex
\par   call SharedSub ; automatic return address
\par }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid16219977   }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid15412938\charrsid15412938 release ssMutex

\par }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid16219977   }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid15412938\charrsid15412938 
// calling a thread as a subroutine
\par }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid16219977   }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid15412938\charrsid15412938 
subcall AnotherSub, anothersub_returnaddress
\par }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid16219977   }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\noproof\insrsid15412938\charrsid15412938 exit
\par endt
\par 
\par subroutine SharedSub
\par   /* subroutine body goes here */
\par   return ; return is required as the last operation
\par ends
\par \tab 
\par thread AnotherSub
\par   /* threads can be subroutines too */
\par   subret anothersub_returnaddress ; manual return address
\par endt
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15412938 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15412938\charrsid15412938 
After the subroutine completes executing, it returns back to the calling routine and program execution continues with the next statement following the subroutine call. The maximum number of threads and subroutines supported by the NXT firmware is 256.}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15412938 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid5720082 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5720082 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5720082 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5720082 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid13450302 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid13450302  IDH_NBC_MacroFunctions}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5720082 \rtlch\fcs1 \af0\afs20\alang1025 
\ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629 Macro }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5720082 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  macros}}+{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5720082 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5720082 2.2.3 Macro Functions
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4544606\charrsid4544606 It is often helpful to group a set of 
statements together into a single function, which can then be called as needed. NBC supports macro functions with arguments.  Values may be returned from a macro function by changing the value of one or more of the arguments within the body of the macro f
unction.
\par Macro functions are defined using the following syntax:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid933160 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 #define name(argument_list) \\
\par   // body of the macro function \\
\par   // last line in macro function body has no '\\' at the end
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 Please note that the newline escape character ('\\') must be the ver
y last character on the line.  If it is followed by any whitespace or comments then the macro body is terminated at that point and the next line is not considered to be part of the macro definition.
\par The argument list may be empty, or it may contain one or 
more argument definitions. An argument to a macro function has no type. Each argument is simply defined by its name. Multiple arguments are separated by commas. Arguments to a macro function can either be inputs (constants or variables) for the code in th
e body of the function to process or they can be outputs (variables only) for the code to modify and return.  The following sample shows how to define a macro function to simplify the process of drawing text on the NXT LCD screen:
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\lang3082\langfe1033\langnp3082\insrsid4544606\charrsid1457546 #define MyMacro(x, y, berase, msg) \\
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid933160 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\lang3082\langfe1033\langnp3082\insrsid4544606\charrsid1457546   }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid4544606\charrsid4544606 mov dtArgs.Location.X, x \\
\par   mov dtArgs.Location.Y, y \\
\par   mov dtArgs.Options, berase \\
\par   mov dtArgs.Text, msg \\
\par   syscall DrawText, dtArgs
\par \tab 
\par MyMacro(0, 0, TRUE, 'testing')
\par MyMacro(10, 20, FALSE, 'Please Work')
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 
NBC macro functions are always expanded inline by the NBC preprocessor. This means that each call to a macro function results in another copy of the function\rquote 
s code being included in the program. Unless used judiciously, inline macro functions can lead to excessive code size.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid5443940 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5443940 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5443940 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5443940 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  IDH_N}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 B}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 C}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 _DataSegments}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5443940 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Data Segments}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5443940 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  data segments}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5443940 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \insrsid5443940 2.2.4 Data Segments
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4544606\charrsid4544606 Data segments contain all type definitions and variable declarations. Data segments are defined using the following syntax:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 dseg segment
\par   // type definitions and variable declarations go here
\par dseg ends
\par 
\par thread main
\par   dseg segment
\par     // or here \endash  still global, though
\par   dseg ends
\par endt
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4544606 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 
You can have multiple data segments in an NBC program. All variables are global regardless of where they are declared. 
Once declared, they may be used within all threads, subroutines, and macro functions. Their scope begins at the declaration and ends at the end of the program.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3570514\charrsid12134570 
\par }\pard\plain \ltrpar\s4\ql \fi-864\li864\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx864\wrapdefault\aspalpha\aspnum\faauto\outlinelevel3\adjustright\rin0\lin864\itap0\pararsid6447890 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6447890 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\f1\super\insrsid6447890\charrsid16136258 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6447890 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  IDH_N}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 B}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 C}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 _TypeDefinitions}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6447890 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Type Definitions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6447890 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  types}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6447890 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6447890\charrsid16136258 2.2.4.1 Type Definitions
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4544606\charrsid4544606 Type definitions must be contained within a data segment. They are used to define new type aliases or new aggregate types (i.e., structures). A type alias is defined using the typedef keyword with the following syntax:

\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 type_alias typedef existing_type 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 Th
e new alias name may be any valid identifier.  The existing type must be some type already known by the compiler.  It can be a native type or a user-defined type. Once a type alias has been defined it can be used in subsequent variable declarations and ag
gregate type definitions. The following is an example of a simple type alias definition:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 big typedef dword ; big is now an alias for the dword type
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 
Structure definitions must also be contained within a data segment. They are used to define a type which agg
regates or contains other native or user-defined types. A structure definition is defined using the struct and ends keywords with the following syntax:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 TypeName struct
\par   x byte
\par   y byte
\par TypeName ends
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 Structure definitions allow you to manage related data 
in a single combined type. They can be as simple or complex as the needs of your program dictate. The following is an example of a fairly complex structure:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 MyPoint struct
\par   x byte
\par   y byte
\par MyPoint ends
\par ComplexStrut struct
\par   value1 big            // using a type alias
\par   value2 sdword
\par   buffer byte[]         /* array of byte */
\par   blen word
\par   extrastuff MyPoint[]  // array of structs
\par   pt_1 MyPoint          // struct contains struct instances
\par   pt_2 MyPoint
\par ComplexStruct ends}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid4544606 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4544606\charrsid4544606 
\par }\pard\plain \ltrpar\s4\ql \fi-864\li864\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx864\wrapdefault\aspalpha\aspnum\faauto\outlinelevel3\adjustright\rin0\lin864\itap0\pararsid8142273 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8142273 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\f1\super\insrsid8142273\charrsid16136258 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8142273 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  IDH_N}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 B}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 C}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 _VariableDeclarations}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8142273 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Variable Declarations}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8142273 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  variables}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8142273 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8142273\charrsid16136258 2.2.4.2 Variable Declarations
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4544606\charrsid4544606 
All variable declarations must be contained within a data segment. They are used to declare variables for use in a code block such as a thread, subroutine, or macro function. A variable is declared using the following syntax:
\par }\pard \ltrpar\ql \fi270\li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid4544606 var_name}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4544606  }{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid4544606 type_name}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4544606  }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid4544606 optional_initialization}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid4544606 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid4544606 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 
The variable name may be any valid identifier. The type name must be a type or type alias already known by the compiler. The optional initialization format depends on the variable type, but for non-aggregate (scalar) types the format is simpl
y a constant integer or constant expression (which may not contain whitespace).  See the examples later in this section.
\par The NXT firmware supports several different types of variables which are grouped into two categories: scalar types and aggregate types.
 Scalar types are a single integer value which may be signed or unsigned and occupy one, two, or four bytes of memory. The keywords for declaring variables of a scalar type are listed in the following table:
\par }\pard \ltrpar\ql \li2160\ri0\widctlpar\tx4500\wrapdefault\faauto\adjustright\rin0\lin2160\itap0\pararsid4544606 {\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\insrsid4544606\charrsid4544606 Type Name\tab Information
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 byte, ubyte, db\tab 8 bit unsigned
\par sbyte\tab 8 bit signed
\par word, uword, dw\tab 16 bit unsigned
\par sword\tab 16 bit signed
\par dword, udword, dd\tab 32 bit unsigned
\par sdword\tab 32 bit signed
\par long, ulong\tab 32 bit unsigned (alias for dword, udword)
\par slong\tab 32 bit signed (alias for sdword)
\par }\pard \ltrpar\ql \li2160\ri0\sa120\widctlpar\tx4500\wrapdefault\faauto\adjustright\rin0\lin2160\itap0\pararsid4544606 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 mutex\tab Special type used for exclusive subroutine access
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid4544606\charrsid4544606 {\*\bkmkstart _Toc180913077}Table }{\field{\*\fldinst {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid4544606\charrsid4544606  SEQ Table \\* ARABIC }}{\fldrslt {\rtlch\fcs1 
\af1\afs24 \ltrch\fcs0 \f1\fs24\lang1024\langfe1024\noproof\insrsid933160 1}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid4544606\charrsid4544606 
. Scalar Types{\*\bkmkend _Toc180913077}
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4544606\charrsid4544606 Examples of scalar variable declarations are as follow:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4544606 dseg }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 segment}{\rtlch\fcs1 
\af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid4544606 
\par }\pard \ltrpar\ql \fi270\li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16740544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555 x }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 byte}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555             }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid10555555 // initialized to zero by default}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555 
\par y }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 byte}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555  12         }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid10555555 ; initialize to 12}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid10555555  
\par z }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 sword}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555  -2048     }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid10555555 /* a signed value */}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid10555555 
\par myVar big 0x12345 }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid10555555 ; use a type alias}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555 
\par var1 }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 dword}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555  0xFF   }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid10555555 ; value is 255}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid10555555 
\par myMutex }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 mutex  }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555    }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid10555555 ; mutexes ignore initialization, if present}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555 
\par bTrue }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 byte}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555  1      }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid10555555 ; byte variables can be used as booleans}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16740544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid10555555 dseg }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid10555555 ends
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4544606 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 
Aggregate variables are either structures or arrays of some other type (either scalar or aggregate). Once a user-defined struct type has been defined it may be used to declare a variable of that type. Similarly, user-defined struct types c
an be used in array declarations.  Arrays and structs may be nested (i.e., contained in other arrays or structures) as deeply as the needs of your program dictate, but nesting deeper than 2 or 3 levels may lead to slower program execution due to NXT firmw
are memory constraints.
\par Examples of aggregate variable declarations are as follow:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16740544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 dseg }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16740544 segment}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 
\par }\pard \ltrpar\ql \fi274\li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16740544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 buffer }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16740544 byte[]}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544  // starts off empty
\par msg }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16740544 byte[]}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544  'Testing' 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid16740544 // msg is an array of byte = 
\par // (0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x00)
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 data }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16740544 long}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 [] \{0xabcde, 0xfade0\} }{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \i\f2\fs22\insrsid16740544 ; two values in the array}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 
\par myStruct ComplexStruct }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid16740544 ; declare an instance of a struct}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 
\par Points MyPoint[] }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid16740544 ; declare an array of a structs}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 
\par msgs }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16740544 byte}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 [][] }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid16740544 ; an array of an array of byte}{\rtlch\fcs1 
\af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16740544 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4544606 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4544606 dseg }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid4544606 ends
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4544606 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4544606 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4544606\charrsid4544606 Byte arrays may be initialized either by using bra
ces containing a list of numeric values (\{val1, val2, ..., valN\}
) or by using a string constant delimited with single-quote characters ('Testing'). Embedded single quote characters are not supported. Arrays of any scalar type other than byte should be init
ialized using braces. Arrays of struct and nested arrays cannot be initialized.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid4544606 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid13980933 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13980933 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid13980933 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13980933 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_P}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 reprocessor}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13980933 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  Pr}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 eprocessor}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13980933 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  preprocessor}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13980933 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13980933 2.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2709417 3}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\insrsid13980933  The Preprocessor
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3028837 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570 The preprocessor implements the following directives: }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #include}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , }{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #define}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #ifdef}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570 , }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #ifndef}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #if}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #elif}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid3028837\charrsid3883358 #else}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #endif}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #undef}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837 ,##,}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570  }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837 #line}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 , and }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837 #pragma}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 
. Its implementation is fairly close to a standard C preprocessor, so most things that work in a generic C preprocessor should have the expected effect in }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570 . Significant deviations are listed below.
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2838610 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2838610 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid2838610 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2838610 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid12134570 C_Include}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2838610 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1040\langfe1033\super\langnp1040\insrsid4925629\charrsid13450302 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1040\langfe1033\langnp1040\insrsid4925629\charrsid13450302  #include}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2838610 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1040\langfe1033\super\langnp1040\insrsid4925629\charrsid13450302 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1040\langfe1033\langnp1040\insrsid4925629\charrsid13450302  #include}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2838610 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1040\langfe1033\super\langnp1040\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1040\langfe1033\langnp1040\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2838610 2.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2709417 3}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2838610 .1 #include
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3028837 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #include}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 
 command works as expected, with the caveat that the filename must be enclosed in double quotes. There is no notion of a system include path, so enclosing a filename in angle brackets is forbidden.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3028837 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid14501640 #include "foo.h" // ok
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3028837 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid14501640 #include <foo.h> // error!}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3028837 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 
 programs can begin with #include "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837 N}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2635343 XT}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 Defs.h" 
but they don't need to. This standard header file includes many important constants and macros which form the core }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 
 API. Current versions of }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570  no longer require that you manually include the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837 N}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2635343 XT}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 
Defs.h header file. Unless you specifically tell the compiler to ignore the standard system files this header file will automatically be included for you.
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid5854963 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5854963 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5854963 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5854963 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1040\langfe1033\super\langnp1040\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1040\langfe1033\langnp1040\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1040\langfe1033\langnp1040\insrsid4925629\charrsid12134570 C_Define}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5854963 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1040\langfe1033\super\langnp1040\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1040\langfe1033\langnp1040\insrsid4925629\charrsid12134570  #define}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5854963 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid13450302 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid13450302  #define}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5854963 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5854963 2.}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid2709417 3}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5854963 .2 #define
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2635343 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #define}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570  command is used for simple m
acro substitution. Redefinition of a macro is an error (unlike in C where it is a warning). }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2635343\charrsid2635343 Use #define to define your own constants for use throughout the program}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2635343\charrsid15019316 .}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2635343\charrsid2635343 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2635343 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2635343 #define TurnTime 3000 }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid2635343 
; 3 seconds
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2635343\charrsid2635343 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2635343 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 Macro
s are normally terminated by the end of the line, but the newline may be escaped with the backslash ('\\') to allow multiline macros}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2635343  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2635343\charrsid2635343 
(as described in the Macro Functions section above)}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 :
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2635343 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2635343 #define square(x, result) \\
\par   mul result, x, x 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3028837 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 #undef}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570  directive may be used to remove a macro\rquote s definition.
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid13329630 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13329630 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid13329630 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13329630 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  IDH_N}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629 B}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570 
C_Concatenation}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13329630 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  Concatenation}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13329630 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  concatenation}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13329630 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13329630 2.}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid2709417 3}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid13329630 .3 ## (Concatenation)
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3028837 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570 The ## directive works similar to the C preprocessor. It is replaced by nothing, which causes tokens on either side to be c
oncatenated together. Because it acts as a separator initially, it can be used within macro functions to produce identifiers via combination with parameter values.
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2709417 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid2709417 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid10748962  IDH_N}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629 B}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570 C_CondCompilation}
}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  Conditional Compilation}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  conditional compilation}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2709417 
2.3.4 Conditional Compilation
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10840280 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570 Conditional compilation works similar to the C preprocessor. The following preprocessor directives may be used:
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3028837 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid2706814 #if }{\rtlch\fcs1 \ai\af2 \ltrch\fcs0 \i\f2\insrsid3028837\charrsid2706814 
condition}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid2706814 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3028837 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid2706814 #ifdef }{\rtlch\fcs1 \ai\af2 \ltrch\fcs0 \i\f2\insrsid3028837\charrsid2706814 symbol}{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid2706814 
\par #ifndef }{\rtlch\fcs1 \ai\af2 \ltrch\fcs0 \i\f2\insrsid3028837\charrsid2706814 symbol}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid2706814 
\par #else
\par #elif}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837  }{\rtlch\fcs1 \ai\af2 \ltrch\fcs0 \i\f2\insrsid3028837\charrsid2706814 condition}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid2706814 
\par #endif}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid10840280\charrsid2706814 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10840280 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570 Conditions in }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 
#if}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3028837\charrsid12134570  directives use the same operators and precedence as in C. The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid3028837\charrsid3883358 defined()}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3028837\charrsid12134570  operator is supported.
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2709417 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid2709417 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid2709417 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid2709417  IDH_NBC_CompilerTokens}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \af0\afs20\alang1025 
\ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\lang1036\langfe1033\super\langnp1036\insrsid4925629\charrsid2709417 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1036\langfe1033\langnp1036\insrsid4925629\charrsid2709417  Compiler Tokens}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \af0\afs20\alang1025 
\ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  compiler tokens}}+{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2709417 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2709417 2.4 Compiler Tokens
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid15666914\charrsid10840280 
NBC supports special tokens which it replaces on compilation. The tokens are similar to preprocessor #define macros but they are actually handled directly by the compiler rather than the preprocessor.  The supported tokens are as follows:
\par }\pard\plain \ltrpar\ql \fi-2772\li3780\ri0\widctlpar\tx3762\wrapdefault\faauto\adjustright\rin0\lin3780\itap0\pararsid10840280\yts24 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af1\afs28 \ltrch\fcs0 \b\f1\fs28\insrsid10840280\charrsid10840280 Token\tab Usage
\par }\pard \ltrpar\ql \fi-2772\li3780\ri0\sa120\widctlpar\tx3762\wrapdefault\faauto\adjustright\rin0\lin3780\itap0\pararsid10840280\yts24 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10840280\charrsid10840280 __FILE__\tab 
This token is replaced with the currently active filename (no path)
\par __LINE__\tab This token is replaced with the current line number
\par __VER__\tab This token is replaced with the compiler version number
\par __THREADNAME__\tab This token is replaced with the current thread name
\par __I__, __J__\tab These tokens are replaced with the current value of I or J.  They are both initialized to zero at the start of each thread or subroutine.
\par __ResetI__, __ResetJ__\tab These tokens are replaced with nothing.  As a side effect the value of I or J is reset to zero.
\par __IncI__, __IncJ__\tab These tokens are replaced with nothing.  As a side effect the value of I or J is incremented by one.
\par __DecI__, __DecJ__\tab These tokens are replaced with nothing.  As a side effect the value of I or J is decremented by one.
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid15666914\charrsid10840280 {\*\bkmkstart _Toc180913078}Table }{\field{\*\fldinst {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid15666914\charrsid10840280  SEQ Table \\* ARABIC }}{\fldrslt {
\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\lang1024\langfe1024\noproof\insrsid933160 2}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 
\f1\fs24\insrsid15666914\charrsid10840280 . Compiler Tokens{\*\bkmkend _Toc180913078}
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid15666914\charrsid10840280 The ## preprocessor directive can help make the use of compiler tokens more readable. __THREADNAME__##_##__I__:  would become somet
hing like main_1:.  Without the ## directive it would much harder to read the mixture of compiler tokens and underscores.
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid3165630 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid3165630 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid3165630 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3165630 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 ExpressionEvaluator}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3165630 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Expression Evaluator}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3165630 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 expression evaluator}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3165630 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid3165630 2.5 }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8127797 Expression Evaluator}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \insrsid3165630 
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid15666914\charrsid6631972 
Constant expressions are supported by NBC for many statement arguments as well as variable initialization. Expressions are evaluated by the compiler when the program is compiled, not at run time. The compiler will return an error if it encounters an expre
ssion that contains whitespace. "4+4" is a valid constant expression but "4 + 4" is not.  
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6631972 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15666914\charrsid6631972 The expression evaluator supports the following operators:
\par }\pard\plain \ltrpar\ql \li2880\ri0\widctlpar\tx4608\wrapdefault\faauto\adjustright\rin0\lin2880\itap0\pararsid8127797\yts24 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid8127797\charrsid8127797 +\tab addition
\par -\tab subtraction
\par *\tab multiplication
\par /\tab division
\par ^\tab exponent 
\par % \tab modulo (remainder)
\par &\tab bitwise and
\par |\tab bitwise or
\par ~\tab bitwise xor
\par <<\tab shift left
\par >>\tab shift right
\par ()\tab grouping subexpressions}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8127797 
\par }\pard \ltrpar\ql \li2880\ri0\sa120\widctlpar\tx4608\wrapdefault\faauto\adjustright\rin0\lin2880\itap0\pararsid8127797\yts24 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6631972\charrsid6631972 PI\tab constant value
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid15666914\charrsid15019316 {\*\bkmkstart _Toc180913079}Table }{\field{\*\fldinst {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid15666914\charrsid15019316  SEQ Table \\* ARABIC }}{\fldrslt {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\lang1024\langfe1024\noproof\insrsid933160 3}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 
\f1\fs24\insrsid15666914\charrsid15019316 . Constant Expression Operators{\*\bkmkend _Toc180913079}
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid15666914\charrsid6631972 The expression evaluator also supports the following compile-time functions:
\par }\pard \ltrpar\ql \li1440\ri1440\sa120\widctlpar\wrapdefault\faauto\adjustright\rin1440\lin1440\itap0\pararsid15666914 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid15666914 tan(x), sin(x), cos(x)\line sinh(x), cosh(x)\line arctan(x), cotan(x)\line 
arg(x)\line exp(x), ln(x), log10(x), log2(x), logn(x, n)\line sqr(x), sqrt(x)\line trunc(x), int(x), ceil(x), floor(x), heav(x)\line abs(x), sign(x), zero(x), ph(x)\line rnd(x), random(x)\line max(x, y), min(x, y)\line power(x, exp), intpower(x, exp)

\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid15666914\charrsid6631972 {\*\bkmkstart _Toc180913080}Table }{\field{\*\fldinst {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid15666914\charrsid6631972  SEQ Table \\* ARABIC }}{\fldrslt {\rtlch\fcs1 
\af1\afs24 \ltrch\fcs0 \f1\fs24\lang1024\langfe1024\noproof\insrsid933160 4}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \f1\fs24\insrsid15666914\charrsid6631972 
. Constant Expression Functions{\*\bkmkend _Toc180913080}
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid15666914\charrsid6631972 The following example demonstrates how to use a constant expression:
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid15666914 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \i\f2\fs22\insrsid15666914 // expression value will be truncated to an integer
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid15666914 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid15666914  val, 3+(PI*2)-sqrt(30)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8127797 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8127797 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid8127797 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8127797 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 IOMAPAddresses}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8127797 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
IOMAP Addresses}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8127797 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 iomap addresses}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8127797 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8127797 2.6 IO-Map Address (IOMA) Constants
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15666914 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid15666914\charrsid4943899 
IOMA constants provide a simplified means for accessing input and output field values without having to use a variable or an input or output statement.  The constants are defined in the NBCCommon.h header file which is included automatically in your NBC p
rogram.
\par There are IOMA constants for inputs and IOMA constants for outputs.  They are defined as preprocessor macros.  To specify the port for each IOMA you must use a constant such as IN_1 or OUT_A.  You can often substitute an IOMA constant in statements 
which can accept a scalar variable argument.  The IOMA macros are shown below.
\par }\pard\plain \ltrpar\ql \li2880\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin2880\itap0\pararsid4943899\yts24 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 
\b\f1\fs24\insrsid4943899\charrsid4943899 IO-Map Address Macros
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid4943899\charrsid4943899 InputIOType(port)
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\lang1036\langfe1033\langnp1036\insrsid4943899\charrsid4943899 InputIOInputMode(port)
\par InputIORawValue(port)
\par InputIONormalizedValue(port)
\par InputIOScaledValue(port)
\par InputIOInvalidData(port)
\par OutputIOUpdateFlags(port)
\par OutputIOOutputMode(port)
\par OutputIOPower(port)
\par OutputIOActualSpeed(port)
\par OutputIOTachoCount(port)
\par OutputIOTachoLimit(port)
\par OutputIORunState(port)
\par OutputIOTurnRatio(port)
\par OutputIORegMode(port)
\par OutputIOOverload(port)
\par OutputIORegPValue(port)
\par OutputIORegIValue(port)
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid4943899\charrsid4943899 OutputIORegDValue(port)
\par OutputIOBlockTachoCount(port)
\par }\pard\plain \ltrpar\s27\ql \li2880\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin2880\itap0\pararsid15666914 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15666914\charrsid4943899 {\*\bkmkstart _Toc180913081}Table }{\field{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15666914\charrsid4943899  SEQ Table \\* ARABIC }}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\lang1024\langfe1024\noproof\insrsid933160 5}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15666914\charrsid4943899 . IOMA Constant Macros{\*\bkmkend _Toc180913081
}
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid6369968 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6369968 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid6369968 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6369968 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 Statements}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6369968 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6369968 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 statements}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6369968 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6369968 2.7 Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4943899 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4943899\charrsid4943899 The body of a code block (thread, subroutine, or macro function) is composed of statements. All statements are terminated with the newline character.
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid4226918 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid4226918 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid4226918 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4226918 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  IDH_NBC_Assignment}}
${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4226918 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  Assignment Statements}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4226918 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid13450302 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  assignment statements}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4226918 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid13450302 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid4226918 2.7.1 Assignment Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4943899 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4943899\charrsid15019316 Assignment statements enable you to copy values from one variable to another or to simply set the value of a variable.  In NBC there are two ways to assign a new value to a variable.  
\par The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4943899 mov}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4943899\charrsid15019316  statement assigns the value of its second argument to its firs
t argument.  The first argument must be the name of a variable.  It can be of any valid variable type except mutex.  The second argument can be a variable or a numeric or string constant.  If a constant is used, the compiler creates a variable behind the 
scenes and initializes it to the specified constant value.  
\par Both arguments to the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4943899 mov}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4943899\charrsid15019316 
 statement must be of compatible types.  A scalar value can be assigned to another scalar variable, regardless of type, structs can be assigned to struct variables if the 
structure types are the same, and arrays can be assigned to an array variable provided that the type contained in the arrays are the same. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4943899 mov}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4943899\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4943899 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid4943899 mov}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4943899 
 x, y     // set x equal to y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4943899 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4943899\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4943899 set}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4943899\charrsid15019316  statement also assigns its 
first argument to have the value of its second argument.  The first argument must be the name of a variable.  It must be a scalar type.  The second argument must be a numeric constant or constant expression.  The syntax of the }{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid4943899 set}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4943899\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4943899 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4943899 set x, 10     // set x equal to 10
\par 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4943899\charrsid15019316 
Because all arguments must fit into a 2-byte value in the NXT executable, the second argument of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4943899 set}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4943899\charrsid15019316 
 statement is limited to a 16 bit signed or unsigned value (-32768..65535).}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid8810504 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid205684 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid205684 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid205684 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  IDH_NBC_MathStatements}}
${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid205684 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  Math Statements}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid205684 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 math}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  statements}}+
{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid205684 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid205684 2.7.2 Math Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid9324297\charrsid15019316 Math statements enable you to perform basic math operations on data in your NBC programs.  Unlike high level programming languages where mathematical expressions use standard math operators (s
uch as *, -, +, /), in NBC, as with other assembly languages, math operations are expressed as statements with the math operation name coming first, followed by the arguments to the operation.  All statements in this family have one output argument and tw
o input arguments except the negate statement, the absolute value statement, and the sign statement.
\par Math statements in NBC differ from traditional assembly math statements because many of the operations can handle arguments of scalar, array, and struct typ
es rather than only scalar types.  If, for example, you multiply an array by a scalar then each of the elements in the resulting array will be the corresponding element in the original array multiplied by the scalar value.  
\par Only the absolute value and sig
n statements require that their arguments are scalar types.  When using the standard NXT firmware these two statements are currently implemented by the compiler since it does not have built-in support for them. If you install the enhanced NBC/NXC firmware
 and tell the compiler to target it using the \endash EF command line switch then these statements will be handled directly by the firmware itself rather than by the compiler.
\par The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 add}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement lets you add two input values together and store the result in the fir
st argument.  The first argument must be a variable but the second and third arguments can be variables, numeric constants, or constant expressions.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 add}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid9324297\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 add}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297 
 x, x, y ; add x and y and store result in x
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 sub}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  s
tatement lets you subtract two input values and store the result in the first argument.  The first argument must be a variable but the second and third arguments can be variables, numeric constants, or constant expressions.  The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 sub}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 sub}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297 
 x, x, y ; subtract y from x and store result in x
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 mul}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement lets you multiply two input values and store the result in the first argument.  The first argument must be a variable but the second and third arguments can be variab
les, numeric constants, or constant expressions.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 mul}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 mul}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297 
 x, x, x ; set x equal to x^2
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 div}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement lets you divide two input values and store the result in the first argument.  The first argument must be a
 variable but the second and third arguments can be variables, numeric constants, or constant expressions.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 div}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 
 statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 div}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297 
 x, x, 2 ; set x equal to x / 2 (integer division)
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 mod}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement lets you calculate the modu
lus value (or remainder) of two input values and store the result in the first argument.  The first argument must be a variable but the second and third arguments can be variables, numeric constants, or constant expressions.  The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 mod}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 mod}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297 
 x, x, 4 ; set x equal to x % 4 (0..3)
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 neg}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement lets you negate an input value and store the result in the first argument.  The first argument must be a variable but the second argument can be a variable, a numeric constant, 
or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 neg}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 neg}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297  x, y ; set x equal to -y

\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 abs}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  s
tatement lets you take the absolute value of an input value and store the result in the first argument.  The first argument must be a variable but the second argument can be a variable, a numeric constant, or a constant expression.  The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 abs}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 abs}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297 
 x, y ; set x equal to the absolute value of y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 sign}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement lets you take the sign value (-1, 0, or 1) of an input value and store the result in the first argument.  The first argument must be a variable but the second ar
gument can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid9324297 abs}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9324297\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9324297 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid9324297 sign}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid9324297 
 x, y ; set x equal to -1, 0, or 1
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9324297 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7098678\charrsid8861408 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid205684 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid205684 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid205684 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Logic}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid205684 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Logic }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684 
Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid205684 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 logic }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid205684 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid205684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid205684 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid205684  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid205684 
2.7.3 Logic Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1270704 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1270704\charrsid15019316 
Logic statements let you perform basic logical operations on data in your NBC program.  As with the math statements, the logical operation name begins the statement and it is followed by the arguments to the logical operation.  All the statements in this
 family have one output argument and two input arguments except the logical not statement.  Each statement supports arguments of any type, scalar, array, or struct.
\par The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 and}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1270704\charrsid15019316  statement lets you bitwise and together two input values and store the result in th
e first argument.  The first argument must be a variable but the second and third arguments can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 and}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1270704\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1270704 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid1270704 and}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid1270704  x, x, y  // x = x & y

\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1270704 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1270704\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 or}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1270704\charrsid15019316 
 statement lets you bitwise or together two input values and store the result in the first argument.  The first argument must be a variable but the second and third arguments can be a variable, a numeric constant, or a constant expression.  The syntax of 
the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 or}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1270704\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1270704 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid1270704\charrsid10633919 or}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid1270704\charrsid10633919  x, x, y  // x = x | y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1270704 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1270704\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 xor}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1270704\charrsid15019316  statement lets you bitwise exclusive or together two input values and store the result in the first argument.  The first argument must be a variable but the second and third arguments can be
 a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 xor}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1270704\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1270704 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid1270704 xor}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid1270704  x, x, y  // x = x ^ y

\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1270704 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1270704\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 not}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1270704\charrsid15019316  statement lets you logically not its input value and store the result in the first argument.  The first argument 
must be a variable but the second argument can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1270704 not}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1270704\charrsid15019316 
 statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1270704 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid1270704 not}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid1270704 
 x, x  // x = !x (logical not \endash  not bitwise)}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid7098678\charrsid1270704 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid9376517 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9376517 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid9376517 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9376517 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302 
 IDH_NBC_BitManipulationStatements}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9376517 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  Bit Manipulation Statements}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9376517 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid13450302 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  bit manipulation statements}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9376517 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid13450302 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9376517 2.7.4 Bit Manipulation Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid2323544\charrsid15019316 Bit manipulation statements enable you to perform basic bitwise operations on data in your NBC programs.  All statements in this family have one output argument and two input arguments except the complement statement.

\par Using the standard NXT firmware the basic shift right and shift left statements (shr and shl) are implemented by the compiler since the firmware does not support shift operations at this time. I
f you install the enhanced NBC/NBC firmware and tell the compiler to target it using the \endash 
EF command line switch, then these operations will be handled directly by the firmware itself rather than by the compiler. The other bit manipulation statements described in this section are only available when targeting the enhanced firmware.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 shr}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
 x, x, y  // x = x }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544 >>}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919  y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 shl}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement lets you shift left an input value by the number of bits specified by the second input argument and store the resu
lting value in the output argument.  The output (first) argument must be a variable but the second and third arguments can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 
shl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 shl}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
 x, x, y  // x = x }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544 <<}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919  y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 asr}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 
 statement lets you perform an arithmetic right shift operation.  The output (first) argument must be a variable but the second and third arguments can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid2323544 asr}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 asr}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
 x, x, y  // x = x }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544 >>}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919  y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 asl}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement lets you perform an arithmetic left shift operation.  The output (first) argument must be a variable but the second and third arguments can be a variable, a numeric constant, or a constant exp
ression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 asl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 asl}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
 x, x, y  // x = x }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544 <<}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919  y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 lsr}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement lets you perform a logical right shift operation.  The output (first) argument must be a variable but the second and third arguments can be a variable, 
a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 lsr}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 lsr}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544  x, x, y}{\rtlch\fcs1 
\af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 lsl}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement lets you perform a logical left shift operation.  The output (first) argument must be a variable but the second and third argument
s can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 lsl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 lsl}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544  x, x, y}{\rtlch\fcs1 
\af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 rotr}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement lets you perform a rotate right operation.  The output (first) argument must be a variable but the second an
d third arguments can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 rotr}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.

\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 rotr}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544  x, x, y}{\rtlch\fcs1 
\af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16136258 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16136258\charrsid16136258 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16136258 rotl}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16136258\charrsid16136258 
 statement lets you perform a rotate left operation.  The output (first) argument must be a variable but the second and third arguments can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid16136258 rotl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16136258\charrsid16136258  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544\charrsid16136258 rotl}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid2323544\charrsid16136258  x, x, y
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16136258 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16136258\charrsid16136258 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16136258 cmnt}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16136258\charrsid16136258 
 statement lets you perform a bitwise complement operation.  The output (first) argument must be a variable but the second can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid16136258 cmnt}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16136258\charrsid16136258  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544\charrsid16136258 cmnt}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid2323544\charrsid16136258  x, y // x = ~y
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid3155384 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid3155384 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid3155384 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3155384 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302 
 IDH_NBC_ComparisonStatements}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3155384 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid13450302 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  Comparison Statements}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3155384 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid13450302 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  comparison statements}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3155384 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid13450302 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid13450302  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid3155384 2.7.5 Comparison Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid2323544\charrsid15019316 Comparison statements enable you to compare data in your NBC programs. These statements take a comparison code constant
 as their first argument. Valid comparison constants are listed in the table below. You can use scalar, array, and aggregate types for the compare or test argument(s).
\par }\pard\plain \ltrpar\ql \li1440\ri0\widctlpar\tx3600\tx5040\tx6120\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid2323544\yts24 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \b\f1\insrsid2323544\charrsid15019316 Comparison\tab Constant}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546\charrsid15019316 \tab Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid2323544\charrsid15019316 \tab Alternative Token

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 Less than\tab LT\tab 0x00\tab <
\par Greater than\tab GT\tab 0x01\tab >
\par Less than or equal\tab LTEQ\tab 0x02\tab <=
\par Greater than or equal\tab GTEQ\tab 0x03\tab >=
\par Equal\tab EQ\tab 0x04\tab ==
\par Not equal\tab NEQ\tab 0x05\tab != or <>
\par }\pard\plain \ltrpar\s27\qc \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid2323544\charrsid15019316 {\*\bkmkstart _Ref180390481}{\*\bkmkstart _Toc180913082}Table }{\field{\*\fldinst {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid2323544\charrsid15019316  SEQ Table \\
* ARABIC }}{\fldrslt {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\lang1024\langfe1024\noproof\insrsid933160 6}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 
\f1\fs24\insrsid2323544\charrsid15019316 {\*\bkmkend _Ref180390481}. Comparison Constants{\*\bkmkend _Toc180913082}
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 cmp}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  st
atement lets you compare two different input sources.  The output (second) argument must be a variable but the remaining arguments can be a variable, a numeric constant, or a constant expression.  The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid2323544 cmp}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 cmp}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid5337838 
 EQ, bXEqualsY, x, y // bXEqualsY = (x == y);}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544\charrsid16604271 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 tst}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement lets you compare an input source to zero.  The output (second) argument must be a variable but the remaining argument can be a variable, a numeric constant, or a constant expression.  The syn
tax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2323544 tst}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid2323544 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid2323544 tst}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544 
 GT, bXGTZero, x // bXGTZero = (x > 0);}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid2323544\charrsid10633919 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid6520425 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6520425 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid6520425 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6520425 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 ControlFlow}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6520425 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Control Flow }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid6520425 Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6520425 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid16136258 control flow }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6520425 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6520425 2.7.6 Control Flow Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid12741000\charrsid15019316 Control flow statements enable y
ou to manipulate or control the execution flow of your NBC programs. Some of these statements take a comparison code constant as their first argument. Valid comparison constants are listed in }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid12741000\charrsid15019316  REF _Ref180390481 \\h }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9267671\charrsid3213828 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310038003000330039003000340038003100000000000001}}}{\fldrslt {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid933160\charrsid15019316 Table }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 
\f1\fs24\lang1024\langfe1024\noproof\insrsid933160 6}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  above. You can use scalar, arra
y, and aggregate types for the compare or test argument(s).
\par The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 jmp}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316 
 statement lets you unconditionally jump from the current execution point to a new location.  Its only argument is a label that specifies where program execution should resume. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 jmp}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid12741000 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000 jmp}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid5337838 
 LoopStart // jump to the LoopStart label}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000\charrsid16604271 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid10633919 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 brcmp}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement lets you conditionally jump from the current execution point to a new location.  It is like the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000\charrsid14972455 cmp}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement except that instead of an output argument it has a label argument that specifies where program execution should resume. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 brcmp}
{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid12741000 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000 brcmp}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid5337838 
 EQ, LoopStart, x, y // jump to LoopStart if x == y}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000\charrsid16604271 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid14972455 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 brtst}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement lets you conditionally jump from the current execution point to a new location.  It is like the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 tst}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid12741000\charrsid15019316  statement except that instead of an output argument it has a label argument that specifies where program execution should resume. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 brtst}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid12741000 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000 brtst}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid5337838 
 GT, lblXGTZero, x // jump to lblXGTZero if x > 0}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000\charrsid16604271 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid14972455 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 stop}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement lets you stop program execution completely, depending on the value of its boolean input argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000 stop}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid12741000 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000 stop}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000\charrsid16604271  }
{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid5337838 bProgShouldStop // stop program if flag <> 0}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000\charrsid14972455 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2323544 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2323544 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid5861148 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5861148 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5861148 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861148 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 SystemCall}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861148 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 System Call }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid6520425 Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861148 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid16136258 system call }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861148 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5861148 2.7.7 System Call Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid12741000\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000\charrsid7079948 syscall}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316  statement enables execution of various system functions via a constan
t function ID and an aggregate type variable for passing arguments to and from the system function. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12741000\charrsid7079948 syscall}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid12741000\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid12741000 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid5337838 // ptArgs is a struct with input and output args}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid12741000 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000\charrsid5337838 syscall}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000\charrsid5337838  SoundPlayTone, ptArgs}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid12741000 

\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12741000\charrsid5337838 
\par }\pard\plain \ltrpar\ql \li720\ri0\widctlpar\tx3420\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4143337\yts24 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0\afs28 
\ltrch\fcs0 \b\f1\fs28\insrsid12741000\charrsid15019316 Function ID}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \b\f1\fs28\insrsid1457546\charrsid15019316 \tab Function}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \b\f1\fs28\insrsid12741000\charrsid15019316 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid15019316 FileOpenRead\tab 0
\par FileOpenWrite\tab 1
\par FileOpenAppend\tab 2
\par FileRead\tab 3
\par FileWrite\tab 4
\par FileClose\tab 5
\par FileResolveHandle\tab 6
\par FileRename\tab 7
\par FileDelete\tab 8
\par SoundPlayFile\tab 9
\par SoundPlayTone\tab 10
\par SoundGetState\tab 11
\par SoundSetState\tab 12
\par DrawText\tab 13
\par DrawPoint\tab 14
\par DrawLine\tab 15
\par DrawCircle\tab 16
\par DrawRect\tab 17
\par DrawGraphic\tab 18
\par SetScreenMode\tab 19
\par ReadButton\tab 20
\par CommLSWrite\tab 21
\par CommLSRead\tab 22
\par CommLSCheckStatus\tab 23
\par RandomNumber\tab 24
\par GetStartTick\tab 25
\par MessageWrite\tab 26
\par MessageRead\tab 27
\par CommBTCheckStatus\tab 28
\par CommBTWrite\tab 29
\par KeepAlive\tab 31
\par IOMapRead\tab 32
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid15019316 {\*\bkmkstart _Toc180913083}IOMapWrite\tab 33
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337 IOMapReadByID\tab 34}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid15019316 
\par IOMapWrite}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337 ByID\tab 35}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid15019316 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid4143337 DisplayExecuteFunction}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337 \tab 36}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid15019316 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337 Comm}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid4143337 ExecuteFunction}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337 \tab 37}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4143337\charrsid15019316 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337 Loader}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid4143337 ExecuteFunction}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337 \tab 38}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4143337\charrsid15019316 
\par }\pard\plain \ltrpar\s27\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid12741000\charrsid15019316 Table }{\field{\*\fldinst {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid12741000\charrsid15019316  SEQ Table \\* ARABIC }}{\fldrslt {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 
\f1\fs24\lang1024\langfe1024\noproof\insrsid933160 7}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid12741000\charrsid15019316 . System Call Function IDs
{\*\bkmkend _Toc180913083}
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid12741000\charrsid12134570 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid15931244 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15931244 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid15931244 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15931244 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Timing}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15931244 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Timing }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 
Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15931244 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 timing }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15931244 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15931244 
2.7.8 Timing Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5784934 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid5784934\charrsid15019316 
Timing statements enable you to pause the execution of a thread or obtain information about the system tick counter in your NBC programs. When using the standard NXT firmware NBC implements the wait and waitv statements as thread-sp
ecific subroutine calls due to them not being implemented. The enhanced NBC/NXC firmware implements these statements natively. If needed, you can implement simple wait loops using gettick.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5784934 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid5784934\charrsid10509418 add}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid5784934\charrsid10509418  endTick, currTick, waitms
\par {\*\xmlopen\xmlns2{\factoidname place}}Loop{\*\xmlclose}:
\par   }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid5784934\charrsid10509418 gettick}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid10509418  currTick
\par }\pard \ltrpar\ql \fi270\li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5784934 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid5784934\charrsid10509418 brcmp}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid5784934\charrsid10509418  LT, {\*\xmlopen\xmlns2{\factoidname place}}Loop{\*\xmlclose}, currTick, endTick}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid10509418 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5784934 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5784934\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 wait}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5784934\charrsid15019316  statement suspends the current thread for the number of milliseconds specified by its constant argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 wait}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5784934\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5784934 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid5784934 wait}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid5337838  }{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934 1000}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid5337838  // }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934 wait for 1 second}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \b\f2\fs22\insrsid5784934\charrsid16604271 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid10633919 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5784934 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5784934\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 waitv}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5784934\charrsid15019316  statement acts like }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 wait}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5784934\charrsid15019316 
 but it takes a variable argument. If you use a constant argument with }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 waitv}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5784934\charrsid15019316 
 the compiler will generate a temporary variable for you. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 waitv}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5784934\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5784934 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid5784934 waitv}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid5337838  }{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934 iDelay}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid5337838  // }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934 wait for the number of milliseconds in iDelay}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid5784934\charrsid16604271 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid10633919 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5784934 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5784934\charrsid15019316 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 gettick}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5784934\charrsid15019316  statement suspends the current thread for the number of milliseconds specified by its constant argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid5784934 gettick}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5784934\charrsid15019316  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5784934 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid5784934 gettick}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid5337838  }{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934 x}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid5337838  // }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid5784934\charrsid10509418 
set x to the current system tick count
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid12134570 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid156090 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid156090 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid156090 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid156090 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Array}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid156090 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Array }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 
Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid156090 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 array }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid156090 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid156090 
2.7.9 Array Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8979885 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8979885\charrsid15019316 Array statements enable you to populate and manipulate arrays in your NBC programs. 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4143337 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid6779001 index}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement extracts a single element from the source array and returns the value in the output (first) argument. The last argument is the index of the desired element. The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid6779001 index}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4143337 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid6779001 // extract ar}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337 
ray}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid6779001 Values[i}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337 n}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid6779001 d}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid4143337 e}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid6779001 x] and store it in val}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337 ue}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid4143337\charrsid6779001 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8979885 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8979885\charrsid6779001 index}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8979885\charrsid6779001  val}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885 ue}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid6779001 , ar}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885 ray}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid6779001 Values, i}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885 n}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid6779001 d}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid8979885 e}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid6779001 x
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4143337 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid6779001 replace}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement replaces one or more items in a source array and stores the modified array contents in an output array. The array source argument (second) can be the same variable as the array de
stination (first) argument to replace without copying the array. The index of the element(s) to be replaced is specified via the third argument. The new value (last) argument can be an array, in which case multiple items are replaced. The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid6779001 replace}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4143337 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid6779001 // replace arValues[idx] with x in arNew}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid4143337  (arValues is unchanged)}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid6779001 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8979885 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8979885\charrsid6779001 replace}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8979885\charrsid6779001  arNew, arValues, idx, x
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4143337 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid13326347 arrsize}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement returns the number of elements in the input array (second) argument in the scalar output (first) argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid4143337\charrsid13326347 arrsize}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8979885 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8979885\charrsid13326347 arrsize}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8979885\charrsid13326347  nSize, arValues  // nSize == length of array
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4143337 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid13326347 arrinit}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement initializes the output array (first) argument using the value (second) and size (third) arguments provided. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid4143337\charrsid13326347 arrinit}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4143337 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid13326347 // initialize arValues with nSize zeros
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8979885 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8979885\charrsid13326347 arrinit}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8979885\charrsid13326347  arValues, }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885 0}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid13326347 , nSize
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4143337 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid13326347 arrsubset}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement copies a subset of the input array (second) argument to the output array (first) argument. The subset begins at th
e specified index (third) argument. The number of elements in the subset is specified using the length (fourth) argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid13326347 arrsubset}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4143337\charrsid7948705  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4143337 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid13326347 // copy the first x elements to arSub
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8979885 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8979885\charrsid13326347 arrsubset}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8979885\charrsid13326347  arSub, arValues, NA, x
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6779073 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid13326347 arrbuild}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705 
 statement constructs an output array from a variable number of input arrays, scalars, or aggregates. The types of all the input arguments must be compatible with the type of the output array (first) argument. You must provide one or more comma-separat
ed input arguments. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4143337\charrsid13326347 arrbuild}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4143337\charrsid7948705  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4143337 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid4143337\charrsid13326347 // build data array from 3 sources
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8979885 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8979885\charrsid13326347 arrbuild}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8979885\charrsid13326347  arData, arStart, arBody, arEnd}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8979885 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12741000 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12741000\charrsid12134570 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid9114225 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9114225 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid9114225 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9114225 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 String}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9114225 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 String }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 
Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9114225 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 string }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9114225 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9114225 
2.7.10 String Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3215552 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3215552\charrsid15019316 String statements enable you to populate and manipulate null-terminated byte arrays (aka strings) in your NBC programs.
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid868137 flatten}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement converts its input (second) argument into its string output (first) argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid868137 flatten}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 flatten}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  strData, args  // copy args struct}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552 ure}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137  to strData}{\rtlch\fcs1 \af2\afs22 
\ltrch\fcs0 \f2\fs22\insrsid3215552 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid868137 unflatten}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement converts its input string (third) argument to the output (first) argument type.  If the default value (fourth) argument type does not match the flattened data
 type exactly, including array sizes, then error output (second) argument will be set to TRUE and the output argument will contain a copy of the default argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid868137 unflatten
}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 unflatten}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  args, bErr, strSource, x  // convert string to cluster}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 numtostr}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement converts its scalar input (second) argument to a string output (first) argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207 numtostr}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 numtostr}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  strValue, value  // convert value to a string}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 fmtnum}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 
 statement converts its scalar input (third) argument to a string output (first) argument. The format of the string output is specified via the format string (second) argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207 fmtnum}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 fmtnum}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  strValue, fmtStr, value  // convert value to a string}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 strtonum}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 
 statement parses its input string (third) argument into a numeric output (first) argument, advancing an offset output (second) argument past the numeric string. The initial input offset (fourth) argument deter
mines where the string parsing begins. The default (fifth) argument is the value that is returned by the statement if an error occurs while parsing the string. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207 strtonum}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7829207 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid7829207\charrsid868137 // parse string into num }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid7829207 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 strtonum}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  value, idx, strValue, idx, nZero  
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9114225 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid9114225 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 strsubset}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 
 statement copies a subset of the input string (second) argument to the output string (first) argument. The subset begins at the specified index (third) argument. The number of characters in the subset is specified 
using the length (fourth) argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207 strsubset}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7829207 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid7829207\charrsid868137 // copy the first x }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid7829207 characters}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid7829207\charrsid868137  in strSource to strSub
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 strsubset}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  strSub, strSource, NA, x
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9114225 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid9114225 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 strcat}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 
 statement constructs an output string from a variable number of input strings. The input arguments must all be null-terminated byte arrays. You must provide one or more comma-separated input arguments. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7829207 strcat}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7829207 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid7829207\charrsid868137 // build data string from 3 sources
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 strcat}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  strData, strStart, strBody, strEnd
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid9114225 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid9114225 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 arrtostr}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement copies the input byte array (second) argument into its output string (first) argument and adds a null-terminator byte at the end. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7829207 arrtostr}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 arrtostr}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  strData, arrData  // convert byte array to string}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 strtoarr}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement copies the input string (second) argument into its output byte array (first) argument excluding the last byte, which should be a null. The syntax of the }{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid7829207 strtoarr}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 strtoarr}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  arrData, strData  // convert string to byte array}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 strindex}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement extracts a single element from the source string and returns the value in the output (first) argument. The last argument is the index of the desired element. The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207 strindex}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7829207 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid7829207\charrsid868137 // extract strVal[idx] and store it in val
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 strindex}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  val, strVal, idx}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid3215552\charrsid868137 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 strreplace}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement replaces one or more characters in a source string and stores the modified string in an output string. The string source argument (second) can be the same variable as the string de
stination (first) argument to replace without copying the string. The index of the character(s) to be replaced is specified via the third argument. The new value (fourth) argument can be a string, in which case multiple characters are replaced. The syntax
 of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207 strreplace}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7829207 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid7829207\charrsid868137 // replace strValues[idx] with newStr in strNew
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 strreplace}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  strNew, strValues, idx, newStr
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3215552\charrsid15019316 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7829207 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207\charrsid16547190 strlen}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement returns the length of the input string (second) argument in the scalar output (first) argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7829207 strlen}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7829207\charrsid7829207  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3215552 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid3215552\charrsid16547190 strlen}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid3215552\charrsid868137  nSize, strMsg  // nSize == length of strMsg
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3215552 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3215552\charrsid12134570 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2237893 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid2237893 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Scheduling}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Scheduling }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid6520425 Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid16136258 scheduling }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2237893 2.7.11 Scheduling Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8130582 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8130582\charrsid15019316 Scheduling statements enable you to control the execution of multiple threads and the calling of subroutines in your NBC programs.
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid7550769 exit}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement finalizes the current thread and schedules zero or more dependant threads by specifying start and end depe
ndency list indices. The thread indices are zero-based and inclusive. The two arguments are optional, in which case the compiler automatically adds indices for all the dependencies. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid12402425\charrsid7550769 exit}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid12402425 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid12402425\charrsid7550769 exit}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid12402425\charrsid7550769  0, 2  // schedule this thread's 3 dependants
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid7550769 exit}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid7550769  // schedule all this thread's dependants
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid7550769 exitto}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement exits the current thread and schedules the specified thread to begin executing. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid7550769 exitto}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid7550769 exitto}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid7550769  worker  // exit now and schedule worker thread
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid7550769 start}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement causes the thread specified in the statement to start running immediately. Using the standard NXT firmware this statement is implemented by the compiler using a set of compiler-g
enerated subroutines. The enhanced NBC/NXC firmware implements this statement natively. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid7550769 start}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 
 statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid7550769 start}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid7550769  worker  // start the worker thread
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 
stopthread}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement causes the thread specified in the statement to sto
p running immediately. This statement cannot be used with the standard NXT firmware. It is supported by the enhanced NBC/NXC firmware. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 stopthread}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid7550769 stopthread}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid7550769  worker  // stop the worker thread
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 priority}
{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  stateme
nt modifies the priority of the thread specified in the statement. This statement cannot be used with the standard NXT firmware. It is supported by the enhanced NBC/NXC firmware. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid12402425\charrsid15419590 priority}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid7550769 priority}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid7550769  worker, 50  // change the priority of the worker thread}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8130582 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8130582\charrsid7550769 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 precedes}
{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 
 statement causes the compiler to mark the threads listed in the statement as dependants of the current thread. A subset of these threads will begin executing once the current thread exits, depending on
 the form of the exit statement used at the end of the current thread. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 precedes}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 
 statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid7550769 precedes}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid7550769  worker, music, walking  // configure dependant threads}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8130582 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8130582\charrsid7550769 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 follows}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 
 statement causes the compiler to mark the current thread as a dependant of the threads listed in the statement. The current thread will be scheduled to execute if all of the threads that precede it have exited and scheduled it for execution. The syntax o
f the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 follows}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid7550769 follows}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid7550769  main  // configure thread dependencies}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8130582 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8130582\charrsid7550769 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 acquire}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement acquires the named mutex.  If the mutex is already acquired the current thread waits until it becomes available. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid12402425\charrsid15419590 acquire}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid4480171 acquire}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid4480171  muFoo  // acquire mutex for subroutine
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 release}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement releases the named mutex allowing other threads to acquire it. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 release}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid4480171 release}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid4480171  muFoo  // release mutex for subroutine
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 subcall}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 
 statement calls into the named thread/subroutine and waits for a return (which might not come from the same thread). The second argument is a variable used to store the return address. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid12402425\charrsid15419590 subcall}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid4480171 subcall}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid4480171  drawText, retDrawText  // call drawText subroutine
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 subret}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement returns from a thread to the return address value contained in its input argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 subret}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid4480171 subret}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid4480171  retDrawText  // return to calling routine
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 call}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement executes the named subroutine and waits for a return.  The argument should specify a thread that was declared using the subroutine keyword. The syntax of the }{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 call}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid4480171 call}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid4480171  MyFavoriteSubroutine  // call routine
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12402425 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 return}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement returns from a subroutine. The compiler automatically handles the return address for call and return when they are used with subroutines rather than threads. The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid12402425\charrsid15419590 return}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12402425\charrsid12402425  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8130582 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8130582\charrsid4480171 return}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8130582\charrsid4480171   // return to calling routine
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3215552 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3215552\charrsid12134570 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2237893 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid2237893 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Input}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 Input }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 
Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 input }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2237893 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2237893 
2.7.12 Input Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16532726 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16532726\charrsid15019316 Input statements enable you to configure the four input ports and read analog sensor 
values in your NBC programs. Both statements in this category use input field identifiers to control which attribute of the input port you are manipulating. Valid input field identifiers are listed in the following table.
\par }\pard\plain \ltrpar\ql \li1440\ri0\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid16532726\yts24 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \b\f1\insrsid16532726\charrsid15019316 Input Field ID}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546\charrsid15019316 \tab Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid16532726\charrsid15019316 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16532726\charrsid15019316 Type\tab 0
\par InputMode\tab 1
\par RawValue\tab 2
\par NormalizedValue\tab 3
\par ScaledValue\tab 4
\par InvalidData\tab 5
\par }\pard\plain \ltrpar\s27\ql \li1440\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0\pararsid16532726 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid16532726\charrsid15019316 {\*\bkmkstart _Toc180913084}Table }{\field{\*\fldinst {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid16532726\charrsid15019316  SEQ Table \\* ARABIC }}{\fldrslt {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\lang1024\langfe1024\noproof\insrsid933160 8}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 
\f1\fs24\insrsid16532726\charrsid15019316 . Input Field IDs{\*\bkmkend _Toc180913084}
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16539688 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16539688\charrsid16539688 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16539688\charrsid6578873 setin}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16539688\charrsid16539688 
 statement sets an input field of a sensor on a port to the value specified in its first argument. The port is specified via the second argument. The input field identifier is the third argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid16539688\charrsid6578873 setin}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16539688\charrsid16539688  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16532726 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16532726\charrsid5267631 setin}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid16532726\charrsid6578873  IN_TYPE_SWITCH, }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726 IN_1}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726\charrsid6578873 , Type }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid16532726 ;}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726\charrsid6578873  set }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726 sensor }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid16532726\charrsid6578873 to switch type
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16532726\charrsid5267631 setin}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726\charrsid6578873  IN_MODE_BOOLEAN, }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726 IN_1}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726\charrsid6578873 , InputMode }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726 ; }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726\charrsid6578873 set to boolean mode

\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16539688 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16539688\charrsid16539688 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid16539688\charrsid6578873 getin}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16539688\charrsid16539688 
 statement reads a value from an input field of a sensor on a port and writes the value to its first argument. The port is specified via the second argument. The input field identifier is the third argument. The syntax of the }{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid16539688\charrsid6578873 getin}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16539688\charrsid16539688  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16532726 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16532726\charrsid5267631 getin}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid16532726\charrsid6578873  rVal, thePort, RawValue  // read raw sensor value
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16532726\charrsid5267631 getin}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726\charrsid6578873  sVal, thePort, ScaledValue  // read sc}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid16532726\charrsid4480171 aled sensor value
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid16532726\charrsid5267631 getin}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid16532726\charrsid6578873  nVal, thePort, NormalizedValue  // read normalized value
\par 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3215552 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3215552\charrsid12134570 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid6651752 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6651752 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid6651752 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6651752 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 Outp}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 ut}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6651752 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Out}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 put }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6651752 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 out}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258 put }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6651752 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6651752 2.7.13 Output Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6693686 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid6693686\charrsid15019316 Output statements enable you to configure and control the three NXT outputs in your NBC programs. Both statements in this category use output field identifiers to control which attribute of the output you a
re manipulating. Valid output field identifiers are listed in the following table.
\par }\pard\plain \ltrpar\ql \li1440\ri0\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid6693686\yts24 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \b\f1\insrsid6693686\charrsid15019316 Output Field ID}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546\charrsid15019316 \tab Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid6693686\charrsid15019316 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6693686\charrsid15019316 UpdateFlags\tab 0
\par OutputMode\tab 1
\par Power\tab 2
\par ActualSpeed\tab 3
\par TachoCount\tab 4
\par TachoLimit\tab 5
\par RunState\tab 6
\par TurnRatio\tab 7
\par RegMode\tab 8
\par Overload\tab 9
\par RegPValue\tab 10
\par RegIValue\tab 11
\par RegDValue\tab 12
\par BlockTachoCount\tab 13
\par RotationCount\tab 14
\par }\pard\plain \ltrpar\s27\ql \li1440\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0\pararsid6693686 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid6693686\charrsid15019316 {\*\bkmkstart _Toc180913085}Table }{\field{\*\fldinst {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid6693686\charrsid15019316  SEQ Table \\* ARABIC }}{\fldrslt {\rtlch\fcs1 
\af0\afs24 \ltrch\fcs0 \f1\fs24\lang1024\langfe1024\noproof\insrsid933160 9}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f1\fs24\insrsid6693686\charrsid15019316 
. Output Field IDs{\*\bkmkend _Toc180913085}
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7350823 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7350823\charrsid7350823 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid5267631 setout}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 
 statement sets one or more output fields of a motor on one or more ports to the value specified by the coupled input arguments. The first argument is either a scalar value specifying a single port or a byte array specifying multiple ports. After the port
 argument you then provide one or more pairs of output field identifiers and values. You can set multiple fields via a single statement. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid5267631 setout}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid6693686 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid6693686\charrsid5267631  theMode, OUT_MODE_MOTORON  // set mode to motor on
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686\charrsid5267631  rsVal, OUT_RUNSTATE_RUNNING // motor running
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686\charrsid5267631  th}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686 ePort, OUT_A  // set port to #1}
{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686\charrsid5267631 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686\charrsid5267631  pwr, -75 // negative power means reverse motor direction
\par // set output values
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 setout}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686\charrsid5267631  thePort, OutputMode, theMode, RunState, rsVal, Power, pwr
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7350823 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid5267631 getout}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  statement rea
ds a value from an output field of a sensor on a port and writes the value to its first output argument. The port is specified via the second argument. The output field identifier is the third argument. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7350823\charrsid5267631 getout}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid6693686 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 getout}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid6693686\charrsid5267631  rmVal, thePort, RegMode  // read motor regulation mode
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 getout}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686\charrsid5267631  tlVal, thePort, TachoLimit  // read tachometer limit value
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid6693686\charrsid5267631 getout}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid6693686\charrsid5267631  rcVal, thePort, RotationCount // read the rotation count
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3215552 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3215552\charrsid12134570 
\par }\pard\plain \ltrpar\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid14156640 \rtlch\fcs1 \af1\afs24\alang1025 \ltrch\fcs0 \f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14156640 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14156640 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14156640 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 CompileTime}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14156640 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Compile-time}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 Statements}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14156640 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid6520425 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 compile-time}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid16136258  }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425 statements}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14156640 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid6520425 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid6520425  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14156640 
2.7.14 Compile-time Statements
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8475324 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8475324\charrsid15019316 Compile-time statements and functions enable you to perform simple compiler operations at the time you compile your NBC programs.
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7350823 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 sizeof(arg)}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  compiler function returns the size of the variable you pass into it. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 sizeof}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7350823\charrsid7350823  function is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8475324 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid7350823 dseg}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8475324\charrsid7350823  segment
\par   }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\lang1030\langfe1033\langnp1030\insrsid8475324\charrsid14041012 arg byte
\par   argsize byte 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\lang1030\langfe1033\langnp1030\insrsid8475324\charrsid14041012 dseg}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\lang1030\langfe1033\langnp1030\insrsid8475324\charrsid14041012  ends
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 // ...
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid14041012 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012  argsize, sizeof(arg) ; argsize == 1
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7350823 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 valueof(arg)}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  compiler function returns the value of the constant expression you pass into it. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 valueof}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7350823\charrsid7350823  function is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8475324 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid14041012 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8475324\charrsid14041012  arg}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 val}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 , }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 
valueof}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 (}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 4+3*2}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 ) }{\rtlch\fcs1 
\af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 ; argval}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012  == 1}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 0}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8475324\charrsid14041012 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7350823 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 isconst(arg)}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  compiler function returns TRUE if the argument you pass into it is a constant and FALSE if it is not a constant. The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 isconst}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  function is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8475324 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid14041012 set}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8475324\charrsid14041012  arg}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 val}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 , }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 
isconst}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 (}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 4+3*2}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 ) }{\rtlch\fcs1 
\af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 ; argval == TRUE}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7350823 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 compchk}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  compiler statement takes a comparison constant as its first argument. The second and third argumen
ts must be constants or constant expressions that can be evaluated by the compiler during program compilation. It reports a compiler error if the comparison expression does not evaluate to TRUE. Valid comparison constants are listed in }
{\field\fldedit{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  REF _Ref180390481 \\h }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9267671\charrsid7350823 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310038003000330039003000340038003100000000000001}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 Table }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1024\langfe1024\noproof\insrsid7350823\charrsid7350823 6}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 . The syntax of the }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 compchk}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  statement is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8475324 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid14041012 compchk}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 
\f2\fs22\insrsid8475324\charrsid14041012  EQ, }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid14041012 sizeof}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 (arg3), 2
\par 
\par }\pard \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7350823 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 compif}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 , }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid8463818 compelse}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 , and }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7350823\charrsid8463818 compend}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  compiler statements work together to create a compile-time if-else statement that enables you to control whether or not section
s of code should be included in the compiler output. The }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid8463818 compif}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 
 statement takes a comparison constant as its first argument. The second and third arguments must be constants or constant expressions that can be evaluated by the compiler during program compi
lation. If the comparison expression is true then code immediate following the statement will be included in the executable. The compiler if statement ends when the compiler finds the next }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid8463818 
compend}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  statement. To optionally provide an else clause use the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid8463818 compelse}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7350823\charrsid7350823  statement between the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 compif}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  and }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid8463818 
compend}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  statements. Valid comparison constants are listed in }{\field\fldedit{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  REF _Ref180390481 \\h }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9267671\charrsid7350823 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310038003000330039003000340038003100000000000029}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7350823\charrsid7350823 Table }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1024\langfe1024\noproof\insrsid7350823\charrsid7350823 6}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 . The syntax of the }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823 compif}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823  , }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7350823\charrsid8463818 compelse}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 , and }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7350823\charrsid8463818 compend}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7350823\charrsid7350823 
 statements is shown below.
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8475324 {\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid14041012 comp}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324 if}{
\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012  EQ, }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid14041012 sizeof}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid14041012 (arg3), 2}
{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324 
\par   // compile this if sizeof(arg3) == 2}{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324\charrsid8463818 
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid8463818 compelse
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \f2\fs22\insrsid8475324   // compile this if sizeof(arg3) != 2
\par }{\rtlch\fcs1 \af2\afs22 \ltrch\fcs0 \b\f2\fs22\insrsid8475324\charrsid8463818 compend
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3215552 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3215552\charrsid12134570 
\par }\pard\plain \ltrpar\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid8079688 \rtlch\fcs1 \ab\af1\afs28\alang1025 \ltrch\fcs0 
\b\f1\fs28\lang1033\langfe1033\kerning28\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8079688 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid8079688 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8079688 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 C_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 API}}${\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8079688 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  The NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570 C }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 API}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8079688 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 api}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8079688 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8079688 3 The NBC Language
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid9908006 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid9908006\charrsid15019316 The NBC API defines a set of const
ants and macros that provide access to various capabilities of the NXT such as sensors, outputs, and communication. The API consists of macro functions and constants. A function is something that can be called as a statement. Typically it takes some actio
n or configures some parameter. Constants are symbolic names for values that have special meanings for the target. Often, a set of constants will be used in conjunction with a function.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid15019316 

\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9588887 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9588887 {\*\bkmkstart _Toc179361847}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid9588887 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9588887 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 TimingFunctions}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9588887 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Timing Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9588887 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 timing functions}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9588887 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9588887\charrsid5778616 3.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5778616 .1}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9588887\charrsid5778616  Timing }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15413722\charrsid5778616 F}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9588887\charrsid5778616 unctions
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Wait(time)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8585829 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8585829\charrsid8585829 Make a task sleep for specified amount of time (in 1000ths of a second). The time argument may be an expression or a constant:
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 Wait(1000) // wait 1 second
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 GetFirstTick(out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1457546 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Return an unsigned 32-bit value, which is the system timing value (called a "tick") in milliseconds at the time that the program began running.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 GetFirstTick(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 GetSleepTime(out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1457546 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Return the number of minutes that the NXT will remain on before it automatically shuts down.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 GetSleepTime(sleepy)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 GetSleepTimer(out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1457546 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Return the number of minutes left in the countdown to zero from the original SleepTime value. When the SleepTimer value reaches zero the NXT will shutdown.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 GetSleepTimer(stime)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 ResetSleepTimer\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1457546 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Reset the system sleep timer back to the SleepTime value. Executing this function periodically can keep the NXT from shutting down while a program is running.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 ResetSleepTimer
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 SetSleepTimeout(minutes)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1457546 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Set the NXT sleep timeout value to the specified number of minutes.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 SetSleepTimeout(8)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 SetSleepTimer(minutes)\tab Function
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 SetSleepTimer(3)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15413722 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15413722 {\*\bkmkstart _Toc179361851}{\*\bkmkend _Toc179361847}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid15413722 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15413722 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 NumericFunctions}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15413722 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Numeric Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15413722 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 numeric functions}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15413722 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15413722\charrsid5778616 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5778616 1.}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15413722\charrsid5778616 2 Numeric Functions
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Random(out result, Max)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1457546 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Return an unsigned 16-bit random number between 0 and n (exclusive). Max can be a constant or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 Random(x, 10) // return a value of 0..9
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 SignedRandom(out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10502071 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10502071\charrsid10502071 Return a signed 16-bit random number.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 SignedRandom(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Sqrt(x, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10502071 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10502071\charrsid10502071 Return the square root of the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 Sqrt(x, x) // x = sqrt(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Sin(degrees, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10502071 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10502071\charrsid10502071 Return the sine of the specified degrees value. The result is 100 times the sine value (-100..100).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \lang1024\langfe1024\langnp3082\insrsid1457546\charrsid10502071 Sin(theta, x) // x = sin(theta)*100
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Cos(degrees, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10502071 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10502071\charrsid10502071 Return the cosine of the specified degrees value. The result is 100 times the cosine value (-100..100).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \lang1024\langfe1024\langnp3082\insrsid1457546\charrsid10502071 Cos(y, x) // x = cos(y)*100
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Asin(value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10502071 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10502071\charrsid10502071 Return the inverse sine of the specified value (-100..100). The result is degrees (-90..90).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 Asin(80, deg) // deg = asin(0.80)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 Acos(value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10502071 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10502071\charrsid10502071 Return the inverse cosine of the specified value (-100..100). The result is degrees (0..180).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 Acos(0, deg) // deg = acos(0.00)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1457546\charrsid15019316 bcd2dec(bcdValue, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10502071 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10502071\charrsid10502071 Return the decimal equivalent of the binary coded decimal value provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1457546 bcd2dec(0x3a, dec)
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5330527 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid13909169\charrsid5330527 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5778616 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5778616 {\*\bkmkend _Toc179361851}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5778616 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5778616 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 C_SystemFunctions}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5778616 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 System Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5778616 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 system functions}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5778616 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5778616\charrsid5778616 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5778616 1.3}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5778616\charrsid5778616  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5778616 Low-level System}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5778616\charrsid5778616  Functions
\par }\pard\plain \ltrpar\ql \li0\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 
There are several standard structures that are defined by the NBC API for use with calls to low-level system functions defined within the NXT firmware. These structures are the means for passing values into the system functions 
and for returning values from the system functions. In order to call a system function you will need to declare a variable of the required system function structure type, set the structure members as needed by the system function, call the function, and t
hen read the results, if desired.
\par Many of these system functions are wrapped into higher level NBC API functions so that the details are hidden from view. Using these low-level API calls you can improve the speed of your programs a little.
\par If you install th
e NBC/NBC enhanced standard NXT firmware on your NXT all the screen drawing system function also supports clearing pixels in addition to setting them. To switch from setting pixels to clearing pixels just specify the DRAW_OPT_CLEAR_PIXELS value (0x0004) i
n
 the Options member of the structures. This value can be ORed together with the DRAW_OPT_CLEAR_WHOLE_SCREEN value (0x0001) if desired. Also, some of the system functions and their associated structures are only supported by the NBC/NBC enhanced standard N
XT firmware.  These functions are marked with (+) to indicate this additional requirement.
\par The first two structures define types are used within several other structures required by the screen drawing system functions.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12853278 TL}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052\charrsid3959624 ocation struct\line   X sword\line   Y sword\line T
Location ends
\par }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TSize struct\line   Width sword\line   Height sword\line TSize struct
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall DrawText, args\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 This function lets you draw text on the NXT LCD given the parameters you pass in via the TDrawText structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TDrawText struct\line   Result sbyte\line   Location TLocation\line   Text byte[]\line   Options dword\line TDrawText ends

\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   dtArgs TDrawText\line dseg ends\line set dtArgs.Location.X, 0\line set dtArgs.Location.Y, LCD_LINE1
\line mov dtArgs.Text, 'Please Work'\line set dtArgs.Options, 0x01 // clear before drawing\line syscall DrawText, dtArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall DrawPoint, args\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 This function lets you draw a pixel on the NXT LCD given the parameters you pass in via the TDrawPoint structure.  The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TDrawPoint struct\line   Result sbyte\line   Location TLocation\line   Options dword\line TDrawPoint ends
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   dpArgs TDrawPoint\line dseg ends\line set dpArgs.Location.X, 0\line set dpArgs.Location.Y, 20\line set
 dpArgs.Options, 0x04 // clear this pixel\line syscall DrawPoint, dpArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall DrawLine, args\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 This function lets you draw a line on the NXT LCD given the parameters you pass in via the TDrawLine structure.  The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TDrawLine struct\line   Result sbyte\line   StartLoc TLocation\line   EndLoc TLocation\line   Options dword\line 
TDrawLine ends
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   dlArgs TDrawLine\line dseg ends\line set dlArgs.StartLoc.X, 20\line set dlArgs.StartLoc.Y, 20\line 
set dlArgs.EndLoc.X, 60\line set dlArgs.EndLoc.Y, 60\line set dlArgs.Options, 0x01 // clear before drawing\line syscall DrawLine, dlArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall DrawCircle, args\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 This function lets you draw a circle on the NXT LCD given the parameters you pass in via the TDrawCircle structure.  The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TDrawCircle struct\line   Result sbyte\line   Center TLocation\line   Size byte\line   Options dword\line TDrawCircle ends

\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   dcArgs TDrawCircle\line dseg ends\line set dcArgs.Center.X, 20\line set dcArgs.Center.Y, 20\line 
set dcArgs.Size, 10 // radius\line set dcArgs.Options, 0x01 // clear before drawing\line syscall DrawCircle, dcArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall DrawRect, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you draw a rectangle on the NXT LCD given the parameters you pass in via the TDrawRect structure.  The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TDrawRect struct\line   Result sbyte\line   Location TLocation\line   Size TSize\line   Options dword\line TDrawRect ends

\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   drArgs TDrawRect\line dseg ends\line set drArgs.Location.X, 20\line set drArgs.Location.Y, 20\line 
set drArgs.Size.Width, 20\line set drArgs.Size.Height, 10\line set drArgs.Options, 0x00 // do not clear before drawing\line syscall DrawRect, drArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall DrawGraphic, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you draw a graphic image (RIC file) on the NXT LCD given the parameters you pass in via the TDrawGraphic structure.  The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TDrawGraphic struct\line   Result sbyte\line   Location TLocation\line   Filename byte[]\line   Variables sword[]\line 
  Options dword\line TDrawGraphic ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   dgArgs TDrawGraphic\line dseg ends\line set dgArgs.Location.X, 20\line set dgArgs.Location.Y, 20\line 
mov dgArgs.Filename, 'image.ric'\line arrinit dgArgs.Variables, 0, 10 // 10 zeros\line replace dgArgs.Variables, dgArgs.Variables, 0, 12\line replace dgArgs.Variables, dgArgs.Variables, 1, 14\line set dgArgs.Options, 0x00 // do not clear before drawing
\line syscall DrawGraphic, dgArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall SetScreenMode, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you set the screen mode of the NXT LCD given the parameters you pass in via the TSetScreenMode structure. The standard NXT firmware only supports setting the ScreenMode to }{\rtlch\fcs1 \af5\afs22 
\ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SCREEN_MODE_RESTORE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , which has a valu
e of 0x00. If you install the NBC/NBC enhanced standard NXT firmware this system function also supports setting the ScreenMode to }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SCREEN_MODE_CLEAR}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 , which has a value of 0x01. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TSetScreenMode struct\line   Result sbyte;\line   ScreenMode dword;\line TSetScreenMode ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   ssmArgs TSetScreenMode\line dseg ends\line set ssmArgs.ScreenMode, 0x00 // restore default NXT screen
\line syscall SetScreenMode, ssmArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall SoundPlayFile, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you play a sound file given the parameters you pass in via the TSoundPlayFile structure. The sound file can ei
ther be an RSO file containing PCM or compressed ADPCM samples or it can be an NXT melody (RMD) file containing frequency and duration values. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TSoundPlayFile struct\line   Result sbyte\line   Filename byte[]\line   Loop byte\line   SoundLevel byte\line 
TSoundPlayFile ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   spfArgs TSoundPlayFile\line dseg ends\line mov spfArgs.Filename, 'hello.rso'\line set spfA
rgs.Loop, FALSE\line set spfArgs.SoundLevel, 3\line syscall SoundPlayFile, spfArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall SoundPlayTone, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you play a tone given the parameters you pass in via the TSoundPlayTone structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TSoundPlayTone struct\line   Result sbyte\line   Frequency word\line   Duration word\line   
{\*\xmlopen\xmlns2{\factoidname place}}Loop{\*\xmlclose} byte\line   SoundLevel byte\line TSoundPlayTone ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   sptArgs TSoundPlayTone\line dseg ends\line set sptArgs.Frequency, 440\line 
set sptArgs.Duration, 1000 // 1 second\line set sptArgs.Loop, false\line set sptArgs.SoundLevel, 3\line syscall SoundPlayTone, sptArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall SoundGetState, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you retrieve information about the sound module state via the TSoundGetState structure. Constants for sound state are }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 
SOUND_STATE_IDLE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_STATE_FILE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 
\af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_STATE_TONE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , and }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_STATE_STOP}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 . Constants for sound flags are }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_FLAGS_IDLE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 
\af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_FLAGS_UPDATE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , and }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_FLAGS_RUNNING}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 . The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname PlaceName}}TSoundGetStateType{\*\xmlclose} 
{\*\xmlopen\xmlns2{\factoidname PlaceName}}struct{\*\xmlclose}\line   {\*\xmlopen\xmlns2{\factoidname PlaceType}}State{\*\xmlclose}{\*\xmlclose} byte\line   Flags byte\line TSoundGetStateType ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   sgsArgs TSoundGetState\line dseg ends\line syscall SoundGetState, sgsArgs\line 
brcmp NEQ, lblEndIf, sgsArgs.State, SOUND_STATE_IDLE\line   // do stuff\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall SoundSetState, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you set sound module state settings via the TSoundSetState structure. Constants for sound state are }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_STATE_IDLE}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_STATE_FILE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid10976052 SOUND_STATE_TONE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , and }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_STATE_STOP}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 . Constants for sound flags are }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_FLAGS_IDLE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 
\ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_FLAGS_UPDATE}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , and }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 SOUND_FLAGS_RUNNING}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 . The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TSoundSetState struct\line   {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname PlaceName}}Result
{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceName}}byte{\*\xmlclose}\line   {\*\xmlopen\xmlns2{\factoidname PlaceType}}State{\*\xmlclose}{\*\xmlclose} byte\line   Flags byte\line TSoundSetState ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   sssArgs TSoundSetState\line dseg ends\line set sssArgs.State, SOUND_STATE_STOP\line 
syscall SoundSetState, sssArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall ReadButton, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you read button state information via the TReadButton structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TReadButton struct\line   Result sbyte\line   Index byte\line   Pressed byte\line   Count byte\line 
  Reset byte // reset count after reading?\line TReadButton ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   rbArgs TReadButton\line dseg ends\line set rbArgs.Index, BTNRIGHT\line syscall ReadButton, rbArgs
\line brtst EQ, lblEndIf, rbArgs.Pressed\line   // do stuff\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall RandomNumber, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you obtain a random number via the TRandomNumber structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TRandomNumber struct\line   Result sword\line TRandomNumber ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   rnArgs TRandomNumber\line   myRandomNumber sword\line dseg ends\line syscall RandomNumber, rnArgs
\line mov myRandomValue, rnArgs.Result
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall GetStartTick, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you obtain the tick value at the time your program began executing via the TGetStartTick structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TGetStartTick struct\line   Result dword\line TGetStartTick ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   gstArgs TGetStartTick\line   myStart dword\line dseg ends\line syscall GetStartTick, gstArgs\line 
mov myStart, gstArgs.Result
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall KeepAlive, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you reset the sleep timer via the TKeepAlive structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TKeepAlive struct\line   Result dword\line TKeepAlive ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   kaArgs TKeepAlive\line dseg ends\line s}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid10976052\charrsid7741927 ys}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 call }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052\charrsid7741927 KeepAlive}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 , }{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid10976052\charrsid7741927 kaArgs // reset sleep timer
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileOpenWrite, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you create a file that you can write to using the values specified via the TFileOpen structure. The structure type declarat
ion is shown below. Use the FileHandle return value for subsequent file write operations. The desired maximum file capacity in bytes is specified via the Length member.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileOpen struct\line   Result dword\line   FileHandle byte\line   Filename byte[]\line   Length dword\line TFileOpen ends

\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   foArgs TFileOpen\line dseg ends\line mov foArgs.Filename, 'myfile.txt'\line 
set foArgs.Length, 256 // create with capacity for 256 bytes\line syscall FileOpenWrite, foArgs // create the file\line brcmp NEQ, lblEndIf, foArgs.Result, NO_ERR\line  // write to the file using FileHandle\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileOpenAppend, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you open an existing file that you can 
write to using the values specified via the TFileOpen structure. The structure type declaration is shown below. Use the FileHandle return value for subsequent file write operations.  The available length remaining in the file is returned via the Length me
mber.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileOpen struct\line   Result dword\line   FileHandle byte\line   Filename byte[]\line   Length dword\line TFileOpen ends

\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   foArgs TFileOpen\line dseg ends\line mov foArgs.Filename, 'myfile.txt'\line 
syscall FileOpenAppend, foArgs // open the file\line brcmp NEQ, lblEndIf, foArgs.Result, NO_ERR\line   // write to the file using FileHandle\line   // up to the remaining available length in Length\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileOpenRead, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 
This function lets you open an existing file for reading using the values specified via the TFileOpen structure. The structure type declaration is shown below. Use the FileHandle return value for subsequent file read ope
rations.  The number of bytes that can be read from the file is returned via the Length member.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileOpen struct\line   Result dword\line   FileHandle byte\line   Filename byte[]\line   Length dword\line TFileOpen ends

\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   foArgs TFileOpen\line dseg ends\line mov foArgs.Filename, 'myfile.txt'\line 
syscall FileOpenRead, foArgs // open the file for reading\line brcmp NEQ, lblEndIf, foArgs.Result, NO_ERR\line   // read data from the file using FileHandle\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileRead, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you read from a file using the values specified via the TFileReadWrite structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileReadWrite}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052\charrsid16455048  }{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid10976052 struct\line   Result dword\line   FileHandle byte\line   Buffer byte[]\line   Length dword\line TFileReadWrite
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   frArgs TFileReadWrite\line dseg ends\line mov frArgs.FileHandle, foArgs.FileHandle\line 
set frArgs.Length, 12 // number of bytes to read\line syscall FileRead, frArgs\line brcmp NEQ, lblEndIf, frArgs.Result, NO_ERR\line   TextOut(0, LCD_LINE1, frArgs.Buffer)\line   // show how many bytes were actually read\line   NumOut(0, LCD_LINE2, frArgs.
Length)\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileWrite,  args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you write to a file using the values specified via the TFileReadWrite structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileReadWrite}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052\charrsid16455048  }{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid10976052 struct\line   Result dword\line   FileHandle byte\line   Buffer byte[]\line   Length dword\line TFileReadWrite
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   fwArgs TFileReadWrite\line dseg ends\line mov fwArgs.FileHandle,  foArgs.FileHandle\line 
mov fwArgs.Buffer, 'data to write'\line syscall FileWrite, fwArgs\line brcmp NEQ, lblEndIf, fwArgs.Result, NO_ERR\line   // display number of bytes written\line   NumOut(0, LCD_LINE1, fwArgs.Length)\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileClose, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you close a file using the values specified via the TFileClose structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileClose struct\line   Result dword\line   FileHandle byte\line TFileClose ends 
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   fcArgs TFileClose\line dseg ends\line mov fcArgs.FileHandle, foArgs.FileHandle\line 
syscall FileClose, fcArgs
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileResolveHandle, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you resolve the handle of a file using the values specified via the TFileResolveHandle structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileResolveHandle struct\line   Result dword\line   FileHandle byte\line   WriteHandle byte\line   Filename byte[]\line 
TFileResolveHandle ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   frhArgs TFileResolveHandle\line dseg ends\line mov frhArgs.Filename, 'myfile.txt'\line 
syscall FileResolveHandle, frhArgs\line brcmp NEQ, lblEndIfLdrSuccess, frhArgs.Result, LDR_SUCCESS\line   // use the FileHandle as needed\line   brtst EQ, lblElseIfWriteHandle, frhArgs.WriteHandle\line     // file is open for writing\line 
    jmp lblEndIfWriteHandle\line   lblElseIfWriteHandle:\line     // file is open for reading\line   lblEndIfWriteHandle:\line lblEndIfLdrSuccess:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileRename, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you rename a file using the values specified via the TFileRename structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileRename struct\line   Result dword\line   OldFilename byte[]\line   NewFilename byte[]\line TFileRename ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 {\*\bkmkstart OLE_LINK1}{\*\bkmkstart OLE_LINK2}dseg segment\line   frArgs TFileRename\line dseg ends\line 
{\*\bkmkend OLE_LINK1}{\*\bkmkend OLE_LINK2}mov frArgs.OldFilename, 'myfile.txt'\line mov frArgs.NewFilename, 'myfile2.txt'\line syscall FileRename, frArgs\line brcmp NEQ, lblEndIfLdrSuccess, frhArgs.Result, LDR_SUCCESS\line   // do something\line 
lblEndIfLdrSuccess:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall FileDelete, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you delete a file using the values specified via the TFileDelete structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TFileDelete struct\line   Result dword\line   Filename byte[]\line TFileDelete ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   fdArgs TFileDelete\line dseg ends\line mov fdArgs.Filename, 'myfile.txt'\line 
syscall FileDelete, fdArgs // delete the file
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall CommLSWrite, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you write to an I2C (Lowspeed) sensor using the values specified via the TCommLSWrite structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TCommLSWrite struct\line   {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname PlaceName}}Result
{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceName}}sbyte{\*\xmlclose}\line   {\*\xmlopen\xmlns2{\factoidname PlaceType}}Port{\*\xmlclose}{\*\xmlclose} byte\line   Buffer byte[]\line   ReturnLen byte\line TCommLSWrite ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TCommLSWrite\line dseg ends\line set args.Port, IN_1\line mov args.Buffer, myBuf\line 
set args.ReturnLen, 8\line syscall CommLSWrite, args\line // check Result for error status
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall CommLSCheckStatus, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you check the status of an I2C (Lowspeed) sensor transaction using the values specified via the TCommLSCheckStatus structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TCommLSCheckStatus struct\line   {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname PlaceName}}Result
{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceName}}sbyte{\*\xmlclose}\line   {\*\xmlopen\xmlns2{\factoidname PlaceType}}Port{\*\xmlclose}{\*\xmlclose} byte\line   BytesReady byte\line TCommLSCheckStatus ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TCommLSCheckStatus\line dseg ends\line set args.Port, IN_1\line syscall CommLSCheckStatus, args
\line // is the status (Result) IDLE?\line brcmp NEQ, lblEndIf, args.Result, LOWSPEED_IDLE\line   // proceed\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall CommLSRead, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you read from an I2C (Lowspeed) sensor using the values specified via the TCommLSRead structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TCommLSRead struct\line   {\*\xmlopen\xmlns2{\factoidname place}}{\*\xmlopen\xmlns2{\factoidname PlaceName}}Result
{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceName}}sbyte{\*\xmlclose}\line   {\*\xmlopen\xmlns2{\factoidname PlaceType}}Port{\*\xmlclose}{\*\xmlclose} byte\line   Buffer byte[]\line   BufferLen byte\line TCommLSRead ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TCommLSRead\line dseg ends\line set args.Port, IN_1\line mov args.Buffer, myBuf\line set args
.BufferLen, 8\line syscall CommLSRead, args\line // check Result for error status & use Buffer contents
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall MessageWrite, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you write a message to a queue (aka mailbox) using the values specified via the TMessageWrite structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TMessageWrite struct\line   Result sbyte\line   QueueID byte\line   Message byte[]\line TMessageWrite ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TMessageWrite\line dseg ends\line set args.QueueID, MAILBOX1 // 0\line 
mov args.Message, 'testing'\line syscall MessageWrite, args\line // check Result for error status
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall MessageRead, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you read a message from a queue (aka mailbox) using the values specified via the TMessageRead structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TMessageRead struct\line   Result sbyte\line   QueueID byte\line   Remove byte\line   Message byte[]\line 
TMessageRead ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TMessageRead\line dseg ends\line set args.QueueID, MAILBOX1 // 0\line set args.Remove, TRUE\line 
syscall MessageRead, args\line brcmp NEQ, lblEndIf, args.Result, NO_ERR\line   TextOut(0, LCD_LINE1, args.Message)\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall CommBTWrite, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you write to a Bluetooth connection using the values specified via the TCommBTWrite structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TCommBTWrite struct\line   Result sbyte\line   Connection byte\line   Buffer byte[]\line TCommBTWrite ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TCommBTWrite\line dseg ends\line set args.Connection, 1\line mov args.Buffer, myData\line 
syscall CommBTWrite, args
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall CommBTCheckStatus, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you check the status of a Bluetooth connection using the values specified via the TCommBTCheckStatus structure. The structure type declaration is shown below.  Possible values for Result include }{
\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 ERR_INVALID_PORT}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 STAT_COMM_PENDING}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid10976052 ERR_COMM_CHAN_NOT_READY}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 , and }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid10976052 LDR_SUCCESS}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316  (0).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TCommBTCheckStatus struct\line   Result sbyte\line   Connection byte\line   Buffer byte[]\line TCommBTCheckStatus ends

\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TCommBTCommBTCheckStatus\line dseg ends\line set args.Connection, 1\line 
syscall CommBTCheckStatus, args\line brcmp NEQ, lblEndIf, args.Result, LDR_SUCCESS\line   // do something\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall IOMapRead, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you read data from a firmware module's IOMap using the values specified via the TIOMapRead structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TIOMapRead struct\line   Result sbyte\line   ModuleName byte[]\line   Offset word\line   Count word\line   Buffer byte[]
\line TIOMapRead ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TIOMapRead\line dseg ends\line mov args.ModuleName, CommandModuleName\line 
set args.Offset, CommandOffsetTick\line set args.Count, 4 // this value happens to be 4 bytes long\line syscall IOMapRead, args\line brcmp NEQ, lblEndIf, args.Result, NO_ERR\line   // do something with the data\line lblEndIf:
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall IOMapWrite, args\tab Function
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you write data to a firmware module's IOMap using the values specified via the TIOMapWrite structure. The structure type declaration is shown below.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TIOMapWrite struct\line   Result sbyte\line   ModuleName byte[]\line   Offset word\line   Buffer byte[]\line 
TIOMapWrite ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TIOMapWrite\line dseg ends\line mov args.ModuleName, SoundModuleName\line 
set args.Offset, SoundOffsetSampleRate\line mov args.Buffer, theData\line syscall IOMapWrite, args
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall IOMapReadByID, args\tab Function (+)
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you read data from a firmware module's IOMap using the values specified via the TIOMapReadByID structure. The structure type declaration is shown below. This
 function can be as much as three times faster than using syscall IOMapRead since it does not have to do a string lookup using the ModuleName.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TIOMapReadByID struct\line   Result sbyte\line   ModuleID dword\line   Offset word\line   Count word\line   Buffer byte[]
\line TIOMapReadByID ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TIOMapReadByID\line dseg ends\line mov args.ModuleID, CommandModuleID\line 
set args.Offset, CommandOffsetTick\line set args.Count, 4 // this value happens to be 4 bytes long\line syscall IOMapReadByID, args\line brcmp NEQ, lblEndIf, args.Result, NO_ERR\line   // do something with the data\line lblEndIf: 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall IOMapWriteByID, args\tab Function (+)
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you write data to a firmware modul
e's IOMap using the values specified via the TIOMapWriteByID structure. The structure type declaration is shown below. This function can be as much as three times faster than using SysIOMapWrite since it does not have to do a string lookup using the Modul
eName.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TIOMapWriteByID struct\line   Result sbyte\line   ModuleID dword\line   Offset word\line   Buffer byte[]\line 
TIOMapWriteByID ends
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TIOMapWriteByID\line dseg ends\line mov args.ModuleID, SoundModuleID\line 
set args.Offset, SoundOffsetSampleRate\line mov args.Buffer, theData\line syscall IOMapWriteByID, args
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall DisplayExecuteFunction, args\tab Function (+)
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you directly execute the Display
 module's primary drawing function using the values specified via the TDisplayExecuteFunction structure. The structure type declaration is shown below.  The values for these fields are documented in the table below.  If a field member is shown as 'x' it i
s ignored by the specified display command.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TDisplayExecuteFunction struct\line   Status byte\line   Cmd byte\line   On byte\line   X1 byte\line   Y1 byte\line 
  X2 byte\line   Y2 byte\line TDisplayExecuteFunction ends
\par }\pard\plain \ltrpar\ql \li360\ri0\widctlpar\tx3348\tx5856\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 Cmd\tab Meaning\tab Expected parameters
\par DISPLAY_ERASE_ALL\tab erase entire screen\tab ()
\par DISPLAY_PIXEL\tab set pixel (on/off)\tab (true/false,X1,Y1,x,x)
\par DISPLAY_HORIZONTAL_LINE\tab draw horizontal line\tab (true/false,X1,Y1,X2,x)
\par DISPLAY_VERTICAL_LINE\tab draw vertical line\tab (true/false,X1,Y1,x,Y2)
\par DISPLAY_CHAR\tab draw char (actual font)\tab (true/false,X1,Y1,Char,x)
\par DISPLAY_ERASE_LINE\tab erase a single line\tab (x,LINE,x,x,x)
\par DISPLAY_FILL_REGION\tab fill screen region\tab (true/false,X1,Y1,X2,Y2)
\par DISPLAY_FILLED_FRAME\tab draw a frame (on / off)\tab (true/false,X1,Y1,X2,Y2)
\par }\pard \ltrpar\ql \li360\ri0\sb120\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 Declare a variable of this type,
 set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TDisplayExecuteFunction\line dseg ends\line set args.Cmd, DISPLAY_ERASE_ALL\line 
syscall DisplayExecuteFunction, args
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall CommExecuteFunction, args\tab Function (+)
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 
This function lets you directly execute the Comm module's primary function using the values specified via the TCommExecuteFunction structure. The structure type declaration is shown below.  The values for these fields are documented in the table b
elow.  If a field member is shown as 'x' it is ignored by the specified display command.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TCommExecuteFunction struct\line   Result word\line   Cmd byte\line   Param1 byte\line   Param2 byte\line   Param3 byte
\line   Name byte[]\line   RetVal word\line TCommExecuteFunction ends
\par }\pard\plain \ltrpar\ql \li180\ri0\widctlpar\tx2520\tx5940\wrapdefault\faauto\adjustright\rin0\lin180\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 Cmd\tab Meaning\tab (Param1,Param2,Param3,Name)
\par INTF_SENDFILE\tab Send a file over a Bluetooth connection\tab (Connection,x,x,Filename)
\par INTF_SEARCH\tab Search for Bluetooth devices\tab (x,x,x,x)
\par INTF_STOPSEARCH\tab Stop searching for Bluetooth devices\tab (x,x,x,x)
\par INTF_CONNECT\tab Connect to a Bluetooth device\tab (DeviceIndex,Connection,x,x)
\par INTF_DISCONNECT\tab Disconnect a Bluetooth device\tab (Connection,x,x,x)
\par INTF_DISCONNECTALL\tab Disconnect all Bluetooth devices\tab (x,x,x,x)
\par INTF_REMOVEDEVICE\tab Remove device from My Contacts\tab (DeviceIndex,x,x,x)
\par INTF_VISIBILITY\tab Set Bluetooth visibility\tab (true/false,x,x,x)
\par INTF_SETCMDMODE\tab Set command mode\tab (x,x,x,x)
\par INTF_OPENSTREAM\tab Open a stream\tab (x,Connection,x,x)
\par INTF_SENDDATA\tab Send data\tab (Length, Connection, WaitForIt, Buffer)
\par INTF_FACTORYRESET\tab Bluetooth factory reset\tab (x,x,x,x)
\par INTF_BTON\tab Turn Bluetooth on\tab (x,x,x,x)
\par INTF_BTOFF\tab Turn Bluetooth off\tab (x,x,x,x)
\par INTF_SETBTNAME\tab Set Bluetooth name\tab (x,x,x,x)
\par INTF_EXTREAD\tab Handle external? read\tab (x,x,x,x)
\par INTF_PINREQ\tab Handle Blueooth PIN request\tab (x,x,x,x)
\par INTF_CONNECTREQ\tab Handle Bluetooth connect request\tab (x,x,x,x)
\par }\pard \ltrpar\ql \li360\ri0\sb120\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 
Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TCommExecuteFunction\line dseg ends\line set args.Cmd, INTF_BTOFF\line 
syscall CommExecuteFunction, args
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 syscall LoaderExecuteFunction, args\tab Function (+)
\par }\pard\plain \ltrpar\ql \li360\ri0\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10976052\charrsid15019316 This function lets you directly execute the Loader module's primary function using the values specified via the TLoaderExecuteFunction structure. The structure type declaration is shown below.  The values for these f
ields are documented in the table below.  If a field member is shown as 'x' it is ignored by the specified display command.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 TLoaderExecuteFunction struct\line   unsigned int Result;\line   byte Cmd;\line   string Filename;\line   byte Buffer[];
\line   unsigned long Length;\line TLoaderExecuteFunction ends
\par }\pard\plain \ltrpar\ql \li-432\ri0\widctlpar\tx3358\tx6228\wrapdefault\faauto\adjustright\rin0\lin-432\itap0\pararsid10976052 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 Cmd\tab Meaning\tab Expected Parameters
\par LDR_CMD_OPENREAD\tab Open a file for reading\tab (Filename, Length)
\par LDR_CMD_OPENWRITE\tab Creat a file\tab (Filename, Length)
\par LDR_CMD_READ\tab Read from a file\tab (Filename, Buffer, Length)
\par LDR_CMD_WRITE\tab Write to a file\tab (Filename, Buffer, Length)
\par LDR_CMD_CLOSE\tab Close a file\tab (Filename)
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1040\langfe1033\langnp1040\insrsid10976052\charrsid15019316 LDR_CMD_DELETE\tab Delete a file\tab (Filename)
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 LDR_CMD_FINDFIRST\tab Start iterating files\tab (Filename, Buffer, Length)
\par LDR_CMD_FINDNEXT\tab Continue iterating files\tab (Filename, Buffer, Length)
\par LDR_CMD_OPENWRITELINEAR\tab Create a linear file\tab (Filename, Length)
\par LDR_CMD_OPENREADLINEAR\tab Read a linear file\tab (Filename, Buffer, Length)
\par LDR_CMD_OPENAPPENDDATA\tab Open a file for writing\tab (Filename, Length)
\par LDR_CMD_FINDFIRSTMODULE\tab Start iterating modules\tab (Filename, Buffer)
\par LDR_CMD_FINDNEXTMODULE\tab Continue iterating modules\tab (Buffer)
\par LDR_CMD_CLOSEMODHANDLE\tab Close module handle\tab ()
\par LDR_CMD_IOMAPREAD\tab Read IOMap data\tab (Filename, Buffer, Length)
\par LDR_CMD_IOMAPWRITE\tab Write IOMap data\tab (Filename, Buffer, Length)
\par LDR_CMD_DELETEUSERFLASH\tab Delete all files\tab ()
\par LDR_CMD_RENAMEFILE\tab Rename file\tab (Filename, Buffer, Length)
\par }\pard \ltrpar\ql \li360\ri0\sb120\sa120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid10976052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10976052\charrsid15019316 
Declare a variable of this type, set its members, and then call the function, passing in your variable of this structure type.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid10976052 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10976052 dseg segment\line   args TLoaderExecuteFunction\line dseg ends\line s
et args.Cmd, LDR_CMD_DELETEUSERFLASH // delete user flash\line syscall LoaderExecuteFunction, args
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4537766 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid4537766 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid4537766 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4537766 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 InputModule}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4537766 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Input Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4537766 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 input module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4537766 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid4537766\charrsid4537766 3.2 }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5918628 Input Module}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid4537766\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7098678 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4195862\charrsid12134570 The NXT input module encompasses all sensor inputs except for digital I2C (LowSpeed) sensors. 
\par }\pard \ltrpar\ql \li360\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid4195862 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid4195862\charrsid12134570 Module Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab 
Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid4195862\charrsid12134570 
\par }\pard \ltrpar\ql \li360\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid4195862 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4195862\charrsid12134570 InputModuleName\tab "Input.mod"
\par InputModuleID\tab 0x00030001
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4195862 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4195862\charrsid12134570 There are four sensors, which }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1593256\charrsid12134570 are }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4195862\charrsid12134570 internally numbered 0, 1, 2, and 3. This is potentially con
fusing since they are externally labeled on the NXT as sensors 1, 2, 3, and 4. To help mitigate this confusion, the sensor port names }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4195862\charrsid12134570 , }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4195862\charrsid12134570 , }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4195862\charrsid12134570 , and }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4195862\charrsid12134570 
 have been defined. These sensor names may be used in any function that requires a sensor port as an argument.
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9534744 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9534744 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid9534744 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9534744 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 SensorTypes}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9534744 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Sensor Types}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9534744 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 sensor types}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9534744 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9534744\charrsid9534744 3.2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9534744 .1}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9534744\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9534744 Types and Modes}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9534744\charrsid9534744 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 The sensor ports on the NXT are capable of interfacing to a variety of different sensors. It is up to the program to tell the NXT what kind of sensor is
 attached to each port. Calling SetSensorType configures a sensor's type. There are 12 sensor types, each corresponding to a specific LEGO RCX or NXT sensor. A thirteenth type (IN_TYPE_NO_SENSOR) is used to indicate that no sensor has been configured. 

\par In general, a program should configure the type to match the actual sensor. If a sensor port is configured as the wrong type, the NXT may not be able to read it accurately.
\par }\pard\plain \ltrpar\s23\ql \li0\ri0\widctlpar\tx2880\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \b\f1\insrsid16589264\charrsid15019316 NBC Sensor Type\tab Meaning
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 IN_TYPE_NO_SENSOR\tab no sensor configured
\par IN_TYPE_SWITCH\tab NXT or RCX touch sensor
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1040\langfe1033\langnp1040\insrsid16589264\charrsid15019316 IN_TYPE_TEMPERATURE\tab RCX temperature sensor
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 IN_TYPE_REFLECTION\tab RCX light sensor
\par IN_TYPE_ANGLE\tab RCX rotation sensor
\par IN_TYPE_LIGHT_ACTIVE\tab NXT light sensor with light
\par IN_TYPE_LIGHT_INACTIVE\tab NXT light sensor without light
\par IN_TYPE_SOUND_DB\tab NXT sound sensor with dB scaling
\par IN_TYPE_SOUND_DBA\tab NXT sound sensor with dBA scaling
\par IN_TYPE_CUSTOM\tab Custom sensor (unused)
\par IN_TYPE_LOWSPEED\tab I2C digital sensor
\par IN_TYPE_LOWSPEED_9V\tab I2C digital sensor (9V power)
\par IN_TYPE_HISPEED\tab Highspeed sensor (unused)
\par }\pard\plain \ltrpar\s27\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 {\*\bkmkstart _Ref157568738}{\*\bkmkstart _Toc179792854}{\*\bkmkstart _Toc180913087}Table }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316  SEQ Table 
\\* ARABIC }}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1024\langfe1024\noproof\insrsid933160 10}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16589264\charrsid15019316 {\*\bkmkend _Ref157568738}. Sensor Type Constants{\*\bkmkend _Toc179792854}{\*\bkmkend _Toc180913087}
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 The NXT allows a sensor to be configured in different modes. The sensor mode determines how a sensor's raw value is processed.
 Some modes only make sense for certain types of sensors, for example IN_MODE_ANGLESTEP is useful only with rotation sensors. Call SetSensorMode to set the sensor mode. The possible modes are shown below.
\par }\pard\plain \ltrpar\s23\ql \li0\ri0\widctlpar\tx2880\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \b\f1\insrsid16589264\charrsid15019316 NBC Sensor Mode\tab Meaning
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 IN_MODE_RAW\tab raw value from 0 to 1023
\par IN_MODE_BOOLEAN\tab boolean value (0 or 1)
\par IN_MODE_TRANSITIONCNT\tab counts number of boolean transitions
\par IN_MODE_PERIODCOUNTER\tab counts number of boolean periods
\par IN_MODE_PCTFULLSCALE\tab value from 0 to 100
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1031\langfe1033\langnp1031\insrsid16589264\charrsid15019316 IN_MODE_FAHRENHEIT\tab degrees F
\par IN_MODE_CELSIUS\tab degrees C
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 IN_MODE_ANGLESTEP\tab rotation (16 ticks per revolution) 
\par }\pard\plain \ltrpar\s27\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 {\*\bkmkstart _Ref157568796}{\*\bkmkstart _Toc179792855}{\*\bkmkstart _Toc180913088}Table }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316  SEQ Table 
\\* ARABIC }}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1024\langfe1024\noproof\insrsid933160 11}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16589264\charrsid15019316 {\*\bkmkend _Ref157568796}. Sensor Mode Constants{\*\bkmkend _Toc179792855}{\*\bkmkend _Toc180913088}
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 The NXT provides a boolean conversion for all sensors - no
t just touch sensors. This boolean conversion is normally based on preset thresholds for the raw value. A "low" value (less than 460) is a boolean value of 1. A high value (greater than 562) is a boolean value of 0. This conversion can be modified: a slop
e
 value between 0 and 31 may be added to a sensor's mode when calling SetSensorMode. If the sensor's value changes more than the slope value during a certain time (3ms), then the sensor's boolean state will change. This allows the boolean state to reflect 
rapid changes in the raw value. A rapid increase will result in a boolean value of 0, a rapid decrease is a boolean value of 1.
\par Even when a sensor is configured for some other mode (i.e. IN_MODE_PCTFULLSCALE), the boolean conversion will still be carried out.
\par Each sensor has six fields that are used to define its state. The field constants are described in the following table.
\par }\pard\plain \ltrpar\s23\ql \li0\ri0\widctlpar\tx3240\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \b\f1\insrsid16589264\charrsid15019316 Sensor Field Constant\tab Meaning
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Type\tab The sensor type (see }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316  REF _Ref157568738 \\h }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid9267671\charrsid3213828 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310035003700350036003800370033003800000000000028}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid933160\charrsid15019316 Table 
}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1024\langfe1024\noproof\insrsid933160 10}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par InputMode\tab The sensor mode (see }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316  REF _Ref157568796 \\h }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9267671\charrsid3213828 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310035003700350036003800370039003600000000000009}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid933160\charrsid15019316 Table }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1024\langfe1024\noproof\insrsid933160 11}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par RawValue\tab The raw sensor value
\par NormalizedValue\tab The normalized sensor value
\par ScaledValue\tab The scaled sensor value
\par InvalidData\tab Invalidates the current sensor value
\par }\pard\plain \ltrpar\s27\ql \li0\ri0\sb120\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \ab\af0\afs20\alang1025 \ltrch\fcs0 \b\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 {\*\bkmkstart _Ref157568847}{\*\bkmkstart _Toc179792857}{\*\bkmkstart _Toc180913089}Table }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316  SEQ Table 
\\* ARABIC }}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1024\langfe1024\noproof\insrsid933160 12}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16589264\charrsid15019316 {\*\bkmkend _Ref157568847}. Sensor Field Constants{\*\bkmkend _Toc179792857}{\*\bkmkend _Toc180913089}
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetSensorType(port, const type)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Set a sensor's type, which must be one of the predefined sensor type constants. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1
}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 
) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetSensorType(IN_1, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6892520 IN}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 
_TYPE_}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6892520 SWITCH}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetSensorMode(port, const mode)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Set a sensor's mode, which should be one of the predefined sensor mode constants. A slope parameter for boolean conversion, if desired, may be added to the mo
de. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{
\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264\charrsid10633919 SetSensorMode(IN_1, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6892520 IN}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid16589264\charrsid10633919 _MODE_RAW}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 )}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264\charrsid10633919  // raw mode
\par }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetSensorMode(IN_1, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6892520 IN}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 _MODE_RAW + 10) // slope 10
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetSensorLight(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Configure the sensor on the specified port as a light sensor (active). The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 
) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetSensorLight(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetSensorSound(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Configure the sensor on the specified port as a sound sensor (dB scaling). The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 
) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetSensorSound(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetSensorTouch(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Configure the sensor on the specified port as a touch sensor. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 
) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetSensorTouch(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetSensorLowspeed(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Configure the sensor on the specified port as an I2C digital sensor (9V powered). The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 
IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 
) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetSensorLowspeed(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetSensorUltrasonic(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Configure the sensor on the specified port as an I2C digital sensor (9V powered). The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 
IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 
) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetSensorUltrasonic(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ClearSensor(const port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Clear the value of a sensor - only affects sensors that are configured to measure a cumulative quantity such as rotation or a pulse count. The port must be specified using a constant (e.g., }{
\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}
{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 ClearSensor(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ResetSensor(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Reset the value of a sensor. If the sensor type or mode has been modified then the sensor should be reset in order to ensure that values read from the sensor are valid
. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{
\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ) or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 ResetSensor(x) // x = IN_1
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetInCustomZeroOffset(const p, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Sets the custom sensor zero offset value of a sensor. The port must be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetInCustomZeroOffset(IN_1, 12)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetInCustomPercentFullScale(const p, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Sets the custom sensor percent full scale value of a sensor. The port must be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetInCustomPercentFullScale(IN_1, 100)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetInCustomActiveStatus(const p, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Sets the custom sensor active status value of a sensor. The port must be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetInCustomActiveStatus(IN_1, true)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetInDigiPinsDirection(const p, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Sets the digital pins direction value of a sensor. The port must be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 
). A value of 1 sets the direction to output. A value of 0 sets the direction to input.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetInDigiPinsDirection(IN_1, 1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetInDigiPinsStatus(const p, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Sets the digital pins status value of a sensor. The port must be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_3}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetInDigiPinsStatus(IN_1, false)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 SetInDigiPinsOutputLevel(const p, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Sets the digital pins output level value of a sensor. The port must be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 SetInDigiPinsOutputLevel(IN_1, 100)
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid4133659\charrsid4133659 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4864438 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid4864438 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid4864438 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4864438 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 SensorInfo}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4864438 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Sensor Information}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4864438 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 sensor information}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4864438 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4864438\charrsid9534744 3.2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4864438 .2}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4864438\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4864438 Sensor Information}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4864438\charrsid9534744 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16589264\charrsid15019316 There are a number of values that can be inspected for each sensor. For all of these values the sensor must be specified by a constant port value (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid16589264 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , }{
\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16589264\charrsid15019316 ) unless otherwise specified.
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ReadSensor(n, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the processed sensor reading for a sensor on port n, where n is 0, 1, 2, or 3 (or a sensor port name constant). A variable whose value is the desired sensor port may also be used.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 ReadSensor(IN_1, x) // read sensor 1
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 ReadSensorUS(n, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return t
he processed sensor reading for an ultrasonic sensor on port n, where n is 0, 1, 2, or 3 (or a sensor port name constant). Since an ultrasonic sensor is an I2C digital sensor its value cannot be read using the standard ReadSensor(n, result) value. A varia
ble whose value is the desired sensor port may also be used.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 ReadSensorUS(IN_4, dist) // read sensor 4
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 GetInSensorBoolean(const n, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the boolean value of a sensor on port n, which must be 0, 1, 2, or 3 (or a sensor port name constan
t). Boolean conversion is either done based on preset cutoffs, or a slope parameter specified by calling }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16589264 SetSensorMode}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 .

\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 GetInSensorBoolean(IN_1, bvalue)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 GetInCustomZeroOffset(const p, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the custom sensor zero offset value of a sensor on port p, which must be 0, 1, 2, or 3 (or a sensor port name constant).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 GetInCustomZeroOffset(IN_1, zoValue)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 GetInCustomPercentFullScale(const p, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the custom sensor percent full scale value of a sensor on port p, which must be 0, 1, 2, or 3 (or a sensor port name constant).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 GetInCustomPercentFullScale(IN_1, value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 GetInCustomActiveStatus(const p, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the custom sensor active status value of a sensor on port p, which must be 0, 1, 2, or 3 (or a sensor port name constant).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 GetInCustomActiveStatus(IN_1, value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 GetInDigiPinsDirection(const p, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the digital pins direction value of a sensor on port p, which must be 0, 1, 2, or 3 (or a sensor port name constant).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 GetInDigiPinsDirection(IN_1, value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 GetInDigiPinsStatus(const p, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the digital pins status value of a sensor on port p, which must be 0, 1, 2, or 3 (or a sensor port name constant).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 GetInDigiPinsStatus(IN_1, value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 GetInDigiPinsOutputLevel(const p, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16589264 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16589264\charrsid15019316 Return the digital pins output level value of a sensor on port p, which must be 0, 1, 2, or 3 (or a sensor port name constant).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16589264 GetInDigiPinsOutputLevel(IN_1, value)
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid12736641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid12736641 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid2562807 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid2562807 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid2562807 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2562807 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 InputIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2562807 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Input Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2562807 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
input module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2562807 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid2562807\charrsid9534744 3.2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2562807 .3}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2562807\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2562807 IOMAP Offsets}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \cs45\insrsid2562807\charrsid9534744 
\par }\pard\plain \ltrpar\ql \li720\ri0\widctlpar\tx4320\tx6480\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid10497937 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \b\f1\insrsid10497937\charrsid12134570 Input Module Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid14036520 Value}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\b\f1\insrsid10497937\charrsid12134570 \tab Size
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10497937\charrsid12134570 InputOffsetCustomZeroOffset(p)\tab (((p)*20)+0)\tab 2
\par InputOffsetADRaw(p)\tab (((p)*20)+2)\tab 2
\par InputOffsetSensorRaw(p)\tab (((p)*20)+4)\tab 2
\par InputOffsetSensorValue(p)\tab (((p)*20)+6)\tab 2
\par InputOffsetSensorType(p)\tab (((p)*20)+8)\tab 1
\par InputOffsetSensorMode(p)\tab (((p)*20)+9)\tab 1
\par InputOffsetSensorBoolean(p)\tab (((p)*20)+10)\tab 1
\par InputOffsetDigiPinsDir(p)\tab (((p)*20)+11)\tab 1
\par InputOffsetDigiPinsIn(p)\tab (((p)*20)+12)\tab 1
\par InputOffsetDigiPinsOut(p)\tab (((p)*20)+13)\tab 1
\par InputOffsetCustomPctFullScale(p)\tab (((p)*20)+14)\tab 1
\par InputOffsetCustomActiveStatus(p)\tab (((p)*20)+15)\tab 1
\par InputOffsetInvalidData(p)\tab (((p)*20)+16)\tab 1
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5918628 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2562807 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5918628 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5918628 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 Outputs}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5918628 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Output Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5918628 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 output module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5918628 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5918628\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5918628 3}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid5918628\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5918628 Output Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5918628\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid6229429 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8080230\charrsid12134570 The NXT output module encompasses all the motor outputs.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid6229429\charrsid12134570 
\par }\pard \ltrpar\ql \li360\ri0\sb120\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid8080230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid8080230\charrsid12134570 Module Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546 
\tab Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid8080230\charrsid12134570 
\par }\pard \ltrpar\ql \li360\ri0\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin360\itap0\pararsid8080230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 OutputModuleName\tab "Output.mod"
\par OutputModuleID\tab 0x00020001
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8080230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Nearly all of the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570  API functions dealing with outputs take either a single output or a se
t of outputs as their first argument. Depending on the function call, the output or set of outputs may be a constant or a variable containing an appropriate output port value. The constants OUT_A, OUT_B, and OUT_C are used to identify the three outputs. U
nlike NQC, adding individual outputs together does not combine multiple outputs. Instead, the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
 API provides predefined combinations of outputs: OUT_AB, OUT_AC, OUT_BC, and OUT_ABC. Manually combining outputs involves creating an array and adding two or more of the three individual output constants to the array.
\par Power levels can range 0 (lowest) to 100 (highest). Negative power levels reverse the direction of rotation (i.e., forward at a power level of -100 actually means reverse at a power level of 100).
\par The outputs each have several fields that define the current state of the output port. These fields are defined in the table below.
\par }\pard \ltrpar\ql \fi-5040\li5040\ri0\sb120\widctlpar\tx1440\tx2160\tx3600\tx5040\wrapdefault\faauto\adjustright\rin0\lin5040\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid8080230\charrsid12134570 Field Constant\tab Type\tab Access
\tab Range\tab Meaning
\par }\pard \ltrpar\ql \fi-5040\li5040\ri0\widctlpar\tx1440\tx2160\tx3600\tx5040\wrapdefault\faauto\adjustright\rin0\lin5040\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 UpdateFlags\tab ubyte\tab Read/Write\tab 
0, 255\tab Use UF_UPDATE_MODE, UF_UPDATE_SPEED, UF_UPDATE_
TACHO_LIMIT, and UF_UPDATE_PID_VALUES along with other fields to commit changes to the state of outputs. Set the appropriate flags after setting one or more of the output fields in order for the changes to actually go into affect.
\par OutputMode\tab ubyte\tab Read/Write\tab 0, 255\tab 
The OUT_MODE_MOTORON bit must be set in order for power to be applied to the motors. Add OUT_MODE_BRAKE to enable electronic braking. Braking means that the output voltage is not allowed to float between active PWM pulses. It improves the accurac
y of motor output but uses more battery power.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
To use motor regulation include OUT_MODE_REGULATED in the OutputMode value. Use UF_UPDATE_MODE with UpdateFlags to commit changes to this field.
\par Power\tab sbyte\tab Read/ Write\tab -100, 100\tab Specify the power level of
 the output. The absolute value of Power is a percentage of the full power of the motor. The sign of Power controls the rotation direction. Positive values tell the firmware to turn the motor forward, while negative values turn the motor backward. Use UF_
UPDATE_POWER with UpdateFlags to commit changes to this field.
\par ActualSpeed\tab sbyte\tab Read\tab -100, 100\tab Return the percent of full power the firmware is applying to the output. This may vary from the Power value when auto-regulation code in the firmware responds to a load on the output.
\par Tach}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 oCount\tab slong\tab Read\tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 signed long\tab 
Return the internal position counter value for the specified output. The internal count is reset automatically when a new goal is set using the TachoLimit and the UF_UPDATE_TACHO_LIMIT flag.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Set the UF_UPDATE_RESET_COUNT flag in UpdateFlags to reset TachoCount and cancel any TachoLimit.

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 The sign of TachoCount indicates the motor rotation direction.
\par TachoLimit\tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 ulong\tab Read/ Write\tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 unsigned long\tab Specify the number of degrees the motor should rotate.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Use UF_UPDATE_TACHO_LIMIT with the UpdateFlags field to commit changes to the TachoLimit. 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
The value of this field is a relative distance from the current motor position at the moment when the UF_UPDATE_TACHO_LIMIT flag is processed.
\par RunState\tab ubyte\tab Read/ Write\tab 0..255\tab 
Use this field to specify the running state of an output. Set the RunState to OUT_RUNSTATE_RUNNING to enable power to any output. Use OUT_RUNSTATE_RAMPUP to enable automatic ramping to a new Power level greater than the current Pow
er level. Use OUT_RUNSTATE_RAMPDOWN to enable automatic ramping to a new Power level less than the current Power level.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
Both the rampup and rampdown bits must be used in conjunction with appropriate TachoLimit and Power values. In this case the firmwar
e smoothly increases or decreases the actual power to the new Power level over the total number of degrees of rotation specified in TachoLimit.
\par TurnRatio\tab sbyte\tab Read/ Write\tab -100, 100\tab Use this field to specify a proportional turning ratio. This field must be
 used in conjunction with other field values: OutputMode must include OUT_MODE_MOTORON and OUT_MODE_REGULATED, RegMode must be set to OUT_REGMODE_SYNC, RunState must not be OUT_RUNSTATE_IDLE, and Speed must be non-zero. 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 There are only three valid comb
inations of left and right motors for use with TurnRatio: OUT_AB, OUT_BC, and OUT_AC. In each of these three options the first motor listed is considered to be the left motor and the second motor is the right motor, regardless of the physical configuratio
n of the robot.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
Negative TurnRatio values shift power toward the left motor while positive values shift power toward the right motor. An absolute value of 50 usually results in one motor stopping. An absolute value of 100 usually results in two motors t
urning in opposite directions at equal power.
\par RegMode\tab ubyte\tab Read/ Write\tab 0..255\tab This field specifies the regulation mode to use with the specified port(s). It is ignored if the OUT_MODE_REGULATED bit is not set in the OutputMode field. Unlike the OutputMode
 field, RegMode is not a bitfield. Only one RegMode value can be set at a time. 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
Speed regulation means that the firmware tries to maintain a certain speed based on the Power setting. The firmware adjusts the PWM duty cycle if the motor is affected by 
a physical load. This adjustment is reflected by the value of the ActualSpeed property. When using speed regulation, do not set Power to its maximum value since the firmware cannot adjust to higher power levels in that situation.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Synchronization means 
the firmware tries to keep two motors in synch regardless of physical loads. Use this mode to maintain a straight path for a mobile robot automatically. Also use this mode with the TurnRatio property to provide proportional turning. 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Set OUT_REGMODE_SY
NC on at least two motor ports in order for synchronization to function. Setting OUT_REGMODE_SYNC on all three motor ports will result in only the first two (OUT_A and OUT_B) being synchronized.
\par Overload\tab ubyte\tab Read\tab 0..1\tab This field will have a value of 1 (true) if the firmware speed regulation cannot overcome a physical load on the motor. In other words, the motor is turning more slowly than expected. 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 If the motor speed can be maintained in spite of loading then this field value is zero (false). 

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 In
 order to use this field the motor must have a non-idle RunState, an OutputMode which includes OUT_MODE_MOTORON and OUT_MODE_REGULATED, and its RegMode must be set to OUT_REGMODE_SPEED.
\par RegPValue\tab ubyte\tab Read/ Write\tab 0..255\tab This field specifies the proportional term used in the internal proportional-integral-derivative (PID) control algorithm.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Set UF_UPDATE_PID_VALUES to commit changes to RegPValue, RegIValue, and RegDValue simultaneously.

\par RegIValue\tab ubyte\tab Read/ Write\tab 0..255\tab This field specifies the integral term used in the internal proportional-integral-derivative (PID) control algorithm.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Set UF_UPDATE_PID_VALUES to commit changes to RegPValue, RegIValue, and RegDValue simultaneously.

\par RegDValue\tab ubyte\tab Read/ Write\tab 0..255\tab This field specifies the derivative term used in the internal proportional-integral-derivative (PID) control algorithm.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Set UF_UPDATE_PID_VALUES to commit changes to RegPValue, RegIValue, and RegDValue simultaneously.

\par BlockTachoCount\tab slong\tab Read\tab full range of signed long\tab Return the block-relative position counter value for the specified port.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Refer to the UpdateFlags description for information about how to use block-relative position counts.

\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Set the UF_UPDATE_RESET_BLOCK_COUNT flag in UpdateFlags to request that the firmware re
set the BlockTachoCount. 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
The sign of BlockTachoCount indicates the direction of rotation. Positive values indicate forward rotation and negative values indicate reverse rotation. Forward and reverse depend on the orientation of the motor.
\par Rotatio}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 nCount\tab slong\tab Read\tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 signed long\tab 
Return the program-relative position counter value for the specified port.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
Refer to the UpdateFlags description for information about how to use program-relative position counts.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 Set the UF_UPDATE_RESET_ROTATION_COUNT flag 
in UpdateFlags to request that the firmware reset the RotationCount. 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3161436\charrsid12134570 \tab \tab \tab \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
The sign of RotationCount indicates the direction of rotation. Positive values indicate forward rotation and negative values indicate reverse rotation. Forward and reverse depend on the orientation of the motor.
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8080230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 Valid UpdateFlags values are described in the following table.}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
\par }\pard \ltrpar\ql \fi-4320\li4320\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin4320\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid13959393\charrsid12134570 UpdateFlags Constants\tab Meaning
\par }\pard \ltrpar\ql \fi-4320\li4320\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin4320\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 UF_UPDATE_MODE\tab 
Commits changes to the OutputMode output property
\par UF_UPDATE_SPEED\tab Commits changes to the Power output property
\par UF_UPDATE_TACHO_LIMIT\tab Commits changes to the TachoLimit output property
\par UF_UPDATE_RESET_COUNT\tab Resets all rotation counters, cancels the current goal, and resets the rotation error-correction system
\par UF_UPDATE_PID_VALUES\tab Commits changes to the PID motor regulation properties
\par UF_UPDATE_RESET_BLOCK_COUNT\tab Resets the block-relative rotation counter
\par UF_UPDATE_RESET_ROTATION_COUNT\tab Resets the program-relative rotation counter
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 Valid OutputMode values are described in the following table.
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tx2880\tx3960\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10774658 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid13959393\charrsid12134570 OutputMode Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\b\f1\insrsid1457546 \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid14036520 Value}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid13959393\charrsid12134570 \tab Meaning
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\tx2880\tx3960\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10774658 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 OUT_MODE_COAST\tab 0x00\tab 
No power and no braking so motors rotate freely
\par OUT_MODE_MOTORON\tab 0x01\tab Enables PWM power to the outputs given the Power setting
\par OUT_MODE_BRAKE\tab 0x02\tab Uses electronic braking to outputs
\par OUT_MODE_REGULATED\tab 0x04\tab Enables active power regulation using the RegMode value
\par OUT_MODE_REGMETHOD\tab 0xf0\tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8080230\charrsid12134570 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 Valid RunState values are described in the following table.
\par }\pard \ltrpar\ql \fi-4320\li4320\ri0\sb120\widctlpar\tx3240\tx4320\wrapdefault\faauto\adjustright\rin0\lin4320\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid13959393\charrsid12134570 RunState Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\b\f1\insrsid1457546 \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid14036520 Value}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid13959393\charrsid12134570 \tab Meaning
\par }\pard \ltrpar\ql \fi-4320\li4320\ri0\widctlpar\tx3240\tx4320\wrapdefault\faauto\adjustright\rin0\lin4320\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 OUT_RUNSTATE_IDLE\tab 0x00\tab Disable all power to motors.

\par OUT_RUNSTATE_RAMPUP\tab 0x10\tab Enable ramping up from a current Power to a new (higher) Power over a specified TachoLimit goal.
\par OUT_RUNSTATE_RUNNING\tab 0x20\tab Enable power to motors at the specified Power level.
\par OUT_RUNSTATE_RAMPDOWN\tab 0x40\tab Enable ramping down from a current Power to a new (lower) Power over a specified TachoLimit goal.
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 Valid RegMode values are described in the following table.
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tx3240\tx4320\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid13959393\charrsid12134570 RegMode Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\b\f1\insrsid1457546 \tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid14036520 Value}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid13959393\charrsid12134570 \tab Meaning
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\tx3240\tx4320\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13959393 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13959393\charrsid12134570 OUT_REGMODE_IDLE\tab 0x00\tab No regulation
\par OUT_REGMODE_SPEED\tab 0x01\tab Regulate a motor's speed (Power)
\par OUT_REGMODE_SYNC\tab 0x02\tab Synchronize the rotation of two motors
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid11207412 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid11207412 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid11207412 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11207412 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 OutputsConvenience}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11207412 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Convenience Calls}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11207412 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 convenience calls}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11207412 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11207412\charrsid9534744 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11207412 3.1}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11207412\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11207412 Convenience Calls}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11207412\charrsid9534744 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11479821 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11479821\charrsid12134570 Since control of outputs is such a common feature of programs, a number of convenience functions are provided that make 
it easy to work with the outputs. It should be noted that most of these commands do not provide any new functionality above lower level calls described in the following section. They are merely convenient ways to make programs more concise.
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11479821 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11479821\charrsid12134570 The Ex versions
 of the motor functions use special reset constants. They are defined in the following table. The Var versions of the motor functions require that the outputs argument be a variable while the non-Var versions require that the outputs argument be a constan
t.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8270354 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid8270354\charrsid12134570 Reset Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546 
\tab }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid10774658 Value}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid8270354\charrsid12134570 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8270354 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 RESET_NONE\tab 0x00
\par RESET_COUNT\tab 0x08
\par RESET_BLOCK_COUNT\tab 0x20
\par RESET_ROTATION_COUNT\tab 0x40
\par RESET_BLOCKANDTACHO\tab 0x28
\par RESET_ALL\tab 0x68
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8270354 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid8270354\charrsid12134570 {\*\xmlopen\xmlns2{\factoidname PlaceName}}
{\*\xmlopen\xmlns2{\factoidname place}}Output{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceType}}Port{\*\xmlclose}{\*\xmlclose} Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid10774658 \tab Value}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\b\f1\insrsid8270354\charrsid12134570 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8270354 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 OUT_A\tab 0x00
\par OUT_B\tab 0x01
\par OUT_C\tab 0x02
\par OUT_AB\tab 0x03
\par OUT_AC\tab 0x04
\par OUT_BC\tab 0x05
\par OUT_ABC\tab 0x06
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 Off(outputs)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Turn the specified outputs off (with braking). Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 Off(OUT_A) // turn off output A
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OffEx(outputs, const reset)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Turn the specified outputs off (with braking). Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . The reset parameter controls whether any of 
the three position counters are reset. It must be a constant. Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OffEx(OUT_A, RESET_NONE) // turn off output A
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 Coast(outputs)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Turn off the specified outputs, making them coast to a stop. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 Coast(OUT_A) // coast output A
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 CoastEx(outputs, const reset)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Turn off the specified outputs, making them coast to a stop. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . The reset parameter controls whether any of the three position cou
nters are reset. It must be a constant. Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 CoastEx(OUT_A, RESET_NONE) // coast output A
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 Float(outputs)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Make outputs float. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . Float is an alias for Coast.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 Float(OUT_A) // float output A
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnFwd(outputs, pwr)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Set outputs to forward direction and turn them on. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnFwd(OUT_A, 75)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnFwdEx(outputs, pwr, const reset)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Set outputs to forward direction and turn them on. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
. The reset parameter controls whether any of the three position counters are reset. It must be a constant. Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnFwdEx(OUT_A, 75, RESET_NONE)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnRev(outputs, pwr)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Set outputs to reverse direction and turn them on. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnRev(OUT_A, 75)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnRevEx(outputs, pwr, const reset)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Set outputs to reverse direction and turn them on. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . The reset parameter controls whether any of the three position counters are reset. It must be a constant. 
Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnRevEx(OUT_A, 75, RESET_NONE)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnFwdReg(outputs, pwr, regmode)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Run the specified outputs forward using the specified regulation mode. Outputs can be a constant or a variable containing the desired output ports.
 Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . Valid regulation modes are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnFwdReg(OUT_A, 75, OUT_REGMODE_SPEED) // regulate speed
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnFwdRegEx(outputs, pwr, regmode, const reset)\tab 
Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Run the specif
ied outputs forward using the specified regulation mode. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . Valid regulation modes are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
. The reset parameter controls whether any of the three position counters are reset. It must be a constant. Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnFwdRegEx(OUT_A, 75, OUT_REGMODE_SPEED, RESET_NONE)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnRevReg(outputs, pwr, regmode)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Run the specified outputs in reverse using the s
pecified regulation mode. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8270354\charrsid12134570 . Valid regulation modes are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10420298\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnRevReg(OUT_A, 75, OUT_REGMODE_SPEED) // regulate speed
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnRevRegEx(outputs, pwr, regmode, const reset)\tab 
Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
Run the specified outputs in reverse using the specified regulation mode. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3497359\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . Valid regulation modes are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3497359\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8270354\charrsid12134570 . The reset parameter controls whether any of the three position counters are reset. It must be a constant. Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3497359\charrsid12134570 above}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnRevRegEx(OUT_A, 75, OUT_REGMODE_SPEED, RESET_NONE)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnFwdSync(outputs, pwr, turnpct)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
Run the specified outputs forward with regulated synchronization using the specified turn ratio. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid3497359\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnFwdSync(OUT_AB, 75, -100) // spin right
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnFwdSyncEx(outputs, pwr, turnpct, const reset)\tab 
Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Run the specified outputs forward with regulated synchronization using the specified turn ratio. Outputs can be a constant or a variable containing the desired o
utput ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3497359\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
. The reset parameter controls whether any of the three position counters are reset. It must be a constant. Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid3497359\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnFwdSyncEx(OUT_AB, 75, 0, RESET_NONE)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnRevSync(outputs, pwr, turnpct)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
Run the specified outputs in reverse with regulated synchronization using the specified turn ratio. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnRevSync(OUT_AB, 75, -100) // spin left
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 OnRevSyncEx(outputs, pwr, turnpct, const reset)\tab 
Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Run the specified outputs in reverse with regulated synchronization using the specified turn ratio. Outputs can be a constant or a variable containing t
he desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
. The reset parameter controls whether any of the three position counters are reset. It must be a constant. Valid reset values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 OnRevSyncEx(OUT_AB, 75, -100, RESET_NONE) // spin left
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 RotateMotor(outputs, pwr, angle)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
Run the specified outputs forward for the specified number of degrees. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 RotateMotor(OUT_A, 75, 45) // forward 45 degrees
\par RotateMotor(OUT_A, -75, 45) // reverse 45 degrees
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 RotateMotorPID(outputs, pwr, angle, p, i, d)\tab 
Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Run the specified outputs forward for the specified number of degrees. Outputs can be a constant o
r a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
. Also specify the proportional, integral, and derivative factors used by the firmware's PID motor control algorithm.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 RotateMotorPID(OUT_A, 75, 45, 20, 40, 100)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 RotateMotorEx(outputs, pwr, angle, turnpct, sync, stop)
\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Run the specified outputs forward for the specified number of degrees. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are d
efined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
. If a non-zero turn percent is specified then sync must be set to true or no turning will occur. Specify whether the motor(s) should brake at the end of the rotation using the stop parameter.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 RotateMotorEx(OUT_AB, 75, 360, 50, true, true) 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 Rot
ateMotorExPID(outputs, pwr, angle, turnpct, sync, stop, p, i, d)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 
Run the specified outputs forward for the specified number of degrees. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 . If a non-zero turn percent is specified then sync must b
e set to true or no turning will occur. Specify whether the motor(s) should brake at the end of the rotation using the stop parameter. Also specify the proportional, integral, and derivative factors used by the firmware's PID motor control algorithm.

\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 RotateMotorExPID(OUT_AB, 75, 360, 50, true, true, 30, 50, 90) 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 ResetTachoCount(outputs)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Reset the tachometer count and tachometer limit goal for the specified outputs. Outputs can be a constant or a variable containing the desired output ports. Predefi
ned output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 ResetTachoCount(OUT_AB)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 ResetBlockTachoCount(outputs)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Reset the block-relative position counter for the specified outputs. Outputs 
can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .

\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 ResetBlockTachoCount(OUT_AB)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid3286511 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 ResetRotationCount(outputs)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Reset the program-relative position counter for the specified outputs
. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3286511 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid3286511 ResetRotationCount(OUT_AB)
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8270354 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid8270354\charrsid12134570 ResetAllTachoCounts(outputs)\tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 Reset all three position counters and reset the current tach
ometer limit goal for the specified outputs. Outputs can be a constant or a variable containing the desired output ports. Predefined output port constants are defined }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid144521\charrsid12134570 above}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid8270354\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid8270354 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8270354\charrsid8270354 ResetAllTachoCounts(OUT_AB)}{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid8270354 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4533372 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid4533372 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid4533372 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4533372 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 OutputIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4533372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Output Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4533372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
output module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4533372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid4533372\charrsid9534744 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4533372 3.2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4533372\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4533372 IOMap Offsets}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \cs45\insrsid4533372\charrsid9534744 
\par }\pard\plain \ltrpar\ql \li720\ri0\widctlpar\tx4320\tx6480\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1583308 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\b\f1\insrsid1583308\charrsid12134570 Output Module Offsets}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1583308\charrsid12134570 \tab Size}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1583308 

\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\tx6480\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4533372 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4533372\charrsid4533372 OutputOffsetTachoCount(p)\tab (((p)*32)+0)\tab 4
\par OutputOffsetBlockTachoCount(p)\tab (((p)*32)+4)\tab 4
\par OutputOffsetRotationCount(p)\tab (((p)*32)+8)\tab 4
\par OutputOffsetTachoLimit(p)\tab (((p)*32)+12)\tab 4
\par OutputOffsetMotorRPM(p)\tab (((p)*32)+16)\tab 2
\par OutputOffsetFlags(p)\tab (((p)*32)+18)\tab 1
\par OutputOffsetMode(p)\tab (((p)*32)+19)\tab 1
\par OutputOffsetSpeed(p)\tab (((p)*32)+20)\tab 1
\par OutputOffsetActualSpeed(p)\tab (((p)*32)+21)\tab 1
\par OutputOffsetRegPParameter(p)\tab (((p)*32)+22)\tab 1
\par OutputOffsetRegIParameter(p)\tab (((p)*32)+23)\tab 1
\par OutputOffsetRegDParameter(p)\tab (((p)*32)+24)\tab 1
\par OutputOffsetRunState(p)\tab (((p)*32)+25)\tab 1
\par OutputOffsetRegMode(p)\tab (((p)*32)+26)\tab 1
\par OutputOffsetOverloaded(p)\tab (((p)*32)+27)\tab 1
\par OutputOffsetSyncTurnParameter(p)\tab (((p)*32)+28)\tab 1
\par OutputOffsetPwnFreq\tab 96\tab 1
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid4533372\charrsid4533372 Table 23. Output Module IOMap Offsets
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10160526 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10160526\charrsid12134570 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid336372 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid336372 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid336372 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid336372 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 Sound}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid336372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Sound Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid336372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 sound module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid336372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid336372\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid336372 4}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid336372\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid336372 Sound Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid336372\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7746146 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7746146\charrsid12134570 The NXT sound module encompasses all sound output features. The NXT provides support for playing basic tones as well as two different types of files. 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7746146 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid7746146\charrsid12134570 Module Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546 
\tab Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid7746146\charrsid12134570 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid7746146 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146\charrsid12134570 SoundModuleName\tab "Sound.mod"
\par SoundModuleID\tab 0x00080001
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7746146 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146\charrsid12134570 
Sound files (.rso) are like .wav files. They contain thousands of sound samples that digitally represent an analog waveform. With sounds files the NXT can speak or play music or make just about any sound imaginable.
\par Melody files are like {\*\xmlopen\xmlns2{\factoidname place}}MIDI{\*\xmlclose} files. T
hey contain multiple tones with each tone being defined by a frequency and duration pair. When played on the NXT a melody file sounds like a pure sine-wave tone generator playing back a series of notes. While not as fancy as sound files, melody files are 
usually much smaller than sound files.
\par When a sound or a file is played on the NXT, execution of the program does not wait for the previous playback to complete. To play multiple tones or files sequentially it is necessary to wait for the previous tone or f
ile playback to complete first. This can be done via the Wait API function or by using the sound state value within a while loop.
\par The }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146\charrsid12134570  API defines frequency and duration constants which may be used in calls to PlayTone or PlayToneEx. Frequency constants
 start with TONE_A3 (the 'A' pitch in octave 3) and go to TONE_B7 (the 'B' pitch in octave 7). Duration constants start with MS_1 (1 millisecond) and go up to MIN_1 (60000 milliseconds) with several constants in between. See NBCCommon.h for the complete l
ist.
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5264820 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid5264820 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5264820 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5264820 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 SoundHighLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5264820 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Sound Module High Level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5264820 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
sound module high level functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5264820 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid5264820\charrsid9534744 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5264820 4.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5264820\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5264820 High-level functions}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \cs45\insrsid5264820\charrsid9534744 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7746146 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af0\afs24 
\ltrch\fcs0 \b\f1\fs24\insrsid7746146\charrsid12134570 PlayTone(frequency, duration)\tab Function
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12517803 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146\charrsid12134570 
Play a single tone of the specified frequency and duration. The frequency is in Hz. The duration is in 1000ths of a second. All parameters may be any valid expression.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid14419765 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 PlayTone(440, 500)\tab // Play 'A' for one half second
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7746146 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid7746146\charrsid12134570 PlayToneEx(frequency, duration, volume, bLoop)\tab 
Function
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12517803 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146\charrsid12134570 Play a single tone of the specified frequency, duration, and
 volume. The frequency is in Hz. The duration is in 1000ths of a second. Volume should be a number from 0 (silent) to 4 (loudest). All parameters may be any valid expression.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid14419765 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 PlayToneEx(440, 500, 2, }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid8870507 FALSE}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 )
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7746146 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid7746146\charrsid12134570 PlayFile(filename)\tab Function
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12517803 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146\charrsid12134570 
Play the specified sound file (.rso) or a melody file (.rmd). The filename may be any valid string expression.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid14419765 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8870507 PlayFile('}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 
startup.rso}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8870507 '}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 )
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7746146 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid7746146\charrsid12134570 PlayFileEx(filename, volume, bLoop)\tab Function
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12517803 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146\charrsid12134570 
Play the specified sound file (.rso) or a melody file (.rmd). The filename may be any valid string expression. Volume should be a number from 0 (silent) to 4 (loudest). bLoop is a boolean value indicating whether to repeatedly play the file.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid14419765 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8870507 PlayFileEx('}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 
startup.rso}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8870507 '}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 , 3, }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid8870507 TRUE}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7746146\charrsid14419765 
)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9070135 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9070135 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid9070135 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9070135 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 SoundLowLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9070135 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Sound Module Low Level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9070135 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
sound module low level functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9070135 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid9070135\charrsid9534744 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9070135 4.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14764198 2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9070135\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid6761662 L}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9070135 ow-level functions}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9070135\charrsid9534744 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12990023 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7746146\charrsid12134570 Valid sound flags constants are listed in the following table.
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx2709\tx4059\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12990023 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0\afs22 \ltrch\fcs0 \b\f1\fs22\insrsid12990023\charrsid12134570 Sound Flags Constants\tab Read/Write\tab Meaning
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx2709\tx4059\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12990023 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid12990023\charrsid12134570 SOUND_FLAGS_IDLE\tab Read\tab Sound is idle

\par SOUND_FLAGS_UPDATE\tab Write\tab Make changes take effect
\par SOUND_FLAGS_RUNNING\tab Read\tab Processing a tone or file
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12990023 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7746146\charrsid12134570 Valid sound state constants are listed in the following table.
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx3060\tx4680\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6761662 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1\afs22 \ltrch\fcs0 \b\f1\fs22\insrsid6761662\charrsid6761662 {\*\xmlopen\xmlns2{\factoidname PlaceType}}{\*\xmlopen\xmlns2{\factoidname place}}Sound{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceType}}State{\*\xmlclose}{\*\xmlclose}
 Constants\tab Read/Write\tab Meaning
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3060\tx4680\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6761662 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\fs20\insrsid6761662\charrsid6761662 SOUND_STATE_IDLE\tab Read\tab 
Idle, ready for start sound
\par SOUND_STATE_FILE\tab Read\tab Processing file of sound/melody data
\par SOUND_STATE_TONE\tab Read\tab Processing play tone request
\par SOUND_STATE_STOP\tab Write\tab Stop sound immediately and close hardware
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12990023 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7746146\charrsid12134570 Valid sound mode constants are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx2700\tx3960\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16654739 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1\afs22 \ltrch\fcs0 \b\f1\fs22\insrsid16654739\charrsid16654739 Sound Mode Constants\tab Read/Write\tab Meaning
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx2700\tx3960\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16654739 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\fs20\insrsid16654739\charrsid16654739 SOUND_MODE_ONCE\tab Read\tab Only play file once

\par SOUND_MODE_LOOP\tab Read\tab Play file until writing SOUND_STATE_STOP into State.
\par SOUND_MODE_TONE\tab Read\tab Play tone specified in Frequency for Duration milliseconds.
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12990023 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7746146\charrsid12134570 Miscellaneous sound constants are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7746146 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tx2880\tx4320\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16654739 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid16654739\charrsid16654739 Misc. Sound Constants\tab Value\tab Meaning
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\tx2880\tx4320\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16654739 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16654739\charrsid16654739 FREQUENCY_MIN\tab 220\tab Minimum frequency in Hz.
\par FREQUENCY_MAX\tab 14080\tab Maximum frequency in Hz.
\par SAMPLERATE_MIN\tab 2000\tab Minimum sample rate supported by NXT
\par SAMPLERATE_DEFAULT\tab 8000\tab Default sample rate
\par SAMPLERATE_MAX\tab 16000\tab Maximum sample rate supported by NXT}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10174626\charrsid16654739 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 {\*\bkmkstart _Toc179361864}GetSoundState(out state, out flags)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Return the current sound state. Valid sound state values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10174626 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 
. Valid sound flags values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10174626 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 GetSoundState(state, flags)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundState(state, flags, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Set the current sound module state. Valid sound state values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10174626 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 
. Valid sound flags values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10174626 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundState(SOUND_STATE_STOP, SOUND_FLAGS_UPDATE, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundFlags(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Set the current sound flags. Valid sound flags values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid14764198 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundFlags(SOUND_FLAGS_UPDATE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundModuleState(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Set the current sound module state. Valid sound state values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid14764198 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundState(SOUND_STATE_STOP)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 GetSoundMode(out mode)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Return the current sound mode. Valid sound mode values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid14764198 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 GetSoundMode(mode)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundMode(n)\tab Function
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundMode(SOUND_MODE_ONCE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 GetSoundFrequency(out freq)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Return the current sound frequency.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 GetSoundFrequency(freq)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundFrequency(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Set the current sound frequency.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundFrequency(440)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 GetSoundDuration(out duration)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Return the current sound duration.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 GetSoundDuration(duration)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundDuration(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Set the current sound duration.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundDuration(500)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 GetSoundSampleRate(out rate)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Return the current sound sample rate.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 GetSoundSampleRate(rate)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundSampleRate(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Set the current sound sample rate.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundSampleRate(4000)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 GetSoundVolume(out volume)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Return the current sound volume.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 GetSoundVolume(volume)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 SetSoundVolume(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7346034 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7346034\charrsid15019316 Set the current sound volume.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7346034 SetSoundVolume(3)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14764198 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid14764198 {\*\bkmkend _Toc179361864}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14764198 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14764198 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 SoundIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14764198 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Sound Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14764198 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 sound module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14764198 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14764198\charrsid9534744 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14764198 4.3}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14764198\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14764198 IOMap Offsets}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14764198\charrsid9534744 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx2654\tx3554\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14764198 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid6629879\charrsid12134570 Sound Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid6629879\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3240\tx5040\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14764198 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid6629879\charrsid12134570 SoundOffsetFreq\tab 0\tab 2
\par SoundOffsetDuration\tab 2\tab 2
\par SoundOffsetSampleRate\tab 4\tab 2
\par SoundOffsetSoundFilename\tab 6\tab 20
\par SoundOffsetFlags\tab 26\tab 1
\par SoundOffsetState\tab 27\tab 1
\par SoundOffsetMode\tab 28\tab 1
\par SoundOffsetVolume\tab 29\tab 1
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2501938 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid7098678\charrsid7542145 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14764198 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14698202 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 IOCtrl}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
IOCtrl Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 ioctrl module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14698202\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14698202 5}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid14698202\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14698202 IOCtrl Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14698202\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11235870 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10958382\charrsid12134570 The NXT ioctrl module encompasses low-level communication between the two processors that control the NXT. The }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10958382\charrsid12134570  API exposes two functions that are part of this module.
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid7346034 PowerDown}{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid10958382\charrsid12134570 \tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10958382\charrsid12134570 Turn off the NXT immediately.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11235870 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7346034 PowerDown}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid10958382\charrsid11235870 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11235870 {\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f1\fs24\insrsid7346034 RebootInFirmwareMode}{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 
\b\f1\fs24\insrsid10958382\charrsid12134570 \tab Function
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10958382\charrsid12134570 Reboot the NXT in SAMBA or firmware download mode. This function is not likely to be used in a normal }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid10958382\charrsid12134570  program.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11235870 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid7346034 RebootInFirmwareMode}{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\insrsid10958382\charrsid11235870 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid10242976 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid14764198 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid10242976 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10242976 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 IOCtrlIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10242976 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
IOCtrl Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10242976 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
ioctrl module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10242976 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid10242976\charrsid9534744 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid10242976 5.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid10242976\charrsid9534744  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid10242976 IOMap Offsets}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \cs45\insrsid10242976\charrsid9534744 
\par }\pard\plain \ltrpar\s18\ql \li590\ri0\sb120\widctlpar\tx3348\tx4680\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin590\itap0\pararsid14057255 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid10958382\charrsid12134570 IOCtrl Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid14057255 Value}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 
\b\f1\insrsid10958382\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li590\ri0\widctlpar\tx3348\tx4680\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin590\itap0\pararsid14057255 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid10958382\charrsid12134570 IOCtrlOffsetPowerOn\tab 0\tab 2
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14764198 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14698202 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 Display}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Display Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 display module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14698202 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14698202\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15351553 6}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid14698202\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15351553 Display}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14698202  Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14698202\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12930120 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid12144699\charrsid12134570 
The NXT display module encompasses support for drawing to the NXT LCD. The NXT supports drawing points, lines, rectangles, and circles on the LCD. It supports drawing graphic icon files on the screen as well as text and numbers}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5965366 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid5965366\charrsid12134570 Module Constants}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1457546 
\tab Function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid5965366\charrsid12134570 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid5965366 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5965366\charrsid12134570 DisplayModuleName\tab "Display.mod"
\par DisplayModuleID\tab 0x000A0001
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7941138 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12144699\charrsid12134570 
The LCD screen has its origin (0, 0) at the bottom left-hand corner of the screen with the positive Y-axis extending upward and the positive X-axis extending toward the right. The }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12144699\charrsid12134570  API provides 
constants for use in the NumOut and TextOut functions which make it possible to specify LCD line numbers between 1 and 8 with line 1 being at the top of the screen and line 8 being at the bottom of the screen. These constants (LCD_LINE1, LCD_LINE2, LCD_LI
NE3, LCD_LINE4, LCD_LINE5, LCD_LINE6, LCD_LINE7, LCD_LINE8) should be used as the Y coordinate in NumOut and TextOut calls. Values of Y other than these constants will be adjusted so that text and numbers are on one of 8 fixed line positions}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 .
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15351553 {\*\bkmkstart _Toc179361869}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid15351553 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 DisplayHighLevel}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Display Module High-level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 display module high-level functions}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15351553\charrsid15351553 3.6}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15351553 .1}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15351553\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15351553 High-level Functions}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid15351553\charrsid15351553 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 NumOut(x, y, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10488481 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10488481\charrsid10488481 Draw a numeric value on the screen at the specified x and y location.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 NumOut(0, LCD_LINE1, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 NumOutEx(x, y, value, clear)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10488481 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10488481\charrsid10488481 Draw a numeric value on the screen at the specified x and y location. Clear the screen first if clear equals TRUE.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 NumOutEx(0, LCD_LINE1, x, TRUE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 TextOut(x, y, msg)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10488481 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10488481\charrsid10488481 Draw a text value on the screen at the specified x and y location.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 TextOut(0, LCD_LINE3, 'Hello World!')
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 TextOutEx(x, y, msg, clear)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid10488481 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10488481\charrsid10488481 Draw a text value on the screen at the specified x and y location. Clear the screen first if clear equals TRUE.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 TextOutEx(0, LCD_LINE3, 'Hello World!', FALSE) 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GraphicOut(x, y, filename)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw the specified graphic icon file on the screen at the specified x and y location. If the file cannot be found then nothing will be drawn and no errors will be reported.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 GraphicOut(40, 40, 'image.ric')
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GraphicOutEx(x, y, filename, vars, clear)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw the specified graphic icon file on the screen at the specified x and y location. Use the values contained in the vars array to transform the drawing commands contained w
ithin the specified icon file. Clear the screen first if clear equals TRUE. If the file cannot be found then nothing will be drawn and no errors will be reported.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \lang1024\langfe1024\langnp1036\insrsid12413498\charrsid9379347 GraphicOutEx(40, 40, 'image.ric', variables, TRUE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 CircleOut(x, y, radius)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a circle on the screen with its center at the specified x and y location, using the specified radius.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 CircleOut(40, 40, 10) 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 CircleOutEx(x, y, radius, clear)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a circle on the screen with its center at the specified x and y location, using the specified radius. Clear the screen first if clear equals TRUE.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 CircleOutEx(40, 40, 10, TRUE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 LineOut(x1, y1, x2, y2)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a line on the screen from x1, y1 to x2, y2.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 LineOut(40, 40, 10, 10) 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 LineOutEx(x1, y1, x2, y2, clear)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a line on the screen from x1, y1 to x2, y2. Clear the screen first if clear equals TRUE.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 LineOutEx(40, 40, 10, 10, FALSE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 PointOut(x, y)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a point on the screen at x, y.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 PointOut(40, 40) 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 PointOutEx(x, y, clear)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a point on the screen at x, y. Clear the screen first if clear equals TRUE.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 PointOutEx(40, 40, TRUE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 RectOut(x, y, width, height)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a rectangle on the screen at x, y with the specified width and height.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 RectOut(40, 40, 30, 10)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 RectOutEx(x, y, width, height, clear)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Draw a rectangle on the screen at x, y with the specified width and height. Clear the screen first if clear equals TRUE.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 RectOutEx(40, 40, 30, 10, TRUE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 ClearScreen()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12652189 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12652189\charrsid12652189 Clear the NXT LCD to a blank screen.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 ClearScreen()
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12652189 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid12652189 {\*\bkmkend _Toc179361869}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid12652189 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12652189 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 DisplayLowLevel}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12652189 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Display Module low-level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12652189 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 display module low-level functions}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12652189 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12652189\charrsid15351553 3.6}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12652189 .2}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12652189\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12652189 Low-level Functions}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12652189\charrsid15351553 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15532976 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid5965366\charrsid12134570 Valid display flag values are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5965366 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tx3152\tx4368\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12652189 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid12652189\charrsid12652189 Display Flags Constant\tab Read/Write\tab Meaning
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\tx3152\tx4368\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12652189 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12652189\charrsid12652189 DISPLAY_ON\tab Write\tab Display is on
\par DISPLAY_REFRESH\tab Write\tab Enable refresh
\par DISPLAY_POPUP\tab Write\tab Use popup display memory
\par DISPLAY_REFRESH_DISABLED\tab Read\tab Refresh is disabled
\par DISPLAY_BUSY\tab Read\tab Refresh is in progress
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15532976 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15351553\charrsid12134570 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 {\*\bkmkstart _Toc179361870}GetDisplayFlags(out flags)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12652189 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12652189\charrsid12652189 Return the current display flags. Valid flag values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12652189 above.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12652189\charrsid12652189 
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498\charrsid9841484 GetDisplayFlags(flags)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 SetDisplayFlags(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12652189 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12652189\charrsid12652189 Set the current display flags. Valid flag values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12652189 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12652189\charrsid12652189 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\sl360\slmult1\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid12652189 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12652189 SetDisplayFlags(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GetDisplayEraseMask(out emask)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Return the current display erase mask.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 GetDisplayEraseMask(emask)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 SetDisplayEraseMask(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Set the current display erase mask.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 SetDisplayEraseMask(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GetDisplayUpdateMask(out umask)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Return the current display update mask.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 GetDisplayUpdateMask(umask)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 SetDisplayUpdateMask(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12413498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 Set the current display update mask.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 SetDisplayUpdateMask(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GetDisplayDisplay(out addr)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Return the current display memory address.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 GetDisplayDisplay(addr)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 SetDisplayDisplay(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Set the current display memory address.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 SetDisplayDisplay(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GetDisplayTextLinesCenterFlags(out flags)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Return the current display text lines center flags.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 GetDisplayTextLinesCenterFlags(flags)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 SetDisplayTextLinesCenterFlags(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Set the current display text lines center flags.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 SetDisplayTextLinesCenterFlags(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GetDisplayNormal(x, line, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Read "count" bytes from the normal display memory i
nto the data array. Start reading from the specified x, line coordinate. Each byte of data read from screen memory is a vertical strip of 8 bits at the desired location. Each bit represents a single pixel on the LCD screen. Use }{\rtlch\fcs1 \af5\afs22 
\ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234  through }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_8}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16340234\charrsid16340234  for the "line" parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 GetDisplayNormal(0, TEXTLINE_1, 8, ScreenMem)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 SetDisplayNormal(x, line, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Write "count" bytes to the normal display memory from the data array. Start writing at the specified x, line coordinate. Each byte of 
data read from screen memory is a vertical strip of 8 bits at the desired location. Each bit represents a single pixel on the LCD screen. Use }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16340234\charrsid16340234  through }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_8}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234  for the "line" parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 SetDisplayNormal(0, TEXTLINE_1, 8, ScreenMem)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 GetDisplayPopup(x, line, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Read "count" bytes from the popup display memory into the
 data array. Start reading from the specified x, line coordinate. Each byte of data read from screen memory is a vertical strip of 8 bits at the desired location. Each bit represents a single pixel on the LCD screen. Use }{\rtlch\fcs1 \af5\afs22 
\ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234  through }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_8}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16340234\charrsid16340234  for the "line" parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 GetDisplayPopup(0, TEXTLINE_1, 8, PopupMem)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12413498\charrsid15019316 SetDisplayPopup(x, line, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16340234 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234 Write "count" bytes to the popup display memory from the data array. Start writing at the specified x, line coordinate. Each byte of data read f
rom screen memory is a vertical strip of 8 bits at the desired location. Each bit represents a single pixel on the LCD screen. Use }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid16340234\charrsid16340234  through }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid16340234 TEXTLINE_8}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16340234\charrsid16340234  for the "line" parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid12413498 SetDisplayPopup(0, TEXTLINE_1, 8, PopupMem)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid16403929 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid15351553 {\*\bkmkend _Toc179361870}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid16403929 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16403929 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 DisplayIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16403929 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Display Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16403929 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 display module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid16403929 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid16403929\charrsid15351553 3.6}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid16403929 .3}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid16403929\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid16403929 IOMap Offsets}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid16403929\charrsid15351553 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx3348\tx5223\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8914426 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid8914426\charrsid12134570 Display Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid16403929 Value}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 
\b\f1\insrsid8914426\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3348\tx5223\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8914426 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid8914426\charrsid12134570 DisplayOffsetPFunc\tab 0\tab 4
\par DisplayOffsetEraseMask\tab 4\tab 4
\par DisplayOffsetUpdateMask\tab 8\tab 4
\par DisplayOffsetPFont\tab 12\tab 4
\par DisplayOffsetPTextLines(p)\tab (((p)*4)+16)\tab 4*8
\par DisplayOffsetPStatusText\tab 48\tab 4
\par DisplayOffsetPStatusIcons\tab 52\tab 4
\par DisplayOffsetPScreens(p)\tab (((p)*4)+56)\tab 4*3
\par DisplayOffsetPBitmaps(p)\tab (((p)*4)+68)\tab 4*4
\par DisplayOffsetPMenuText\tab 84\tab 4
\par DisplayOffsetPMenuIcons(p)\tab (((p)*4)+88)\tab 4*3
\par DisplayOffsetPStepIcons\tab 100\tab 4
\par DisplayOffsetDisplay\tab 104\tab 4
\par DisplayOffsetStatusIcons(p)\tab ((p)+108)\tab 1*4
\par DisplayOffsetStepIcons(p)\tab ((p)+112)\tab 1*5
\par DisplayOffsetFlags\tab 117\tab 1
\par DisplayOffsetTextLinesCenterFlags\tab 118\tab 1
\par DisplayOffsetNormal(l,w)\tab (((l)*100)+(w)+119)\tab 800
\par DisplayOffsetPopup(l,w)\tab (((l)*100)+(w)+919)\tab 800
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15351553 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid15351553 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid13450302 Loader}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13450302 
Loader}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13450302 
loader}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  module}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15351553 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\insrsid15351553\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2765000 7}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15351553\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2765000 Loader}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15351553 
 Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15351553\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1277459 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459\charrsid12134570 The NXT loader module encompasses support for the NXT file system. The NXT supports creating files, opening existing files, reading, writing, renaming, and deleting files.
\par }\pard \ltrpar\ql \li1440\ri0\sb120\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid2765000 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid2765000\charrsid5861053 Module Constants\tab Value
\par }\pard \ltrpar\ql \li1440\ri0\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid2765000 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2765000\charrsid5861053 LoaderModuleName\tab "Loader.mod"
\par LoaderModuleID\tab 0x00090001
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1277459 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 
Files in the NXT file system must adhere to the 15.3 naming convention for a maximum filename length of 19 characters. While multiple files can be opened simultaneously, a maximum of 4 files can be open for writing at any given time.
\par When accessing files on the NXT, errors can occur. The }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11277131 NBC}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 
 API defines several constants that define possible result codes. They are listed in the following table.
\par }\pard\plain \ltrpar\s18\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1277459 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1277459\charrsid12134570 Loader Result Codes}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1277459\charrsid12134570 
\par }\pard \ltrpar\s18\ql \li720\ri0\widctlpar\tx4320\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1277459 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid1277459\charrsid12134570 LDR_SUCCESS\tab 0x0000
\par LDR_INPROGRESS\tab 0x0001
\par LDR_REQPIN\tab 0x0002
\par LDR_NOMOREHANDLES\tab 0x8100
\par LDR_NOSPACE\tab 0x8200
\par LDR_NOMOREFILES\tab 0x8300
\par LDR_EOFEXPECTED\tab 0x8400
\par LDR_ENDOFFILE\tab 0x8500
\par LDR_NOTLINEARFILE\tab 0x8600
\par LDR_FILENOTFOUND\tab 0x8700
\par LDR_HANDLEALREADYCLOSED\tab 0x8800
\par LDR_NOLINEARSPACE\tab 0x8900
\par LDR_UNDEFINEDERROR\tab 0x8A00
\par LDR_FILEISBUSY\tab 0x8B00
\par LDR_NOWRITEBUFFERS\tab 0x8C00
\par LDR_APPENDNOTPOSSIBLE\tab 0x8D00
\par LDR_FILEISFULL\tab 0x8E00
\par LDR_FILEEXISTS\tab 0x8F00
\par LDR_MODULENOTFOUND\tab 0x9000
\par LDR_OUTOFBOUNDARY\tab 0x9100
\par LDR_ILLEGALFILENAME\tab 0x9200
\par LDR_ILLEGALHANDLE\tab 0x9300
\par LDR_BTBUSY\tab 0x9400
\par LDR_BTCONNECTFAIL\tab 0x9500
\par LDR_BTTIMEOUT\tab 0x9600
\par LDR_FILETX_TIMEOUT\tab 0x9700
\par LDR_FILETX_DSTEXISTS\tab 0x9800
\par LDR_FILETX_SRCMISSING\tab 0x9900
\par LDR_FILETX_STREAMERROR\tab 0x9A00
\par LDR_FILETX_CLOSEERROR\tab 0x9B00
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 GetFreeMemory(out mem)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Get the number of bytes of flash memory that are available for use.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 GetFreeMemory(memory)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 CreateFile(filename, size, out handle, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Create a new file with the specified filename
 and size and open it for writing. The file handle is returned in the last parameter, which must be a variable. The loader result code is returned as the value of the function call. The filename and size parameters must be constants, constant expressions,
 or variables. A file created with a size of zero bytes cannot be written to since the NBC file writing functions do not grow the file if its capacity is exceeded during a write attempt.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 CreateFile('data.txt', 1024, handle, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 OpenFileAppend(filename, out size, out handle, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 
Open an existing file with the specified filename for writing. The file size is returned in the second parameter, which must be a variable. The file handle is returned in the last parameter, which must be a variab
le. The loader result code is returned as the value of the function call. The filename parameter must be a constant or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 OpenFileAppend('data.txt', fsize, handle, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{
\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 OpenFileRead(filename, out size, out handle, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Open an e
xisting file with the specified filename for reading. The file size is returned in the second parameter, which must be a variable. The file handle is returned in the last parameter, which must be a variable. The loader result code is returned as the value
 of the function call. The filename parameter must be a constant or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 OpenFileRead('data.txt', fsize, handle, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{
\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 CloseFile(handle, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Close the file associated with the specified file handle. The loader result code is returned as the value of the function call. The handle parameter must be a constant or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 CloseFile(handle, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 ResolveHandle(filename, out handle, out bWriteable, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Resolve a file handle from the specified filename. The file hand
le is returned in the second parameter, which must be a variable. A boolean value indicating whether the handle can be used to write to the file or not is returned in the last parameter, which must be a variable. The loader result code is returned as the 
value of the function call. The filename parameter must be a constant or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 ResolveHandle('data.txt', handle, bCanWrite, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{
\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 RenameFile(oldfilename, newfilename, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Rename a file from the old filename to the new filename. The loader result code is returned as the value of the function call. The filename parameters must be constants or variables.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 RenameFile('data.txt', 'mydata.txt', }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 
\af5 \ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 DeleteFile(filename, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Delete the specified file. The loader result code is returned as the value of the function call. The filename parameter must be a constant or a variable.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 DeleteFile('data.txt', }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 \af5 
\ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 Read(handle, out value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Read a numeric value from 
the file associated with the specified handle. The loader result code is returned as the value of the function call. The handle parameter must be a variable. The value parameter must be a variable. The type of the value parameter determines the number of 
bytes of data read.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 Read(handle, value, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 ReadLn(handle, out value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Read a numeric value from the file associated with the specified handle. The loader result code is returned as the value of the function call. The handle paramete
r must be a variable. The value parameter must be a variable. The type of the value parameter determines the number of bytes of data read. The ReadLn function reads two additional bytes from the file which it assumes are a carriage return and line feed pa
ir.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 ReadLn(handle, value, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 \af5 
\ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 ReadBytes(handle, in/out length, out buf, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Read the specified number of bytes from the file associated with the specified handle. The loader result code is returned as the value of the function call. The
 handle parameter must be a variable. The length parameter must be a variable. The buf parameter must be an array or a string variable. The actual number of bytes read is returned in the length parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 ReadBytes(handle, len, buffer, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 \af5 
\ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 Write(handle, value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 
Write a numeric value to the file associated with the specified handle. The loader result code is returned as the value of the function call. The handle parameter must be a variable. The value parameter must be a constant, a c
onstant expression, or a variable. The type of the value parameter determines the number of bytes of data written.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 Write(handle, value, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 WriteLn(handle, value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Write a numeric value to the file associated with the specified hand
le. The loader result code is returned as the value of the function call. The handle parameter must be a variable. The value parameter must be a constant, a constant expression, or a variable. The type of the value parameter determines the number of bytes
 of data written. The WriteLn function also writes a carriage return and a line feed to the file following the numeric data.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 WriteLn(handle, value, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 \af5 
\ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 WriteString(handle, str, out count, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Write the string to the file associate
d with the specified handle. The loader result code is returned as the value of the function call. The handle parameter must be a variable. The count parameter must be a variable. The str parameter must be a string variable or string constant. The actual 
number of bytes written is returned in the count parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 WriteString(handle, 'testing', count, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 
\af5 \ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 WriteLnString(handle, str, out count, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Write the string to the file associated with the specified handle. The loader result code is
 returned as the value of the function call. The handle parameter must be a variable. The count parameter must be a variable. The str parameter must be a string variable or string constant. This function also writes a carriage return and a line feed to th
e file following the string data. The total number of bytes written is returned in the count parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 WriteLnString(handle, 'testing', count, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{
\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 WriteBytes(handle, data, out count, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5861053\charrsid5861053 Write the contents of the data array to the file
 associated with the specified handle. The loader result code is returned as the value of the function call. The handle parameter must be a variable. The count parameter must be a variable. The data parameter must be an array. The actual number of bytes w
ritten is returned in the count parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 WriteBytes(handle, buffer, count, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625\charrsid5792670 result}{\rtlch\fcs1 
\af5 \ltrch\fcs0 \insrsid13723625 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13723625\charrsid15019316 WriteBytesEx(handle, in/out length, buf, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4734894 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4734894\charrsid5861053 Write the specified number of bytes to the file associated with the specified handle. The loader result code i
s returned as the value of the function call. The handle parameter must be a variable. The length parameter must be a variable. The buf parameter must be an array or a string variable or string constant. The actual number of bytes written is returned in t
he length parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13723625 WriteBytesEx(handle, len, buffer, result)
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid3300882 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid1277459\charrsid3300882 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5861053 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid4734894 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5861053 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861053 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 LoaderIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Loader Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
loader module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5861053 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid5861053\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5861053 7.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5861053\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5861053 IOMap Offsets}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \cs45\insrsid5861053\charrsid15351553 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx3348\tx4677\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid79491 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid79491\charrsid12134570 Loader Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid79491\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3348\tx4677\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid79491 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid79491\charrsid12134570 LoaderOffsetPFunc\tab 0\tab 4
\par LoaderOffsetFreeUserFlash\tab 4\tab 4
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5861053 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid9200443 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 Command}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Command Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 command module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9200443\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9200443 8}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid9200443\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9200443 Command Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9200443\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1277459 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459\charrsid12134570 The NXT command module encompasses support for the execution of user programs via the NXT virtual machine. It also implements the direct command 
protocol support that enables the NXT to respond to USB or Bluetooth requests from other devices such as a PC or another NXT brick.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li1440\ri0\sb120\widctlpar\tx3960\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11171958 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11171958\charrsid11171958 Module Constants\tab Value
\par }\pard \ltrpar\ql \li1440\ri0\widctlpar\tx3960\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11171958 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11171958\charrsid11171958 CommandModuleName\tab "Command.mod"
\par CommandModuleID\tab 0x00010001
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid5861053 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid8401498 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 CommandIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Command Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
command module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid8401498\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498 8.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498 IOMap Offsets}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \cs45\insrsid8401498\charrsid15351553 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx3348\tx4338\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid79491 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid79491\charrsid12134570 Command Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid79491\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3348\tx4338\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid79491 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid79491\charrsid12134570 CommandOffsetFormatString\tab 0\tab 16
\par CommandOffsetPRCHandler\tab 16\tab 4
\par CommandOffsetTick\tab 20\tab 4
\par CommandOffsetOffsetDS\tab 24\tab 2
\par CommandOffsetOffsetDVA\tab 26\tab 2
\par CommandOffsetProgStatus\tab 28\tab 1
\par CommandOffsetAwake\tab 29\tab 1
\par CommandOffsetActivateFlag\tab 30\tab 1
\par CommandOffsetDeactivateFlag\tab 31\tab 1
\par CommandOffsetFileName\tab 32\tab 20
\par CommandOffsetMemoryPool\tab 52\tab 32k
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5861053 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid9200443 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid13450302 Button}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13450302 
Button}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13450302 
button}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  module}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid9200443 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\insrsid9200443\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9200443 9}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9200443\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9200443 Button Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\insrsid9200443\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1277459 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459\charrsid12134570 The NXT button module encompasses support for the 4 buttons on the NXT brick. }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li1440\ri0\sb120\widctlpar\tx3960\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11685294 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11685294\charrsid11685294 Module Constants\tab Value
\par }\pard \ltrpar\ql \li1440\ri0\widctlpar\tx3960\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11685294 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11685294\charrsid11685294 ButtonModuleName\tab "Button.mod"
\par ButtonModuleID\tab 0x00040001
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid11685294 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5861053 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid11685294 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11685294 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 ButtonHighLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11685294 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Button Module High-level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11685294 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
button module high-level functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11685294 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid11685294\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid9319488 9}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11685294 .1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11685294\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid11685294 High-level Functions}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11685294\charrsid15351553 
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid143864 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459\charrsid12134570 Valid button constant values are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li1440\ri0\sb120\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11685294 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11685294\charrsid11685294 Button Constants\tab Value
\par }\pard \ltrpar\ql \li1440\ri0\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11685294 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11685294\charrsid11685294 BTN1, BTNEXIT\tab 0
\par BTN2, BTNRIGHT\tab 1
\par BTN3, BTNLEFT\tab 2
\par BTN4, BTNCENTER\tab 3
\par NO_OF_BTNS\tab 4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5861053\charrsid11685294 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7871313\charrsid15019316 ReadButtonEx(btn, reset, out pressed, out count, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Read the specified button. Set the pressed and count parameters with the current state of the button. Optionally reset the press count after reading it. Valid values for the btn argument are listed in 
}{\field\fldedit{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493  REF _Ref162429493 \\h }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9267671\charrsid11363493 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0052006500660031003600320034003200390034003900330000000000001f}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Table }{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\lang1024\langfe1024\noproof\insrsid11363493\charrsid11363493 41}}}\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl\sectrsid7098678\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 ReadButtonEx(BTN1, true, pressed, count, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313\charrsid5792670 result}{
\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 )
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid143864 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid1277459\charrsid143864 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid11363493 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6779073 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid11363493 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11363493 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 ButtonLowLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Button Module Low-level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
button module low-level functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid11363493\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11363493 9.2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11363493\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid11363493 Low-level Functions}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \cs45\insrsid11363493\charrsid15351553 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid143864 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid143864\charrsid12134570 Val}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 id button state values are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li1440\ri0\sb120\widctlpar\tx5040\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11363493 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11363493\charrsid11363493 {\*\xmlopen\xmlns2{\factoidname PlaceName}}
{\*\xmlopen\xmlns2{\factoidname place}}Button{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceType}}State{\*\xmlclose}{\*\xmlclose} Constants\tab Value
\par }\pard \ltrpar\ql \li1440\ri0\widctlpar\tx5040\wrapdefault\faauto\adjustright\rin0\lin1440\itap0\pararsid11363493 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 BTNSTATE_PRESSED_EV\tab 0x01
\par BTNSTATE_SHORT_RELEASED_EV\tab 0x02
\par BTNSTATE_LONG_PRESSED_EV\tab 0x04
\par BTNSTATE_LONG_RELEASED_EV\tab 0x08
\par BTNSTATE_PRESSED_STATE\tab 0x80
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7871313\charrsid15019316 {\*\bkmkstart _Toc179361878}GetButtonPressCount(btn, out cnt)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Return the press count of the specified button. Valid values for the btn argument are listed above.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 GetButtonPressCount(BTN1, count)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7871313\charrsid15019316 GetButtonLongPressCount(btn, out cnt)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Return the long press count of the specified button. Valid values for the btn argument are listed above.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 GetButtonLongPressCount(BTN1, count)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7871313\charrsid15019316 GetButtonShortReleaseCount(btn, out cnt)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Return the short release count of the specified button. Valid values for the btn argument are listed above.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 GetButtonShortReleaseCount(BTN1, count)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7871313\charrsid15019316 GetButtonLongReleaseCount(btn, out cnt)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Return the long release count of the specified button. Valid values for the btn argument are listed above.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 GetButtonLongReleaseCount(BTN1, count)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7871313\charrsid15019316 GetButtonReleaseCount(btn, out cnt)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Return the release count of the specified button. Valid values for the btn argument are listed above.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 GetButtonReleaseCount(BTN1, count)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7871313\charrsid15019316 GetButtonState(btn, out state)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11363493 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11363493\charrsid11363493 Return the state of the specified button. Valid values for the btn argument are listed above.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid7871313 GetButtonState(BTN1, state)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid8401498 {\*\bkmkend _Toc179361878}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid8401498 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 ButtonIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Button Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 button module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid8401498 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498 9.3}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498 IOMap Offsets}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid8401498\charrsid15351553 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx3348\tx4477\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid143864 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid143864\charrsid12134570 Button Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid143864\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3348\tx4477\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid143864 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid143864\charrsid12134570 ButtonOffsetPressedCnt(b)\tab (((b)*8)+0)\tab 1

\par ButtonOffsetLongPressCnt(b)\tab (((b)*8)+1)\tab 1
\par ButtonOffsetShortRelCnt(b)\tab (((b)*8)+2)\tab 1
\par ButtonOffsetLongRelCnt(b)\tab (((b)*8)+3)\tab 1
\par ButtonOffsetRelCnt(b)\tab (((b)*8)+4)\tab 1
\par ButtonOffsetState(b)\tab ((b)+32)\tab 1*4
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid7957357 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 UserInterface}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
User Interface Module}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 user interface module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 10}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid7957357\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 UI Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid15296298 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459\charrsid12134570 The NXT UI module encompasses support for various aspects of the user interface for the NXT brick.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid14883391\charrsid14883391 Module Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx2880\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid14883391\charrsid14883391 UIModuleName\tab "Ui.mod"
\par UIModuleID\tab 0x000C0001}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid15296298\charrsid14883391 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid flag values are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx5040\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1797641\charrsid1797641 UI Flags Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx5040\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 UI_FLAGS_UPDATE\tab 0x01
\par UI_FLAGS_DISABLE_LEFT_RIGHT_ENTER\tab 0x02
\par UI_FLAGS_DISABLE_EXIT\tab 0x04
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\lang1030\langfe1033\langnp1030\insrsid1797641\charrsid1797641 UI_FLAGS_REDRAW_STATUS\tab 0x08
\par UI_FLAGS_RESET_SLEEP_TIMER\tab 0x10
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 UI_FLAGS_EXECUTE_LMS_FILE\tab 0x20
\par UI_FLAGS_BUSY\tab 0x40
\par UI_FLAGS_ENABLE_STATUS_UPDATE\tab 0x80}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid1797641 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid UI state values are listed in the following table.}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1797641\charrsid1797641 UI State Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 UI_STATE_INIT_DISPLAY\tab 0
\par UI_STATE_INIT_LOW_BATTERY\tab 1
\par UI_STATE_INIT_INTRO\tab 2
\par UI_STATE_INIT_WAIT\tab 3
\par UI_STATE_INIT_MENU\tab 4
\par UI_STATE_NEXT_MENU\tab 5
\par UI_STATE_DRAW_MENU\tab 6
\par UI_STATE_TEST_BUTTONS\tab 7
\par UI_STATE_LEFT_PRESSED\tab 8
\par UI_STATE_RIGHT_PRESSED\tab 9
\par UI_STATE_ENTER_PRESSED\tab 10
\par UI_STATE_EXIT_PRESSED\tab 11
\par UI_STATE_CONNECT_REQUEST\tab 12
\par UI_STATE_EXECUTE_FILE\tab 13
\par UI_STATE_EXECUTING_FILE\tab 14
\par UI_STATE_LOW_BATTERY\tab 15
\par UI_STATE_BT_ERROR\tab 16}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid1797641 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid UI button values are listed in the following table.}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1797641\charrsid1797641 UI Button Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 UI_BUTTON_NONE\tab 1
\par UI_BUTTON_LEFT\tab 2
\par UI_BUTTON_ENTER\tab 3
\par UI_BUTTON_RIGHT\tab 4
\par UI_BUTTON_EXIT\tab 5}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid1797641 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid UI Bluetooth state values are listed in the following table.}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid1797641\charrsid1797641 UI Bluetooth State Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid1797641 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 UI_BT_STATE_VISIBLE\tab 0x01
\par UI_BT_STATE_CONNECTED\tab 0x02
\par UI_BT_STATE_OFF\tab 0x04
\par UI_BT_ERROR_ATTENTION\tab 0x08
\par UI_BT_CONNECT_REQUEST\tab 0x40
\par UI_BT_PIN_REQUEST\tab 0x80}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid1797641 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 {\*\bkmkstart _Toc179361880}GetVolume(out volume)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return the user interface volume level. Valid values are from 0 to 4.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetVolume(vol)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetVolume(value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set the user interface volume level. Valid values are from 0 to 4.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 SetVolume(3)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetBatteryLevel(out blevel)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid2631421 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 Return the battery level in millivolts.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetBatteryLevel(blevel)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetBluetoothState(out bstate)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return the Bluetooth state. Valid Bluetooth state values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetBluetoothState(bstate)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetBluetoothState(value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set the Bluetooth state. Valid Bluetooth state values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 SetBluetoothState(UI_BT_STATE_OFF)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetCommandFlags(out flags)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return the command flags. Valid command flag values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetCommandFlags(flags)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetCommandFlags(value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set the command flags. Valid command flag values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \lang1024\langfe1024\langnp1030\insrsid2631421 SetCommandFlags(UI_FLAGS_REDRAW_STATUS)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetUIState(out state)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return the user interface state. Valid user interface state values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetUIState(state)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetUIState(value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set the user interface state. Valid user interface state values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 SetUIState(UI_STATE_LOW_BATTERY)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetUIButton(out btn)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return user interface button information. Valid user interface button values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1797641\charrsid1797641 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetUIButton(btn)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetUIButton(value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set user interface button information. Valid user interface button values are listed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641 above}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 .

\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 SetUIButton(UI_BUTTON_ENTER)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetVMRunState(out state)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return VM run state information. 
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetVMRunState(state)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetVMRunState(value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set VM run state information.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 SetVMRunState(0) // stopped
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetBatteryState(out state)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return battery state information (0..4). 
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetBatteryState(state)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetRechargeableBattery(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return whether the NXT has a rechargeable battery installed or not. 
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetRechargeableBattery(rbat)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 ForceOff(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Force the NXT to turn off if the specified value is greater than zero.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 ForceOff(TRUE)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetUsbState(out ustate)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return USB state information (0=disconnected, 1=connected, 2=working).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetUsbState(ustate)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetOnBrickProgramPointer(out ptr)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return the current OBP (on-brick program) step; 
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetOnBrickProgramPointer(ptr)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetOnBrickProgramPointer(value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set the current OBP (on-brick program) step.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 SetOnBrickProgramPointer(2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 GetLongAbort(out value)\tab Function (+)
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Return the enhanced NBC/NXC firmware's long abort setting (TRUE or FALSE). If set to true then a program has access the escape button. Aborting a program requires a long press of the escape button
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 GetLongAbort(value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2631421\charrsid15019316 SetLongAbort(value)\tab Function (+)
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid1797641 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1797641\charrsid1797641 Set the enhanced NBC/NXC firmware's long abort setting (TRUE or FALSE). If set to true then a program has access the escape button. Aborting a program requires a long press of the escape button.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid2631421 SetLongAbort(TRUE)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14883391 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid7957357 {\*\bkmkend _Toc179361880}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14883391 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14883391 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 UIIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14883391 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 UI Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14883391 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 ui module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14883391 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14883391\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14883391 10.1}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14883391\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14883391 IOMap Offsets}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14883391\charrsid15351553 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx3348\tx4477\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13925618 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid13925618\charrsid12134570 UI Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid13925618\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3348\tx4477\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid13925618 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid13925618\charrsid12134570 UIOffsetPMenu\tab 0\tab 4
\par UIOffsetBatteryVoltage\tab 4\tab 2
\par UIOffsetLMSfilename\tab 6\tab 20
\par UIOffsetFlags\tab 26\tab 1
\par UIOffsetState\tab 27\tab 1
\par UIOffsetButton\tab 28\tab 1
\par UIOffsetRunState\tab 29\tab 1
\par UIOffsetBatteryState\tab 30\tab 1
\par UIOffsetBluetoothState\tab 31\tab 1
\par UIOffsetUsbState\tab 32\tab 1
\par UIOffsetSleepTimeout\tab 33\tab 1
\par UIOffsetSleepTimer\tab 34\tab 1
\par UIOffsetRechargeable\tab 35\tab 1
\par UIOffsetVolume\tab 36\tab 1
\par UIOffsetError\tab 37\tab 1
\par UIOffsetOBPPointer\tab 38\tab 1
\par UIOffsetForceOff\tab 39\tab 1
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 {\*\bkmkstart _Toc179361881}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid7957357 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12727051 LowSpeed}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12727051 LowSpeed}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  Module}}K{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12727051 lowspeed}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629  module}}+{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 11}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid7957357\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 LowSpeed Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid13925618\charrsid12134570 The NXT low speed module encompasses support for digital I2C sensor communication.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13925618 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11028262\charrsid11028262 Module Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 LowSpeedModuleName\tab "Low Speed.mod"
\par LowSpeedModuleID\tab 0x000B0001
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 {\*\bkmkend _Toc179361881}
Use the lowspeed (aka I2C) communication methods to access devices that use the I2C protocol on the NXT brick's four input ports.
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid13925618 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 You must set the input port's Type property to }{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid12927548 IN}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 _TYPE_LOWSPEED or }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12927548 IN}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 
_TYPE_LOWSPEED_9V on a given port before using an I2C device on that port. Use }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12927548 IN}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 
_TYPE_LOWSPEED_9V if your device requires 9V power from the NXT brick. Remember that you also need to set the input port's InvalidData property to true after setting a new Type, and then wait 
in a loop for the NXT firmware to set InvalidData back to false. This process ensures that the firmware has time to properly initialize the port, including the 9V power lines, if applicable. Some digital devices might need additional time to initialize af
ter power up.
\par The SetSensorLowspeed API function s}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12927548 ets the specified port to IN}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 
_TYPE_LOWSPEED_9V and calls ResetSensor to perform the InvalidData reset loop described above.
\par When communicating with I2C devices, the NXT firmware uses a master/slave setup in w
hich the NXT brick is always the master device. This means that the firmware is responsible for controlling the write and read operations. The NXT firmware maintains write and read buffers for each port, and the three main Lowspeed (I2C) methods described
 below enable you to access these buffers.
\par A call to LowspeedWrite starts an asynchronous transaction between the NXT brick and a digital I2C device. The program continues to run while the firmware manages sending bytes from the write buffer and rea
ding the response bytes from the device. Because the NXT is the master device, you must also specify the number of bytes to expect from the device in response to each write operation. You can exchange up to 16 bytes in each direction per transaction.

\par After
 you start a write transaction with LowspeedWrite, use LowspeedStatus in a loop to check the status of the port. If LowspeedStatus returns a status code of 0 and a count of bytes available in the read buffer, the system is ready for you to use LowspeedRea
d to copy the data from the read buffer into the buffer you provide.
\par Note that any of these calls might return various status codes at any time. A status code of 0 means the port is idle and the last transaction (if any) did not result in any errors. Negati
ve status codes and the positive status code 32 indicate errors. There are a few possible errors per call.
\par Valid low speed return values are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \fi-4320\li5040\ri0\sb120\widctlpar\tx4140\tx5040\wrapdefault\faauto\adjustright\rin0\lin5040\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11028262\charrsid11028262 Low Speed Return Constants\tab Value\tab Meaning

\par }\pard \ltrpar\ql \fi-4320\li5040\ri0\widctlpar\tx4140\tx5040\wrapdefault\faauto\adjustright\rin0\lin5040\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 NO_ERR\tab 0\tab The operation succeeded.
\par STAT_COMM_PENDING\tab 32\tab The specified port is busy performing a communication transaction.
\par ERR_INVALID_SIZE\tab -19\tab The specified buffer or byte count exceeded the 16 byte limit.
\par ERR_COMM_CHAN_NOT_READY\tab -32\tab The specified port is busy or improperly configured.
\par ERR_COMM_CHAN_INVALID\tab -33\tab The specified port is invalid. It must be between 0 and 3.
\par ERR_COMM_BUS_ERR\tab -35\tab The last transaction failed, possibly due to a device failure.
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14894609 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14894609 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 LowSpeedHighLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
LowSpeed Module High-level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
lowspeed module high-level functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid14894609\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14894609 11.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14894609\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14894609 High-level Functions}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14894609\charrsid15351553 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9115419\charrsid15019316 LowspeedWrite(port, returnlen, buffer, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 This method starts a transaction to write the bytes contained in the array buffer to the I2C device on the specified port. It also tells the I2C device
 the number of bytes that should be included in the response. The maximum number of bytes that can be written or read is 16. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_1}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid11028262 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 
) or a variable. Constants should be used where possible to avoid blocking access to I2C devices on other ports by code running on other threads. Lowspeed return values are listed above.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 LowspeedWrite(}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6887097 IN_1}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 
, 1, inbuffer, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9115419\charrsid15019316 LowspeedStatus(port, out bytesready, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 
This method checks the status of the I2C communication on the specified port. If the last operation on this port was a successful LowspeedWrite call that requested response data from the device then bytesready will be set to t
he number of bytes in the internal read buffer. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 
\af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11028262\charrsid11028262 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 
) or a variable. Constants should be used where possible to avoid blocking access to I2C devices on other ports by code running on ot
her threads. Lowspeed return values are listed above. If the return value is 0 then the last operation did not cause any errors. Avoid calls to LowspeedRead or LowspeedWrite while LowspeedStatus returns }{\rtlch\fcs1 \af2 \ltrch\fcs0 
\f2\fs20\insrsid11028262 STAT_COMM_PENDING}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 LowspeedStatus(}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6887097 IN_1}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 
, nRead, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9115419\charrsid15019316 LowspeedCheckStatus(port, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 This method checks the status of the I2C communication on the specified port. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_1}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid11028262 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 
) or a variable. Constants should be used where possib
le to avoid blocking access to I2C devices on other ports by code running on other threads. Lowspeed return values are listed above. If the return value is 0 then the last operation did not cause any errors. Avoid calls to LowspeedRead or LowspeedWrite wh
ile LowspeedStatus returns }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\fs20\insrsid11028262 STAT_COMM_PENDING}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 LowspeedCheckStatus(IN_1, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9115419\charrsid15019316 LowspeedBytesReady(port, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 This method checks the status of the I2C communication on the specified port. If the last operation on this port was a successful L
owspeedWrite call that requested response data from the device then the return value will be the number of bytes in the internal read buffer. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid11028262 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{
\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11028262\charrsid11028262 ) or a variable. Constants should be used where possible to avoid blocking access to I2C devices on other ports by code running on other threads.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 LowspeedBytesReady(IN_1, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9115419\charrsid15019316 LowspeedRead(port, buflen, out buffer, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 Read the specified number of bytes from the I2C device o
n the specified port and store the bytes read in the array buffer provided. The maximum number of bytes that can be written or read is 16. The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid11028262 IN_1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{
\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid11028262\charrsid11028262 ) or a variable. Constants should be used 
where possible to avoid blocking access to I2C devices on other ports by code running on other threads. Lowspeed return values are listed above. If the return value is negative then the output buffer will be empty.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 LowspeedRead(}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6887097 IN_1}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 
, 1, outbuffer, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9115419\charrsid15019316 ReadI2CBytes(port, inbuf, in/out count, out outbuf, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 This method writes the bytes contained in the input buffer (inbuf) to the I2C device on the specified port, checks for the specified number of bytes to be ready for reading, and then 
tries to read the specified number (count) of bytes from the I2C device into the output buffer (outbuf). The port may be specified using a constant (e.g., }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_1}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 
\cs19\f5\fs22\insrsid11028262 IN_3}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 , or }{\rtlch\fcs1 \af5\afs22 \ltrch\fcs0 \cs19\f5\fs22\insrsid11028262 IN_4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 
) or a variable. Returns true or false indicating whether the I2C read process succeeded or failed.
\par This is a higher-level wrapper around the three main I2C functions. It also maintains a "last good read" buffer and returns values from that buffer if the I2C communication transaction fails.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 ReadI2CBytes(}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6887097 IN_4}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9115419 
, writebuf, cnt, readbuf, result)}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid1277459\charrsid9115419 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid14894609 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid14894609 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 LowSpeedLowLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
LowSpeed Module Low-level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
lowspeed module low-level functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid14894609 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid14894609\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14894609 11.2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14894609\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid14894609 Low-level Functions}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \cs45\insrsid14894609\charrsid15351553 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459\charrsid12134570 Valid low speed state values are listed in the following table.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11028262\charrsid11028262 {\*\xmlopen\xmlns2{\factoidname PlaceName}}
{\*\xmlopen\xmlns2{\factoidname place}}Low{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceName}}Speed{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceType}}State{\*\xmlclose}{\*\xmlclose} Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 COM_CHANNEL_NONE_ACTIVE\tab 0x00
\par COM_CHANNEL_ONE_ACTIVE\tab 0x01
\par COM_CHANNEL_TWO_ACTIVE\tab 0x02
\par COM_CHANNEL_THREE_ACTIVE\tab 0x04
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid low speed channel state values are listed in the following table.}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11028262\charrsid11028262 {\*\xmlopen\xmlns2{\factoidname PlaceName}}
{\*\xmlopen\xmlns2{\factoidname place}}Low{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceName}}Speed{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceName}}Channel{\*\xmlclose} {\*\xmlopen\xmlns2{\factoidname PlaceType}}State{\*\xmlclose}
{\*\xmlclose} Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 LOWSPEED_IDLE\tab 0
\par LOWSPEED_INIT\tab 1
\par LOWSPEED_LOAD_BUFFER\tab 2
\par LOWSPEED_COMMUNICATING\tab 3
\par LOWSPEED_ERROR\tab 4
\par LOWSPEED_DONE\tab 5
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid low speed mode values are listed in the following table.}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11028262\charrsid11028262 Low Speed Mode Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 LOWSPEED_TRANSMITTING\tab 1
\par LOWSPEED_RECEIVING\tab 2
\par LOWSPEED_DATA_RECEIVED\tab 3
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid low speed error type values are listed in the following table.}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid11028262\charrsid11028262 Low Speed Error Type Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4320\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid11028262 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid11028262 LOWSPEED_NO_ERROR\tab 0
\par LOWSPEED_CH_NOT_READY\tab 1
\par LOWSPEED_TX_ERROR\tab 2
\par LOWSPEED_RX_ERROR\tab 3
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 {\*\bkmkstart _Toc179361884}GetLSMode(port, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid14431359 This method returns the mode of the lowspeed communication over the specified port. The port must be a constant (IN_1..IN_4).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetLSMode(}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6887097 IN_1}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 , mode)

\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetLSChannelState(port, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid14431359 This method returns the channel state of the lowspeed communication over the specified port. The port must be a constant (IN_1..IN_4).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetLSChannelState(}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6887097 IN_1}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 
, cstate)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetLSErrorType(port, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid14431359 This method returns the error type of the lowspeed communication over the specified port. The port must be a constant (IN_1..IN_4).
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetLSErrorType(}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid6887097 IN_1}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 
, errtype)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetLSState(out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid14431359 This method returns the state of the lowspeed module.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetLSState(state)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetLSSpeed(out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid11028262 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid11028262\charrsid14431359 This method returns the speed of the lowspeed module.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetLSSpeed(speed)
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid2898679 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid7957357 {\*\bkmkend _Toc179361884}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid2898679 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2898679 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 LowSpeedIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2898679 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 LowSpeed Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2898679 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 lowspeed module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid2898679 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2898679\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2898679 11.3}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2898679\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2898679 IOMap Offsets}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid2898679\charrsid15351553 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx3600\tx5040\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2898679 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid12780595\charrsid12134570 LowSpeed Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid2898679 Value}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 
\b\f1\insrsid12780595\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx3600\tx5040\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2898679 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid12780595\charrsid12134570 LowSpeedOffsetInBufBuf(p)\tab (((p)*19)+0)\tab 16

\par LowSpeedOffsetInBufInPtr(p)\tab (((p)*19)+16)\tab 1
\par LowSpeedOffsetInBufOutPtr(p)\tab (((p)*19)+17)\tab 1
\par LowSpeedOffsetInBufBytesToRx(p)\tab (((p)*19)+18)\tab 58
\par LowSpeedOffsetOutBufBuf(p)\tab (((p)*19)+76)\tab 16
\par LowSpeedOffsetOutBufInPtr(p)\tab (((p)*19)+92)\tab 1
\par LowSpeedOffsetOutBufOutPtr(p)\tab (((p)*19)+93)\tab 1
\par LowSpeedOffsetOutBufBytesToRx(p)\tab (((p)*19)+94)\tab 58
\par LowSpeedOffsetMode(p)\tab ((p)+152)\tab 4
\par LowSpeedOffsetChannelState(p)\tab ((p)+156)\tab 4
\par LowSpeedOffsetErrorType(p)\tab ((p)+160)\tab 4
\par LowSpeedOffsetState\tab 164\tab 1
\par LowSpeedOffsetSpeed\tab 165\tab 1
\par LowSpeedOffsetSpare\tab 166\tab 1
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 {\*\bkmkstart _Toc179361885}\page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid7957357 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Comm}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Comm Module}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 comm module}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 12}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid7957357\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 Comm Module}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid5050517\charrsid12134570 The NXT comm module encompasses support for all forms of Bluetooth, USB, and HiSpeed communication.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5050517 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4925629 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid4925629\charrsid4925629 Module Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4925629 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid4925629 CommModuleName\tab "Comm.mod"
\par CommModuleID\tab 0x00050001
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5050517 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 {\*\bkmkend _Toc179361885}
You can use the Bluetooth communication methods to send information to other devices connected to the NXT brick. The NXT firmware also implements a message queuing or mailbox system which you can access using these methods.
\par Communication via Bluetooth uses
 a master/slave connection system. One device must be designated as the master device before you run a program using Bluetooth. If the NXT is the master device then you can configure up to three slave devices using connection 1, 2, and 3 on the NXT brick.
 If your NXT is a slave device then connection 0 on the brick must be reserved for the master device.
\par Programs running on the master NXT brick can send packets of data to any connected slave devices using the BluetoothWrite method. Slave devices write respo
nse packets to the message queuing system where they wait for the master device to poll for the response.
\par Using the direct command protocol, a master device can send messages to slave NXT bricks in the form of text strings addressed to a particular mailbox
. Each mailbox on the slave NXT brick is a circular message queue holding up to five messages. Each message can be up to 58 bytes long.
\par To send messages from a master NXT brick to a slave brick, use BluetoothWrite on the master brick to send a MessageWrite
 direct command packet to the slave. Then, you can use ReceiveMessage on the slave brick to read the message. The slave NXT brick must be running a program when an incoming message packet is received. Otherwise, the slave NXT brick ignores the message and
 the message is dropped.
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid4925629 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid4925629 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid4925629 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4925629 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid4925629 CommHighLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
Comm Module High-level Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 
comm module high-level functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid4925629\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4925629 12.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4925629\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid4925629 High-level Functions}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \cs45\insrsid4925629\charrsid15351553 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SendRemoteBool(connection, queue, bvalue, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a boolean value to the device on the specified connection. The message containing the boolean value will be written to the specified queue on the remote brick.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SendRemoteBool(1, queue, false, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SendRemoteNumber(connection, queue, value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a numeric value to the device on the specified connection. The message containing the numeric value will be written to the specified queue on the remote brick.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SendRemoteNumber(1, queue, 123, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SendRemoteString(connection, queue, strval, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a string value to the device on the specified connection. The message containing the string value will be written to the specified queue on the remote brick.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SendRemoteString(1, queue, 'hello world', result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SendResponseBool(queue, bvalue, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a boolean value as a response to a received message. The message containing the boolean value will be written to the specified queue (+10) on the slave brick so t
hat it can be retrieved by the master brick via automatic polling.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SendResponseBool(queue, false, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SendResponseNumber(queue, value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a numeric value as a response to a received message. The message containing th
e numeric value will be written to the specified queue (+10) on the slave brick so that it can be retrieved by the master brick via automatic polling.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SendResponseNumber(queue, 123, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SendResponseString(queue, strval, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 
This method sends a string value as a response to a received message. The message containing the string value will be written to the specified queue (+10) on the slave brick so that it can be retrieved by the master brick via automatic polling.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SendResponseString(queue, 'hello world', result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 ReceiveRemoteBool(queue, remove, out bvalue, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method is used on a master brick to receive a boolean value from a slave device communicating via a specific mailbox or message queue. Optionally r
emove the last read message from the message queue depending on the value of the boolean remove parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 ReceiveRemoteBool(queue, true, bvalue, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 ReceiveRemoteNumber(queue, remove, out value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method is used on a master bri
ck to receive a numeric value from a slave device communicating via a specific mailbox or message queue. Optionally remove the last read message from the message queue depending on the value of the boolean remove parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 ReceiveRemoteBool(queue, true, value, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 ReceiveRemoteString(queue, remove, out strval, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method is used on a master brick to receive a string value from a slave device communicating via a specific mailbox or message queue. Optionally remove the last read mes
sage from the message queue depending on the value of the boolean remove parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 ReceiveRemoteString(queue, true, strval, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 ReceiveRemoteMessageEx(queue, remove, out strval, out val, out bval, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 
This method is used on a master brick to receive a string, boolean, or numeric value from a slave device communicating via a specific mailbox or message queue. Optionally remove the last read message from the message queue depending on the value of the bo
olean remove parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 ReceiveRemoteMessageEx(queue, true, strval, val, bval, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SendMessage(queue, msg, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method writes the message buffer contents to the specified mailbox or message queue. The maximum message length is 58 bytes.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SendMessage(mbox, data, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 ReceiveMessage(queue, remove, out buffer, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method retrieves a message from the specified queue and writes it to the buffer provided. Optionally removes the last read message from the message que
ue depending on the value of the boolean remove parameter.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RecieveMessage(mbox, true, buffer, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 BluetoothStatus(connection, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method returns the status of the specified Bluetooth connection. Avoid calling BluetoothWrite or any other API function that writes data over a Bluetooth connection while BluetoothStatus returns }{
\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\fs20\insrsid4925629 STAT_COMM_PENDING}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 .
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 BluetoothStatus(1, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 BluetoothWrite(connection, buffer, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method tells the NXT firmware to write the data in the buffer to the device on the specified Bluetooth connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 BluetoothWrite(1, data, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteMessageRead(connection, queue, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a MessageRead direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteMessageRead(1, 5, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteMessageWrite(connection, queue, msg, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a MessageWrite direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteMessageWrite(1, 5, 'test', result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteStartProgram(connection, filename, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a StartProgram direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteStartProgram(1, 'myprog.rxe', result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteStopProgram(connection, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a StopProgram direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteStopProgram(1, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemotePlaySoundFile(connection, filename, bLoop, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a PlaySoundFile direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemotePlaySoundFile(1, 'click.rso', false, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemotePlayTone(connection, frequency, duration, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a PlayTone direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemotePlayTone(1, 440, 1000, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteStopSound(connection, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a StopSound direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteStopSound(1, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteKeepAlive(connection, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a KeepAlive direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteKeepAlive(1, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteResetScaledValue(connection, port, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a ResetScaledValue direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteResetScaledValue(1, IN_1, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteResetMotorPosition(connection, port, bRelative, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a ResetMotorPosition direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteResetMotorPosition(1, OUT_A, true, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteSetInputMode(connection, port, type, mode, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a SetInputMode direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 RemoteSetInputMode(1, IN_1, \line   IN_TYPE_LOWSPEED, IN_MODE_RAW, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteSetOutputState(connection, port, speed, mode, regmode, turnpct, runstate, tacholimit, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4925629 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4925629\charrsid1212097 This method sends a SetOutputState direct command to the device on the specified connection. Use BluetoothStatus to determine when this write request is completed.
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16017826 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 RemoteSetOutputState(1, OUT_A, 75, OUT_MODE_MOTORON,\line   OUT_REGMODE_IDLE, 0, OUT_RUNSTATE_RUNNING, 0, result)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1277459\charrsid4984969 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid5314561 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid5314561 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid5314561\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5314561\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10646331 CommLowLevel}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid5314561\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5314561\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5314561 
Comm Module }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 Low-level}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5314561  Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid5314561\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5314561\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5314561 comm module }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 low-level}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid5314561  functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid5314561\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid5314561\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid5314561\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5314561 12.2}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5314561\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid5314561 Low-level Functions}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \cs45\insrsid5314561\charrsid15351553 
\par }\pard\plain \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid1277459\charrsid12134570 Valid miscellaneous constant values are listed in the following table.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4680\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm Miscellaneous Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4680\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 SIZE_OF_USBBUF\tab 64
\par USB_PROTOCOL_OVERHEAD\tab 2
\par SIZE_OF_USBDATA\tab 62
\par SIZE_OF_HSBUF\tab 128
\par SIZE_OF_BTBUF\tab 128
\par BT_CMD_BYTE\tab 1
\par SIZE_OF_BT_DEVICE_TABLE\tab 30
\par SIZE_OF_BT_CONNECT_TABLE\tab 4
\par SIZE_OF_BT_NAME\tab 16
\par SIZE_OF_BRICK_NAME\tab 8
\par SIZE_OF_CLASS_OF_DEVICE\tab 4
\par SIZE_OF_BDADDR\tab 7
\par MAX_BT_MSG_SIZE\tab 60000
\par BT_DEFAULT_INQUIRY_MAX\tab 0
\par BT_DEFAULT_INQUIRY_TIMEOUT_LO\tab 15
\par LR_SUCCESS\tab 0x50
\par LR_COULD_NOT_SAVE\tab 0x51
\par LR_STORE_IS_FULL\tab 0x52
\par LR_ENTRY_REMOVED\tab 0x53
\par LR_UNKNOWN_ADDR\tab 0x54
\par USB_CMD_READY\tab 0x01
\par BT_CMD_READY\tab 0x02
\par HS_CMD_READY\tab 0x04}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid BtState values are listed in the following table.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm BtState Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx3600\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 BT_ARM_OFF\tab 0
\par BT_ARM_CMD_MODE\tab 1
\par BT_ARM_DATA_MODE\tab 2}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid BtStateStatus values are listed in the following table.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm BtStateStatus Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 BT_BRICK_VISIBILITY\tab 0x01
\par BT_BRICK_PORT_OPEN\tab 0x02
\par BT_CONNECTION_0_ENABLE\tab 0x10
\par BT_CONNECTION_1_ENABLE\tab 0x20
\par BT_CONNECTION_2_ENABLE\tab 0x40
\par BT_CONNECTION_3_ENABLE\tab 0x80}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid BtHwStatus values are listed in the following table.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm BtHwStatus Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 BT_ENABLE\tab 0x00
\par BT_DISABLE\tab 0x01}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid HsFlags values are listed in the following table.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm HsFlags Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 HS_UPDATE\tab 1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 

\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid HsState values are listed in the following table.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm HsState Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 HS_INITIALISE\tab 1
\par HS_INIT_RECEIVER\tab 2
\par HS_SEND_DATA\tab 3
\par HS_DISABLE\tab 4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid DeviceStatus values are listed in the following table.
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm DeviceStatus Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 BT_DEVICE_EMPTY\tab 0x00
\par BT_DEVICE_UNKNOWN\tab 0x01
\par BT_DEVICE_KNOWN\tab 0x02
\par BT_DEVICE_NAME\tab 0x40
\par BT_DEVICE_AWAY\tab 0x80}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 
\par }\pard \ltrpar\ql \li0\ri0\sb120\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid5314561 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1277459\charrsid12134570 Valid module interface values are listed in the following table.}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid1277459 
\par }\pard \ltrpar\ql \li720\ri0\sb120\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \b\f1\insrsid264230\charrsid264230 Comm Module Interface Constants\tab Value
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\tx4140\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid264230 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid264230 INTF_SENDFILE\tab 0
\par INTF_SEARCH\tab 1
\par INTF_STOPSEARCH\tab 2
\par INTF_CONNECT\tab 3
\par INTF_DISCONNECT\tab 4
\par INTF_DISCONNECTALL\tab 5
\par INTF_REMOVEDEVICE\tab 6
\par INTF_VISIBILITY\tab 7
\par INTF_SETCMDMODE\tab 8
\par INTF_OPENSTREAM\tab 9
\par INTF_SENDDATA\tab 10
\par INTF_FACTORYRESET\tab 11
\par INTF_BTON\tab 12
\par INTF_BTOFF\tab 13
\par INTF_SETBTNAME\tab 14
\par INTF_EXTREAD\tab 15
\par INTF_PINREQ\tab 16
\par INTF_CONNECTREQ\tab 17}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7957357\charrsid264230 
\par }\pard\plain \ltrpar\s4\ql \fi-864\li864\ri0\sb240\sa60\widctlpar\jclisttab\tx864\wrapdefault\aspalpha\aspnum\faauto\outlinelevel3\adjustright\rin0\lin864\itap0\pararsid6779073 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid10646331 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 CommUSB}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 Comm Module USB Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 comm module usb functions}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid12134570  cc}}}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid1212097 3.12.2.1 USB functions
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBInputBuffer(offset, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method reads count bytes of data from the USB input buffer at the specified offset and writes it to the buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBInputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBInputBuffer(offset, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method writes count bytes of data to the USB input buffer at the specified offset.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBInputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBInputBufferInPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method sets the input pointer of the USB input buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBInputBufferInPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBInputBufferInPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method returns the value of the input pointer of the USB input buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBInputBufferInPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBInputBufferOutPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method sets the output pointer of the USB input buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBInputBufferOutPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBInputBufferOutPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method returns the value of the output pointer of the USB input buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBInputBufferOutPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBOutputBuffer(offset, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method reads count bytes of data from the USB output buffer at the specified offset and writes it to the buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBOutputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBOutputBuffer(offset, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method writes count bytes of data to the USB output buffer at the specified offset.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBOutputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBOutputBufferInPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method sets the input pointer of the USB output buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBOutputBufferInPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBOutputBufferInPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method returns the value of the input pointer of the USB output buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBOutputBufferInPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBOutputBufferOutPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method sets the output pointer of the USB output buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBOutputBufferOutPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBOutputBufferOutPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method returns the value of the output pointer of the USB output buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBOutputBufferOutPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBPollBuffer(offset, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method reads count bytes of data from the USB poll buffer and writes it to the buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBPollBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBPollBuffer(offset, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method writes count bytes of data to the USB poll buffer at the specified offset.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBPollBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBPollBufferInPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method sets the input pointer of the USB poll buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBPollBufferInPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBPollBufferInPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method returns the value of the input pointer of the USB poll buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBPollBufferInPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBPollBufferOutPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method sets the output pointer of the USB poll buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBPollBufferOutPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBPollBufferOutPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method returns the value of the output pointer of the USB poll buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBPollBufferOutPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetUSBState(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method sets the USB state to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetUSBState(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetUSBState(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid8794084 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 This method returns the USB state.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetUSBPollBufferOutPtr(x)
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid4984969 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid1277459\charrsid4984969 
\par }\pard\plain \ltrpar\s4\ql \fi-864\li864\ri0\sb240\sa60\widctlpar\jclisttab\tx864\wrapdefault\aspalpha\aspnum\faauto\outlinelevel3\adjustright\rin0\lin864\itap0\pararsid6779073 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid10646331 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 CommHS}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 Comm Module Hi-Speed Functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 comm module hi-speed functions}}+{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid12134570  cc}}}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid1212097 3.12.2.2 Hi}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid8794084\charrsid1212097  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid1212097 Speed }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid8794084\charrsid1212097 port }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid264230\charrsid1212097 functions

\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSInputBuffer(offset, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method reads count bytes of data from the High Speed input buffer and writes it to the buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSInputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSInputBuffer(offset, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method writes count bytes of data to the High Speed input buffer at the specified offset.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSInputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSInputBufferInPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method sets the input pointer of the High Speed input buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSInputBufferInPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSInputBufferInPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method returns the value of the input pointer of the High Speed input buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSInputBufferInPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSInputBufferOutPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method sets the output pointer of the High Speed input buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSInputBufferOutPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSInputBufferOutPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method returns the value of the output pointer of the High Speed input buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSInputBufferOutPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSOutputBuffer(offset, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method reads count bytes of data from the High Speed output buffer and writes it to the buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSOutputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSOutputBuffer(offset, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method writes count bytes of data to the High Speed output buffer at the specified offset.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSOutputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSOutputBufferInPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method sets the input pointer of the High Speed output buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSOutputBufferInPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSOutputBufferInPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method returns the value of the input pointer of the High Speed output buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSOutputBufferInPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSOutputBufferOutPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method sets the output pointer of the High Speed output buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSOutputBufferOutPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSOutputBufferOutPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method returns the value of the output pointer of the High Speed output buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSOutputBufferOutPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSFlags(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method sets the High Speed flags to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSFlags(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSFlags(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method returns the value of the High Speed flags.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSFlags(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSSpeed(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method sets the High Speed speed to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSSpeed(1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSSpeed(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method returns the value of the High Speed speed.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 GetHSSpeed(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 SetHSState(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method sets the High Speed state to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid16017826 SetHSState(1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSState(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid4738259 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid4738259\charrsid9574086 This method returns the value of the High Speed state.
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid16017826 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid16017826\charrsid15019316 GetHSState(x)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1277459\charrsid10758721 
\par }\pard\plain \ltrpar\s4\ql \fi-864\li864\ri0\sb240\sa60\widctlpar\jclisttab\tx864\wrapdefault\aspalpha\aspnum\faauto\outlinelevel3\adjustright\rin0\lin864\itap0\pararsid6779073 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\b\i\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid10646331 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16582774 CommBT}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid10646331\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331 Comm Module }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16582774 Bluetooth}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10646331  Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid10646331\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid16582774 
comm module bluetooth}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331  functions}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid10646331 \rtlch\fcs1 \af0\afs20\alang1025 
\ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid10646331\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10646331\charrsid12134570  cc}}}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid4738259\charrsid1212097 3.12.2.2 }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4738259 Bluetooth}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4738259\charrsid1212097  functions
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTInputBuffer(offset, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method reads count bytes of data from the Bluetooth input buffer and writes it to the buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTInputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 SetBTInputBuffer(offset, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method writes count bytes of data to the Bluetooth input buffer at the specified offset.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 SetBTInputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 SetBTInputBufferInPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method sets the input pointer of the Bluetooth input buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 SetBTInputBufferInPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTInputBufferInPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the value of the input pointer of the Bluetooth input buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9574086 Get}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 BTInputBufferInPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 SetBTInputBufferOutPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method sets the output pointer of the Bluetooth input buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 SetBTInputBufferOutPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTInputBufferOutPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the value of the output pointer of the Bluetooth input buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9574086 Get}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 BTInputBufferOutPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTOutputBuffer(offset, count, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method reads count bytes of data from the Bluetooth output buffer and writes it to the buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTOutputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 SetBTOutputBuffer(offset, count, data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method writes count bytes of data to the Bluetooth output buffer at the specified offset.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 SetBTOutputBuffer(0, 10, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 SetBTOutputBufferInPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method sets the input pointer of the Bluetooth output buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 SetBTOutputBufferInPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTOutputBufferInPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the value of the input pointer of the Bluetooth output buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTOutputBufferInPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 SetBTOutputBufferOutPtr(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method sets the output pointer of the Bluetooth output buffer to the specified value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 SetBTOutputBufferOutPtr(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTOutputBufferOutPtr(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the value of the output pointer of the Bluetooth output buffer.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTOutputBufferOutPtr(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTDeviceCount(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the number of devices defined within the Bluetooth device table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTDeviceCount(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTDeviceNameCount(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the number of device names defined within the Bluetooth device table. This usually has the same value as GetBTDeviceCount but it can differ in some instances.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTDeviceNameCount(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTDeviceName(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the name of the device at the specified index in the Bluetooth device table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTDeviceName(0, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTConnectionName(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the name of the device at the specified index in the Bluetooth connection table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTConnectionName(0, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTConnectionPinCode(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the pin code of the device at the specified index in the Bluetooth connection table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTConnectionPinCode(0, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBrickDataName(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the name of the NXT.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBrickDataName(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTDeviceAddress(idx, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method reads the address of the device at the specified index within the Bluetooth device table and stores it in the data buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTDeviceAddress(0, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTConnectionAddress(idx, out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method reads the address of the device at the specified index within the Bluetooth connection table and stores it in the data buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTConnectionAddress(0, buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBrickDataAddress(out data)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method reads the address of the NXT and stores it in the data buffer provided.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBrickDataAddress(buffer)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTDeviceClass(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the class of the device at the specified index within the Bluetooth device table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTDeviceClass(idx, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTDeviceStatus(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the status of the device at the specified index within the Bluetooth device table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTDeviceStatus(idx, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTConnectionClass(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the class of the device at the specified index within the Bluetooth connection table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTConnectionClass(idx, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTConnectionHandleNum(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the handle number of the device at the specified index within the Bluetooth connection table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445\charrsid9841484 GetBTConnectionHandleNum(idx, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTConnectionStreamStatus(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the stream status of the device at the specified index within the Bluetooth connection table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTConnectionStreamStatus(idx, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBTConnectionLinkQuality(idx, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the link quality of the device at the specified index within the Bluetooth connection table.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBTConnectionLinkQuality(idx, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBrickDataBluecoreVersion(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the bluecore version of the NXT.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBrickDataBluecoreVersion(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBrickDataBtStateStatus(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the Bluetooth state status of the NXT.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBrickDataBtStateStatus(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBrickDataBtHardwareStatus(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the Bluetooth hardware status of the NXT.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid13716445 GetBrickDataBtHardwareStatus(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBrickDataTimeoutValue(out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9574086 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9574086\charrsid9574086 This method returns the timeout value of the NXT.
\par }\pard\plain \ltrpar\ql \li720\ri0\sb120\widctlpar\tqr\tx8640\wrapdefault\faauto\adjustright\rin0\lin720\itap0\pararsid13716445 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid13716445\charrsid15019316 GetBrickDataTimeoutValue(x)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid1277459\charrsid10758721 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid12527372 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \ab0\af1 \ltrch\fcs0 \b0\insrsid7957357 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid12527372 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12527372 
\rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid12527372\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12527372\charrsid3165630  IDH_NBC_
}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12527372 CommIOMapOffsets}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12527372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid12527372\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12527372\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12527372 
Comm Module IOMap Offsets}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12527372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid12527372\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12527372\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12527372 
comm module iomap offsets}}+{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid12527372 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid12527372\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid12527372\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs45\insrsid12527372\charrsid15351553 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12527372 12.3}{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12527372\charrsid15351553  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs45\insrsid12527372 IOMap Offsets}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \cs45\insrsid12527372\charrsid15351553 
\par }\pard\plain \ltrpar\s18\ql \li0\ri0\sb120\widctlpar\tx4247\tx5676\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15928143 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid15928143\charrsid12134570 Comm Module Offsets}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid1457546 \tab Function}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f1\insrsid15928143\charrsid12134570 \tab Size
\par }\pard \ltrpar\s18\ql \li0\ri0\widctlpar\tx4247\tx5676\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15928143 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\fs20\insrsid15928143\charrsid12134570 CommOffsetPFunc\tab 0\tab 4
\par CommOffsetPFuncTwo\tab 4\tab 4
\par CommOffsetBtDeviceTableName(p)\tab (((p)*31)+8)\tab 16
\par CommOffsetBtDeviceTableClassOfDevice(p)\tab (((p)*31)+24)\tab 4
\par CommOffsetBtDeviceTableBdAddr(p)\tab (((p)*31)+28)\tab 7
\par CommOffsetBtDeviceTableDeviceStatus(p)\tab (((p)*31)+35)\tab 1
\par CommOffsetBtConnectTableName(p)\tab (((p)*47)+938)\tab 16
\par CommOffsetBtConnectTableClassOfDevice (p)\tab (((p)*47)+954)\tab 4
\par CommOffsetBtConnectTablePinCode(p)\tab (((p)*47)+958)\tab 16
\par CommOffsetBtConnectTableBdAddr(p)\tab (((p)*47)+974)\tab 7
\par CommOffsetBtConnectTableHandleNr(p)\tab (((p)*47)+981)\tab 1
\par CommOffsetBtConnectTableStreamStatus(p)\tab (((p)*47)+982)\tab 1
\par CommOffsetBtConnectTableLinkQuality(p)\tab (((p)*47)+983)\tab 1
\par CommOffsetBrickDataName\tab 1126\tab 16
\par CommOffsetBrickDataBluecoreVersion\tab 1142\tab 2
\par CommOffsetBrickDataBdAddr\tab 1144\tab 7
\par CommOffsetBrickDataBtStateStatus\tab 1151\tab 1
\par CommOffsetBrickDataBtHwStatus\tab 1152\tab 1
\par CommOffsetBrickDataTimeOutValue\tab 1153\tab 1
\par CommOffsetBtInBufBuf\tab 1157\tab 128
\par CommOffsetBtInBufInPtr\tab 1285\tab 1
\par CommOffsetBtInBufOutPtr\tab 1286\tab 1
\par CommOffsetBtOutBufBuf\tab 1289\tab 128
\par CommOffsetBtOutBufInPtr\tab 1417\tab 1
\par CommOffsetBtOutBufOutPtr\tab 1418\tab 1
\par CommOffsetHsInBufBuf\tab 1421\tab 128
\par CommOffsetHsInBufInPtr\tab 1549\tab 1
\par CommOffsetHsInBufOutPtr\tab 1550\tab 1
\par CommOffsetHsOutBufBuf\tab 1553\tab 128
\par CommOffsetHsOutBufInPtr\tab 1681\tab 1
\par CommOffsetHsOutBufOutPtr\tab 1682\tab 1
\par CommOffsetUsbInBufBuf\tab 1685\tab 64
\par CommOffsetUsbInBufInPtr\tab 1749\tab 1
\par CommOffsetUsbInBufOutPtr\tab 1750\tab 1
\par CommOffsetUsbOutBufBuf\tab 1753\tab 64
\par CommOffsetUsbOutBufInPtr\tab 1817\tab 1
\par CommOffsetUsbOutBufOutPtr\tab 1818\tab 1
\par CommOffsetUsbPollBufBuf\tab 1821\tab 64
\par CommOffsetUsbPollBufInPtr\tab 1885\tab 1
\par CommOffsetUsbPollBufOutPtr\tab 1886\tab 1
\par CommOffsetBtDeviceCnt\tab 1889\tab 1
\par CommOffsetBtDeviceNameCnt\tab 1890\tab 1
\par CommOffsetHsFlags\tab 1891\tab 1
\par CommOffsetHsSpeed\tab 1892\tab 1
\par CommOffsetHsState\tab 1893\tab 1
\par CommOffsetUsbState\tab 1894\tab 1
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\super\insrsid7957357 #{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 
\af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid10880368 HiTechnic}}${\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 
\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10880368 
HiTechnic API Functions}}K{\footnote \ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\rtlch\fcs1 \af0 \ltrch\fcs0 \cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10880368 hitechnic api functions}}+{\footnote \ltrpar 
\pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 3.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 13}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid7957357\charrsid4537766  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357 HiTechnic API Functions}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7957357\charrsid4537766 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 SetSensorHTGyro(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Configure the sensor on the specified port as a HiTechnic Gyro sensor.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 SetSensorHTGyro(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTGyro(port, offset, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read the HiTechnic Gyro sensor on the specified port. The offset value should be calculated by averaging several readings with an offset of zero while the sensor is perfectly still.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorHTGyro(IN_1, gyroOffset, value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTCompass(port, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read the compass heading value of the HiTechnic Compass sensor on the specified port.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensor}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787\charrsid1271034 HTCompass}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid9056787 (IN_1, value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTColorNum(port, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read the color number from the HiTechnic Color sensor on the specified port.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensor}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787\charrsid13720221 HTColorNum(}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid9056787 IN_1, value)}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787\charrsid13720221 
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTIRSeekerDir(port, out value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read the direction value of the HiTechnic IR Seeker on the specified port.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorHTIRSeekerDir(IN_1, value)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTAccel(port, x, y, z, result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read X, Y, and Z axis acceleration values from the HiTechnic Accelerometer sensor. Returns a boolean value indicating whether or not the operation completed successfully.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorHTAccel(IN_1, x, y, z, bVal)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTColor(port, ColorNum, Red, Green, Blue, result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read color number, red, green, and blue values from the HiTechnic Color sensor. Returns a boolean value indicating whether or not the operation completed successfully.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorHTColor(IN_1, c, r, g, b, bVal)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTRawColor(port, Red, Green, Blue, result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read the raw red, green, and blue values from the HiTechnic Color sensor. Returns a boolean value indicating whether or not the operation completed successfully.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorHTRawColor(IN_1, r, g, b, bVal)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTNormalizedColor(port, ColorIdx, Red, Green, Blue, result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read color index and the normalized red, green, and blue values from the HiTechnic Color sensor. Returns a boolean value indicating whether or not the operation completed successfully.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorHTNormalizedColor(IN_1, c, r, g, b, bVal)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorHTIRSeeker(port, dir, IN_1, IN_3, s5, s7, s9, result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read direction, and five signal strength values from the HiTechnic IRSeeker sensor. Returns a boolean value indicating whether or not the operation completed successfully.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorHTIRSeeker(port, dir, IN_1, IN_3, s5, s7, s9, bVal)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTPowerFunctionCommand(port, ch, cmd1, cmd2, result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Execute a pair of Po
wer Function motor commands on the specified channel using the HiTechnic iRLink device. Commands are HTPF_CMD_STOP, HTPF_CMD_REV, HTPF_CMD_FWD, and HTPF_CMD_BRAKE. Valid channels are HTPF_CHANNEL_1 through HTPF_CHANNEL_4.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTPowerFunctionCommand(IN_1, HTPF_CHANNEL_1, HTPF_CMD_STOP, HTPF_CMD_FWD, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetIRLinkPort(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Set the global port in advance of using the HTRCX* and HTScout* API functions for sending RCX and Scout messages over the HiTechnic iRLink device.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetIRLinkPort(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXPoll(src, value, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the Poll command to an RCX to read a signed 2-byte value at the specified source and value combination.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXPoll(RCX_VariableSrc, 0, x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXBatteryLevel(out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid15358684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid15358684\charrsid11363493 Send the BatteryLevel command to an RCX to read the current battery level.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXBatteryLevel(x)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXPing()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the {\*\xmlopen\xmlns2{\factoidname place}}Ping{\*\xmlclose} command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXPing()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXDeleteTasks()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the DeleteTasks command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXDeleteTasks()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXStopAllTasks()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the StopAllTasks command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXStopAllTasks()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXPBTurnOff()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the PBTurnOff command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXPBTurnOff()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXDeleteSubs()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the DeleteSubs command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXDeleteSubs()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXClearSound()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the ClearSound command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXClearSound()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXClearMsg()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the ClearMsg command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXClearMsg()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXMuteSound()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid15358684 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 
\af0 \ltrch\fcs0 \f1\insrsid15358684\charrsid11363493 Send the MuteSound command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXMuteSound()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXUnmuteSound()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the UnmuteSound command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXUnmuteSound()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXClearAllEvents()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the ClearAllEvents command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXClearAllEvents()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetOutput(outputs, mode)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetOutput command to an RCX to configure the mode of the specified outputs
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetOutput(RCX_OUT_A, RCX_OUT_ON)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetDirection(outputs, dir)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetDirection command to an RCX to configure the direction of the specified outputs.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetDirection(RCX_OUT_A, RCX_OUT_FWD)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetPower(outputs, pwrsrc, pwrval)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetPower command to an RCX to configure the power level of the specified outputs.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetPower(RCX_OUT_A, RCX_ConstantSrc, RCX_OUT_FULL)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXOn(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to turn on the specified outputs.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXOn(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXOff(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to turn off the specified outputs.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXOff(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXFloat(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to float the specified outputs.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXFloat(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXToggle(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send commands to an RCX to toggle the direction of the specified outputs.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXToggle(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXFwd(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to set the specified outputs to the forward direction.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXFwd(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXRev(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to set the specified outputs to the reverse direction.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXRev(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXOnFwd(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to turn on the specified outputs in the forward direction.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXOnFwd(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXOnRev(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to turn on the specified outputs in the reverse direction.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXOnRev(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXOnFor(outputs, duration)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send commands to an RCX to turn on the specified outputs in the forward direction for the specified duration.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXOnFor(RCX_OUT_A, 100)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetTxPower(pwr)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetTxPower command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetTxPower(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXPlaySound(snd)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the PlaySound command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXPlaySound(RCX_SOUND_UP)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXDeleteTask(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the DeleteTask command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXDeleteTask(3)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXStartTask(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send the StartTask command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXStartTask(2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXStopTask(n)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the StopTask command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXStopTask(1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSelectProgram(prog)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SelectProgram command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSelectProgram(3)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXClearTimer(timer)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the ClearTimer command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXClearTimer(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetSleepTime(t)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetSleepTime command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetSleepTime(4)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXDeleteSub(s)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the DeleteSub command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXDeleteSub(2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXClearSensor(port)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the ClearSensor command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXClearSensor(IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXPlayToneVar(varnum, duration)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the PlayToneVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXPlayToneVar(0, 50)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetWatch(hours, minutes)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetWatch command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetWatch(3, 30)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetSensorType(port, type)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send the SetSensorType command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10902510 HTRCXSetSensorType(IN_1, IN}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 _TYPE_}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid10902510 SWITCH}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetSensorMode(port, mode)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetSensorMode command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787\charrsid9841484 HTRCXSetSensorMode(IN_1, }{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10902510 IN}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\insrsid9056787\charrsid9841484 _MODE_BOOL}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid10902510 EAN}{\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787\charrsid9841484 )
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXCreateDatalog(size)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the CreateDatalog command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXCreateDatalog(50)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXAddToDatalog(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the AddToDatalog command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXAddToDatalog(RCX_InputValueSrc, IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSendSerial(first, count)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SendSerial command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSendSerial(0, 10)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXRemote(cmd)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the Remote command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXRemote(RCX_RemotePlayASound)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXEvent(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the Event command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXEvent(RCX_ConstantSrc, 2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXPlayTone(freq, duration)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the PlayTone command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXPlayTone(440, 100)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSelectDisplay(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SelectDisplay command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSelectDisplay(RCX_VariableSrc, 2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXPollMemory(address, count)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send the PollMemory command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXPollMemory(0, 10)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetEvent(evt, src, type)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetEvent command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetEvent(0, RCX_ConstantSrc, 5)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetGlobalOutput(outputs, mode)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetGlobalOutput command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetGlobalOutput(RCX_OUT_A, RCX_OUT_ON)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetGlobalDirection(outputs, dir)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetGlobalDirection command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetGlobalDirection(RCX_OUT_A, RCX_OUT_FWD)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetMaxPower(outputs, pwrsrc, pwrval)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetMaxPower command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetMaxPower(RCX_OUT_A, RCX_ConstantSrc, 5)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXEnableOutput(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the EnableOutput command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXEnableOutput(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXDisableOutput(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the DisableOutput command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXDisableOutput(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXInvertOutput(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the InvertOutput command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXInvertOutput(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXObvertOutput(outputs)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the ObvertOutput command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXObvertOutput(RCX_OUT_A)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXCalibrateEvent(evt, low, hi, hyst)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send the CalibrateEvent command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXCalibrateEvent(0, 200, 500, 50)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetVar(0, RCX_VariableSrc, 1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSumVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SumVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSumVar(0, RCX_InputValueSrc, IN_1)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSubVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SubVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSubVar(0, RCX_RandomSrc, 10)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXDivVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the DivVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXDivVar(0, RCX_ConstantSrc, 2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXMulVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the MulVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXMulVar(0, RCX_VariableSrc, 4)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSgnVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SgnVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSgnVar(0, RCX_VariableSrc, 0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXAbsVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the AbsVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXAbsVar(0, RCX_VariableSrc, 0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXAndVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the AndVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXAndVar(0, RCX_ConstantSrc, 0x7f)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXOrVar(varnum, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send the OrVar command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXOrVar(0, RCX_ConstantSrc, 0xCC)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSet(dstsrc, dstval, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the Set command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSet(RCX_VariableSrc, 0, RCX_RandomSrc, 10000)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXUnlock()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the Unlock command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXUnlock()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXReset()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the Reset command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXReset()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXBoot()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the Boot command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXBoot()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetUserDisplay(src, value, precision)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetUserDisplay command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetUserDisplay(RCX_VariableSrc, 0, 2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXIncCounter(counter)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the IncCounter command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXIncCounter(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXDecCounter(counter)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the DecCounter command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXDecCounter(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXClearCounter(counter)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the ClearCounter command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXClearCounter(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetPriority(p)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send the SetPriority command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetPriority(2)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTRCXSetMessage(msg)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetMessage command to an RCX.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTRCXSetMessage(20)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutCalibrateSensor()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the CalibrateSensor command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutCalibrateSensor()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutMuteSound()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the MuteSound command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutMuteSound()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutUnmuteSound()\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the UnmuteSound command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutUnmuteSound()
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSelectSounds(group)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SelectSounds command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSelectSounds(0)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetLight(mode)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetLight command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetLight(SCOUT_LIGHT_ON)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetCounterLimit(counter, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetCounterLimit command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetCounterLimit(0, RCX_ConstantSrc, 2000)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetTimerLimit(timer, src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetTimerLimit command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetTimerLimit(0, RCX_ConstantSrc, 10000)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetSensorClickTime(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Send the SetSensorClickTime command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetSensorClickTime(RCX_ConstantSrc, 200)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetSensorHysteresis(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetSensorHysteresis command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetSensorHysteresis(RCX_ConstantSrc, 50)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetSensorLower Limit(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetSensorLowerLimit command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetSensorLower Limit(RCX_ConstantSrc, 100)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetSensorUpper Limit(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetSensorUpperLimit command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetSensorUpper Limit(RCX_ConstantSrc, 400)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetEventFeedback(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetEventFeedback command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetEventFeedback(RCX_ConstantSrc, 10)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSendVLL(src, value)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SendVLL command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSendVLL(RCX_ConstantSrc, 0x30)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetScoutRules(motion, touch, light, time, effect)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetScoutRules command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 HTScoutSetScoutRules(SCOUT_MR_FORWARD, SCOUT_TR_REVERSE, SCOUT_LR_IGNORE, SCOUT_TGS_SHORT, SCOUT_FXR_BUG)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 HTScoutSetScoutMode(mode)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Send the SetScoutMode command to a Scout.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \lang1024\langfe1024\langnp1036\insrsid9056787\charrsid13450302 HTScoutSetScoutMode(SCOUT_MODE_POWER)}{\rtlch\fcs1 \af5 \ltrch\fcs0 
\lang1024\langfe1024\langnp1036\insrsid1277459\charrsid13450302 
\par }\pard\plain \ltrpar\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\faauto\outlinelevel1\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \ab\ai\af1\afs24\alang1025 \ltrch\fcs0 \b\i\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid7957357\charrsid13450302 \page }{\rtlch\fcs1 \af1 \ltrch\fcs0 \cs16\lang1036\langfe1033\super\langnp1036\insrsid7957357\charrsid13450302 #{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 #}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  IDH_NBC_}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Mindsensors}}${\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 $}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 Mindsensors API functions}}K{\footnote \ltrpar \pard\plain \ltrpar
\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid3165630 K}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid3165630  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629 mindsensors api function}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid10880368 s}}+{\footnote 
\ltrpar \pard\plain \ltrpar\s15\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\cs16\f1\super\insrsid4925629\charrsid12134570 +}{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid4925629\charrsid12134570  cc}}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \lang1036\langfe1033\langnp1036\insrsid7957357\charrsid13450302 3.14 Mindsensors API Functions
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorMSRTClock(port, ss, mm, hh, dow, dd, MM, yy, result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid9056787 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 Read real-time clock values from the Mindsensors RTClock sensor. Returns a boolean value indicating whether or not the operation completed successfully.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorMSRTClock(IN_1, ss, mm, hh, dow, dd, mon, yy, result)
\par }\pard\plain \ltrpar\s22\ql \li0\ri0\sb120\sa120\widctlpar\tqr\tx8640\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15019316 \rtlch\fcs1 \ab\af0\afs28\alang1025 \ltrch\fcs0 
\b\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid9056787\charrsid15019316 ReadSensorMSCompass(port, out result)\tab Function
\par }\pard\plain \ltrpar\s25\ql \li360\ri0\sa120\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid7957357 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \f1\insrsid7957357\charrsid11363493 Return the Mindsensors Compass sensor value.
\par }\pard\plain \ltrpar\s20\ql \li720\ri720\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin720\lin720\itap0\pararsid15019316 \rtlch\fcs1 \af5\afs22\alang1025 \ltrch\fcs0 
\f5\fs22\expnd-2\expndtw-10\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 {\rtlch\fcs1 \af5 \ltrch\fcs0 \insrsid9056787 ReadSensorMSCompass(IN_1, result)
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\adjustright\rin0\lin0\itap0\pararsid7109674 \rtlch\fcs1 \af0\afs20\alang1025 \ltrch\fcs0 \fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\f1\insrsid7109674\charrsid12134570 \page }{\rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid7098678\charrsid12134570 
\par }}
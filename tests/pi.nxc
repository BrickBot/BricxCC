task main()
{

    int i=3;
    float pi = 4.0;
    float term;
    float elapsed;
    float divisor;
    unsigned long startTime;
    unsigned long endTime;
    float lastPi = 0;
    bool add = false;

   /* float testVals[] = {(1/3),(2/3),(100/3)};
    for(int i = 0; i<ArrayLen(testVals);i++){
            ClearLine(LCD_LINE5);
            NumOut(0,LCD_LINE5,testVals[i]);
            Wait(3000);
    } */

    ClearScreen();
    TextOut(20,LCD_LINE1,"--NXT-Pi--",DRAW_OPT_INVERT);
    TextOut(10,LCD_LINE8,"Calculating...",DRAW_OPT_INVERT);
    startTime = CurrentTick();
    for(int cnt = 0;cnt < 100;cnt++){
        pi = 4;
        i = 3;
        while (abs(pi - lastPi) > 0.0002){
          lastPi = pi;
          divisor = i;
          term = 4.0/divisor;
          if(add){
               pi += term;
          }
          else{
               pi -= term;
          }
          add = !add;
          i+=2;
        }
    }
    endTime = CurrentTick();
    elapsed = (endTime-startTime)/1000 ;
    TextOut(5,LCD_LINE2, StrCat("Loops: ",NumToStr( (i-3) /2) ));
    TextOut(5,LCD_LINE3, StrCat("Time: ",NumToStr(elapsed),"s"));
    TextOut(5,LCD_LINE4,StrCat("PI = ",NumToStr(pi)),DRAW_OPT_INVERT);
//    PlayTone(440, MS_500);
    while(1);
}

#download "ftest.txt"

task main()
{
  string fname = "ftest.txt";
  byte handle = fopen(fname, "r" );
  NumOut(80, LCD_LINE1, handle);
  if (handle) {
    for (int i=0; i < 8; i++) {
      char ch = fgetc(handle);
      switch(ch) {
        case '1' :
          ch = 1;
          break;
        default:
          ch -= 48;
      }
      NumOut(0, LCD_LINE1-i*8, ch);
    }
//    fseek(handle, 0, SEEK_SET);
    rewind(handle);
    for (int i=0; i < 8; i++) {
      NumOut(40, LCD_LINE1-i*8, getc(handle));
    }
  }
  fclose(handle);
  remove(fname);
  Wait(SEC_10);
}

/*
inline int rename(string old, string new) { return RenameFile(old, new); }
inline string fgets(string & str, int num, byte handle) {
inline int feof(byte handle) { return 0; }
inline int fflush(byte handle) { return 0; }
inline long ftell(byte handle) { return -1; }
inline char fputc(char ch, byte handle)
#define putc(_ch, _handle) fputc(_ch, _handle)
inline int fputs(string str, byte handle)
void printf(const string & format, variant value)
void fprintf(byte handle, const string & format, variant value)
void sprintf(string & str, const string & format, variant value)
*/
/*
inline int isupper(int c) { return ((c >= 'A') && (c <= 'Z')); }
inline int islower(int c) { return ((c >= 'a') && (c <= 'z')); }
inline int isalpha(int c) { return isupper(c) || islower(c); }
inline int isdigit(int c) { return ((c >= '0') && (c <= '9')); }
inline int isalnum(int c) { return isalpha(c) || isdigit(c); }
inline int isspace(int c) { return (c == 0x20) || ((c >= 0x09) && (c <= 0x0d)); }
inline int iscntrl(int c) { return (c <= 0x1f) || (c == 0x7f); }
inline int isprint(int c) { return !iscntrl(c); }
inline int isgraph(int c) { return (c != 0x20) && isprint(c); }
inline int ispunct(int c) { return isgraph(c) && !isalnum(c); }
inline int isxdigit(int c) {  return isdigit(c) || ((c >= 'A') && (c <= 'F')) || ((c >= 'a') && (c <= 'f')); }
inline int toupper(int c) { if (islower(c)) c -= 32; return c; }
inline int tolower(int c) { if (isupper(c)) c += 32; return c; }
*/

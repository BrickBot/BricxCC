- Programs
thread "name"\>"body"\<endt\=\=
subroutine "name"\>"body"\=return\<ends\=\=
dseg segment\>"variables"\<dseg ends\=\=
"TypeName" struct\>"body"\<"TypeName" ends\=\=
"name" byte "val"\=
"name" sbyte "val"\=
"name" word "val"\=
"name" sword "val"\=
"name" long "val"\=
"name" slong "val"\=
"name" mutex\=
"name" byte[] "string value"\=
"name" float "val"\=
#define "macro"\=
#include "file"\=
- Debugging
#pragma debuglog "msg"\=
#pragma debuglog "val", "val2", "val3"\=
#pragma debugbreak\=
#pragma debugbreak if "expression"\=
#pragma debugbreak count "val"\= 
#pragma debugbreak count "val" reset\= 
- Flow control
brtst "cc", "label", "variable"\=
brcmp "cc", "label", "variable1", "variable2"\=
jmp "label"\=
- Outputs
OnFwd("ports", "pwr")\=
OnFwdEx("ports", "pwr", "reset")\=
OnRev("ports", "pwr")\=
OnRevEx("ports", "pwr", "reset")\=
OnFwdReg("ports", "pwr", "regmode")\=
OnFwdRegEx("ports", "pwr", "regmode", "reset")\=
OnRevReg("ports", "pwr", "regmode")\=
OnRevRegEx("ports", "pwr", "regmode", "reset")\=
OnFwdSync("ports", "pwr", "turnpct")\=
OnFwdSyncEx("ports", "pwr", "turnpct", "reset")\=
OnRevSync("ports", "pwr", "turnpct")\=
OnRevSyncEx("ports", "pwr", "turnpct", "reset")\=
RotateMotor("ports", "pwr", "angle")\=
RotateMotorPID("ports", "pwr", "angle", "p", "i", "d")\=
RotateMotorEx("ports", "pwr", "angle", "turnpct", "bsync", "bstop")\=
RotateMotorExPID("ports", "pwr", "angle", "turnpct", "bsync", "bstop", "p", "i", "d")\=
Off("ports")\=
OffEx("ports", "reset")\=
Coast("ports")\=
CoastEx("ports", "reset")\=
ResetTachoCount("ports")\=
ResetBlockTachoCount("ports")\=
ResetRotationCount("ports")\=
ResetAllTachoCounts("ports")\=
- Sensors
SetInput("port", "field", "value")\=
GetInput("port", "field")\=
SetSensorTouch("port")\=
SetSensorLight("port")\=
SetSensorSound("port")\=
SetSensorLowspeed("port")\=
SetSensorUltrasonic("port")\=
| Sensor types
SetSensorType("port", "type")\=
SetSensorType("port", IN_TYPE_SWITCH)\=
SetSensorType("port", IN_TYPE_REFLECTION)\=
SetSensorType("port", IN_TYPE_TEMPERATURE)\=
SetSensorType("port", IN_TYPE_ANGLE)\=
SetSensorType("port", IN_TYPE_LIGHT_ACTIVE)\=
SetSensorType("port", IN_TYPE_LIGHT_INACTIVE)\=
SetSensorType("port", IN_TYPE_SOUND_DB)\=
SetSensorType("port", IN_TYPE_SOUND_DBA)\=
SetSensorType("port", IN_TYPE_LOWSPEED)\=
SetSensorType("port", IN_TYPE_LOWSPEED_9V)\=
SetSensorType("port", IN_TYPE_HISPEED)\=
SetSensorType("port", IN_TYPE_CUSTOM)\=
- Sensor modes
SetSensorMode("port", "mode")\=
SetSensorMode("port", IN_MODE_RAW + "slope")\=
SetSensorMode("port", IN_MODE_BOOLEAN)\=
SetSensorMode("port", IN_MODE_TRANSITIONCNT)\=
SetSensorMode("port", IN_MODE_PERIODCOUNTER)\=
SetSensorMode("port", IN_MODE_PCTFULLSCALE)\=
SetSensorMode("port", IN_MODE_CELSIUS)\=
SetSensorMode("port", IN_MODE_FAHRENHEIT)\=
SetSensorMode("port", IN_MODE_ANGLESTEP)\=
- Sensor misc
ClearSensor("port")\=
ResetSensor("port")\=
ReadSensor("port", "var")\=
ReadSensorUS("port", "var")\=
- Digital Sensors
LowspeedStatus("port", "bready", "result")\=
LowspeedWrite("port", "retlen", "buffer", "result")\=
LowspeedRead("port", "buflen", "buffer", "result")\=
ReadI2CBytes("port", "inbuf", "count", "outbuf", "result")\=
- Sounds
PlayTone("frequency", "duration")\=
PlayToneEx("frequency", "duration", "volume", "loop?")\=
PlayFile("filename")\=
PlayFileEx("filename", "volume", "loop?")\=
GetSoundState("state", "flags")\=
SetSoundState("state", "flags", "result")\=
- Drawing
ClearScreen()\=
TextOut("x", "y", "txt")\=
TextOutEx("x", "y", "txt", "cls")\=
NumOut("x", "y", "val")\=
NumOutEx("x", "y", "val", "cls")\=
PointOut("x", "y")\=
PointOutEx("x", "y", "cls")\=
LineOut("x1", "y1", "x2", "y2")\=
LineOutEx("x1", "y1", "x2", "y2", "cls")\=
RectOut("x", "y", "width", "height")\=
RectOutEx("x", "y", "width", "height", "cls")\=
CircleOut("x", "y", "radius")\=
CircleOutEx("x", "y", "radius", "cls")\=
GraphicOut("x", "y", "filename")\=
GraphicOutEx("x", "y", "filename", "vars", "cls")\=
- Buttons
ReadButtonEx("btn", "reset", "pressedvar", "countvar", "result")\=
- Misc stuff
Random("arg", "expression")\=
SignedRandom("arg")\=
ResetSleepTimer\=
PowerDown\=
RebootInFirmwareMode\=
GetBatteryLevel("var")\=
GetFreeMemory("var")\=
- File IO
CreateFile("fname", "fsize", "handle", "result")\=
OpenFileAppend("fname", "fsize", "handle", "result")\=
OpenFileRead("fname", "fsize", "handle", "result")\=
CloseFile("handle", "result")\=
ResolveHandle("fname", "handle", "writeable", "result")\=
RenameFile("oldname", "newname", "result")\=
DeleteFile("fname", "result")\=
Read("handle", "n", "result")\=
ReadLn("handle", "n", "result")\=
ReadBytes("handle", "len", "buf", "result")\=
ReadLnString("handle", "output", "result")\=
Write("handle", "n", "result")\=
WriteLn("handle", "n", "result")\=
WriteString("handle", "str", "cnt", "result")\=
WriteLnString("handle", "str", "cnt", "result")\=
WriteBytes("handle", "buf", "cnt", "result")\=
WriteBytesEx("handle", "len", "buf", "result")\=
CreateFileLinear("fname", "fsize", "handle", "result")
CreateFileNonLinear("fname", "fsize", "handle", "result")
OpenFileReadLinear("fname", "fsize", "handle", "result")
FindFirstFile("fname", "handle", "result")
FindNextFile("fname", "handle", "result")
- Messaging
SendMessage("queue", "msg", "result")\=
ReceiveMessage("queue", "clear", "msg", "result")\=
ReceiveRemoteBool("queue", "clear", "bval", "result")\=
ReceiveRemoteNumber("queue", "clear", "val", "result")\=
ReceiveRemoteString("queue", "clear", "str", "result")\=
ReceiveRemoteMessageEx("queue", "clear", "str", "val", "bval", "result")\=
SendResponseBool("queue", "bval", "result")\=
SendResponseNumber("queue", "val", "result")\=
SendResponseString("queue", "msg", "result")\=
BluetoothStatus("conn", "result")\=
BluetoothWrite("conn", "buffer", "result")\=
SendRemoteBool("conn", "queue", "bval", "result")\=
SendRemoteNumber("conn", "queue", "val", "result")\=
SendRemoteString("conn", "queue", "str", "result")\=
RemoteMessageRead("conn", "queue", "result")\=
RemoteMessageWrite("conn", "queue", "msg", "result")\=
RemoteStartProgram("conn", "filename", "result")\=
RemoteStopProgram("conn", "result")\=
RemotePlaySoundFile("conn", "filename", "bloop", "result")\=
RemotePlayTone("conn", "frequency", "duration", "result")\=
RemoteStopSound("conn", "result")\=
RemoteKeepAlive("conn", "result")\=
RemoteResetScaledValue("conn", "port", "result")\=
RemoteResetMotorPosition("conn", "port", "brelative", "result")\=
RemoteSetInputMode("conn", "port", "type", "mode", "result")\=
RemoteSetOutputState("conn", "port", "speed", "mode", "regmode", "turnpct", "runstate", "tacholimit", "result")\=
- HiSpeed Port (enhanced firmware)
RS485Status("sendingData", "dataAvail")
RS485Write("buffer", "status")
RS485Read("buffer", "status")
RS485Control("cmd", "baud", "result")
RS485Init("result")
RS485Uart("baud", "result")
RS485Exit("result")
SendRS485Bool("bval", "status")
SendRS485Number("val", "status")
SendRS485String("str", "status")
- Memory
mov "dest", "src"\=
set "dest", "val"\=
- Math
add "dest", "src1", "src2"\=
sub "dest", "src1", "src2"\=
mul "dest", "src1", "src2"\=
div "dest", "src1", "src2"\=
mod "dest", "src1", "src2"\=
neg "dest", "src"\=
abs "dest", "src"\=
sign "dest", "src"\=
Sqrt("x", "result")\=
Sin("x", "result")\=
Cos("x", "result")\=
Asin("x", "result")\=
Acos("x", "result")\=
- Logic
and "dest", "src1", "src2"\=
or "dest", "src1", "src2"\=
xor "dest", "src1", "src2"\=
not "dest", "src"\=
- Bit manipulation
shl "dest", "src1", "src2"\=
shr "dest", "src1", "src2"\=
- Comparison
cmp "cc", "dest", "src1", "src2"\=
tst "cc", "dest", "src"\=
- Control flow
jmp "label"\=
brcmp "cc", "label", "src1", "src2"\=
brtst "cc", "label", "src"\=
stop "stop?"\=
- System calls
syscall FileOpenRead, "args"\=
syscall FileOpenWrite, "args"\=
syscall FileOpenAppend, "args"\= 
syscall FileRead, "args"\= 
syscall FileWrite, "args"\= 
syscall FileClose, "args"\= 
syscall FileResolve"handle", "args"\= 
syscall FileRename, "args"\= 
syscall FileDelete, "args"\= 
syscall SoundPlayFile, "args"\= 
syscall SoundPlayTone, "args"\= 
syscall SoundGetState, "args"\= 
syscall SoundSetState, "args"\= 
syscall DrawText, "args"\= 
syscall DrawPoint, "args"\= 
syscall DrawLine, "args"\= 
syscall DrawCircle, "args"\= 
syscall DrawRect, "args"\= 
syscall DrawGraphic, "args"\= 
syscall SetScreenMode, "args"\= 
syscall ReadButton, "args"\= 
syscall CommLSWrite, "args"\= 
syscall CommLSRead, "args"\= 
syscall CommLSCheckStatus, "args"\= 
syscall RandomNumber, "args"\= 
syscall GetStartTick, "args"\= 
syscall MessageWrite, "args"\= 
syscall MessageRead, "args"\= 
syscall CommBTCheckStatus, "args"\= 
syscall CommBTWrite, "args"\= 
syscall KeepAlive, "args"\= 
syscall IOMapRead, "args"\= 
syscall IOMapWrite, "args"\=
- Timing
wait "ms"\=
waitv "var"\=
gettick "var"\=
GetFirstTick("var")\=
- Arrays
index "dest", "asrc", "idx"\=
replace "adest", "asrc", "idx", "new"\=
arrsize "dest", "asrc"\=
arrinit "adest", "val", "size"\=
arrsubset "adest", "asrc", "idx", "len"\=
arrbuild "adest", "src1", "src2", "srcn"\=
- Strings
flatten "sdest", "src"\=
unflatten "dest", "err", "str", "default"\=
numtostr "sdest", "num"\=
strtonum "dest", "offsetNext", "str", "offsetCurr", "default"\=
strsubset "sdest", "str", "idx", "len"\=
strcat "sdest", "str1", "str2", "strn"\=
arrtostr "sdest", "asrc"\=
strtoarr "adest", "str"\=
strindex "dest", "str", "idx"\=
strreplace "sdest", "str", "idx", "new"\=
strlen "dest", "str"\=
- Scheduling
precedes "task list"\=
follows "task list"\=
acquire "mutex"\=
release "mutex"\=
exitto "task"\=
start "task"\=
exit\=
exit "start", "end"\=
subcall "threadname", "retvar"\=
subret "retvar"\=
call "subname"\=
return\=
- Inputs
setin "src", "port", Type\=
setin "src", "port", InputMode\=
setin "src", "port", RawValue\=
setin "src", "port", NormalizedValue\=
setin "src", "port", ScaledValue\=
setin "src", "port", InvalidData\=
getin "dest", "port", Type\=
getin "dest", "port", InputMode\=
getin "dest", "port", RawValue\=
getin "dest", "port", NormalizedValue\=
getin "dest", "port", ScaledValue\=
getin "dest", "port", InvalidData\=
- Outputs
setout "ports", "field", "src"\=
getout "dest", "port", UpdateFlags\=
getout "dest", "port", OutputMode\=
getout "dest", "port", Power\=
getout "dest", "port", ActualSpeed\=
getout "dest", "port", TachoCount\=
getout "dest", "port", TachoLimit\=
getout "dest", "port", RunState\=
getout "dest", "port", TurnRatio\=
getout "dest", "port", RegMode\=
getout "dest", "port", Overload\=
getout "dest", "port", RegPValue\=
getout "dest", "port", RegIValue\=
getout "dest", "port", RegDValue\=
getout "dest", "port", BlockTachoCount\=
getout "dest", "port", RotationCount\=
- HiTechnic API functions
SetSensorHTEOPD("port", "bStandard")\=
SetSensorHTGyro("port")\=
ReadSensorHTEOPD("port", "value")\=
ReadSensorHTGyro("port", "offset", "value")\=
ReadSensorHTCompass("port", "value")\=
ReadSensorHTColorNum("port", "value")\=
ReadSensorHTIRSeekerDir("port", "value")\=
ReadSensorHTAccel("port", "x", "y", "z", "result")\=
ReadSensorHTColor("port", "ColorNum", "Red", "Green", "Blue", "result")\= 
ReadSensorHTRawColor("port", "Red", "Green", "Blue", "result")\=
ReadSensorHTNormalizedColor("port", "ColorIdx", "Red", "Green", "Blue", "result")\=
ReadSensorHTIRSeeker("port", "dir", "s1", "s3", "s5", "s7", "s9", "result")\=
HTPFComboDirect("port", "channel", "outa", "outb", "result")\=
HTPFSinglePin("port", "channel", "out", "pin", "func", "cont", "result")\=
HTPFSingleOutputCST("port", "channel", "out", "func", "result")\=
HTPFSingleOutputPWM("port", "channel", "out", "func", "result")\=
HTPFComboPWM("port", "channel", "outa", "outb", "result")\=
HTPFTrain("port", "channel", "func", "result")\=
HTIRTrain("port", "channel", "func", "result")\=
HTPFRawOutput("port", "nibble0", "nibble1", "nibble2", "result")\=
HTPFRepeat("port", "count", "delay", "result")\=
HTRCXSetIRLinkPort("port")\=
HTRCXPoll("src", "value", "result")\=
HTRCXBatteryLevel("result")\=
HTRCXPing()\=
HTRCXDeleteTasks()\=
HTRCXStopAllTasks()\=
HTRCXPBTurnOff()\=
HTRCXDeleteSubs()\=
HTRCXClearSound()\=
HTRCXClearMsg()\=
HTRCXMuteSound()\=
HTRCXUnmuteSound()\=
HTRCXClearAllEvents()\=
HTRCXSetOutput("outputs", "mode")\=
HTRCXSetDirection("outputs", "dir")\=
HTRCXSetPower("outputs", "pwrsrc", "pwrval")\=
HTRCXOn("outputs")\=
HTRCXOff("outputs")\=
HTRCXFloat("outputs")\=
HTRCXToggle("outputs")\=
HTRCXFwd("outputs")\=
HTRCXRev("outputs")\=
HTRCXOnFwd("outputs")\=
HTRCXOnRev("outputs")\=
HTRCXOnFor("outputs", "ms")\=
HTRCXSetTxPower("pwr")\=
HTRCXPlaySound("snd")\=
HTRCXDeleteTask("tasknum")\=
HTRCXStartTask("tasknum")\=
HTRCXStopTask("tasknum")\=
HTRCXSelectProgram("prog")\=
HTRCXClearTimer("timer")\=
HTRCXSetSleepTime("time")\=
HTRCXDeleteSub("subnum")\=
HTRCXClearSensor("port")\=
HTRCXPlayToneVar("varnum", "duration")\=
HTRCXSetWatch("hours", "minutes")\=
HTRCXSetSensorType("port", "type")\=
HTRCXSetSensorMode("port", "mode")\=
HTRCXCreateDatalog("size")\=
HTRCXAddToDatalog("src", "value")\=
HTRCXSendSerial("first", "count")\=
HTRCXRemote("cmd")\=
HTRCXEvent("src", "value")\=
HTRCXPlayTone("freq", "duration")\=
HTRCXSelectDisplay("src", "value")\=
HTRCXPollMemory("address", "result")\=
HTRCXSetEvent("evt", "src", "type")\=
HTRCXSetGlobalOutput("outputs", "mode")\=
HTRCXSetGlobalDirection("outputs", "dir")\=
HTRCXSetMaxPower("outputs", "pwrsrc", "pwrval")\=
HTRCXEnableOutput("outputs")\=
HTRCXDisableOutput("outputs")\=
HTRCXInvertOutput("outputs")\=
HTRCXObvertOutput("outputs")\=
HTRCXIncCounter("counter")\=
HTRCXDecCounter("counter")\=
HTRCXClearCounter("counter")\=
HTRCXSetPriority("port")\=
HTRCXSetMessage("msg")\=
HTScoutCalibrateSensor()\=
HTScoutMuteSound()\=
HTScoutUnmuteSound()\=
HTScoutSelectSounds("grp")\=
HTScoutSetLight("x")\=
HTScoutSetSensorClickTime("src", "value")\=
HTScoutSetSensorHysteresis("src", "value")\=
HTScoutSetSensorLowerLimit("src", "value")\=
HTScoutSetSensorUpperLimit("src", "value")\=
HTScoutSetEventFeedback("src", "value")\=
HTScoutSendVLL("src", "value")\=
HTScoutSetScoutMode("mode")\=
- MindSensors API functions
SetSensorMSPressure("port")\=
ReadSensorMSPressure("port", "value")\=
ReadSensorMSPressureRaw("port", "value")\=
ReadSensorMSCompassEx("port", "addr", "value")\=
ReadSensorMSCompass("port", "value")\=
ReadSensorMSRTClock("port", sec, min, hrs, dow, date, month, year, "result")\=
ReadSensorMSTilt("port", "x", "y", "z", "result")\=
ReadSensorMSTiltEx("port", "addr", "x", "y", "z", "result")\=
ReadSensorMSAccel("port", "x", "y", "z", "result")\=
ReadSensorMSAccelEx("port", "addr", "x", "y", "z", "result")\=
MSSendCommandEx("port", "addr", "cmd", "result")\=
MSSendCommand("port", "cmd", "result")\=
MSReadValueEx("port", "addr", reg, bytes, "out", "result")\=
MSReadValue("port", reg, bytes, "out", "result")\=
DISTNxGP2D12("port", "result")\=
DISTNxGP2D120("port", "result")\=
DISTNxGP2YA21("port", "result")\=
DISTNxGP2YA02("port", "result")\=
DISTNxEnergize("port", "result")\=
ReadDISTNxDistance("port", "out", "result")\=
ReadDISTNxVoltage("port", "out", "result")\=
ReadDISTNxModuleType("port", "out", "result")\=
ReadDISTNxNumPoints("port", "out", "result")\=
ReadDISTNxMinDistance("port", "out", "result")\=
ReadDISTNxMaxDistance("port", "out", "result")\=
SetSensorMSDRODActive("port")\=
SetSensorMSDRODInactive("port")\=
ReadSensorMSDROD("port", "value")\=
PSPNxEnergize("port", "result")\=
ReadSensorMSPlayStationEx("port", "addr", "b1", "b2", "xleft", "yleft", "xright", "yright", "result")\=
ReadSensorMSPlayStation("port", "b1", "b2", "xleft", "yleft", "xright", "yright", "result")\=
NRLink2400("port", "result")\=
NRLink4800("port", "result")\=
NRLinkFlush("port", "result")\=
NRLinkIRLong("port", "result")\=
NRLinkIRShort("port", "result")\=
NRLinkTxRaw("port", "result")\=
NRLinkSetRCX("port", "result")\=
NRLinkSetTrain("port", "result")\=
NRLinkSetPF("port", "result")\=
RunNRLinkMacroEx("port", "addr", "macro", "result")\=
RunNRLinkMacro("port", "macro", "result")\=
ReadNRLinkStatusEx("port", "addr", "value", "result")\=
ReadNRLinkStatus("port", "value", "result")\=
WriteNRLinkBytesEx("port", "addr", "bytes", "result")\=
WriteNRLinkBytes("port", "bytes", "result")\=
ReadNRLinkBytesEx("port", "addr", "bytes", "result")\=
ReadNRLinkBytes("port", "bytes", "result")\=
MSPFComboDirectEx("port", "addr", "channel", "outa", "outb", "result")\=
MSPFComboDirect("port", "channel", "outa", "outb", "result")\=
MSPFSinglePinEx("port", "addr", "channel", "out", "pin", "func", "cont", "result")\=
MSPFSinglePin("port", "channel", "out", "pin", "func", "cont", "result")\=
MSPFSingleOutputCSTEx("port", "addr", "channel", "out", "func", "result")\=
MSPFSingleOutputCST("port", "channel", "out", "func", "result")\=
MSPFSingleOutputPWMEx("port", "addr", "channel", "out", "func", "result")\=
MSPFSingleOutputPWM("port", "channel", "out", "func", "result")\=
MSPFComboPWMEx("port", "addr", "channel", "outa", "outb", "result")\=
MSPFComboPWM("port", "channel", "outa", "outb", "result")\=
MSPFTrainEx("port", "addr", "channel", "func", "result")\=
MSPFTrain("port", "channel", "func", "result")\=
MSIRTrainEx("port", "addr", "channel", "func", "result")\=
MSIRTrain("port", "channel", "func", "result")\=
MSPFRawOutputEx("port", "addr", "nibble0", "nibble1", "nibble2", "result")\=
MSPFRawOutput("port", "nibble0", "nibble1", "nibble2", "result")\=
MSPFRepeatEx("port", "addr", "count", "delay", "result")\=
MSPFRepeat("port", "count", "delay", "result")\=
MSRCXSetNRLinkEx("port", "addr")\=
MSRCXSetNRLinkPort("port")\=
MSRCXPoll("src", "value", "result")\=
MSRCXBatteryLevel("result")\=
MSRCXPing()\=
MSRCXDeleteTasks()\=
MSRCXStopAllTasks()\=
MSRCXPBTurnOff()\=
MSRCXDeleteSubs()\=
MSRCXClearSound()\=
MSRCXClearMsg()\=
MSRCXMuteSound()\=
MSRCXUnmuteSound()\=
MSRCXClearAllEvents()\=
MSRCXSetOutput("outputs", "mode")\=
MSRCXSetDirection("outputs", "dir")\=
MSRCXSetPower("outputs", "pwrsrc", "pwrval")\=
MSRCXOn("outputs")\=
MSRCXOff("outputs")\=
MSRCXFloat("outputs")\=
MSRCXToggle("outputs")\=
MSRCXFwd("outputs")\=
MSRCXRev("outputs")\=
MSRCXOnFwd("outputs")\=
MSRCXOnRev("outputs")\=
MSRCXOnFor("outputs", "ms")\=
MSRCXSetTxPower("pwr")\=
MSRCXPlaySound("snd")\=
MSRCXDeleteTask("tasknum")\=
MSRCXStartTask("tasknum")\=
MSRCXStopTask("tasknum")\=
MSRCXSelectProgram("prog")\=
MSRCXClearTimer("timer")\=
MSRCXSetSleepTime("time")\=
MSRCXDeleteSub("subnum")\=
MSRCXClearSensor("port")\=
MSRCXPlayToneVar("varnum", "duration")\=
MSRCXSetWatch("hours", "minutes")\=
MSRCXSetSensorType("port", "type")\=
MSRCXSetSensorMode("port", "mode")\=
MSRCXCreateDatalog("size")\=
MSRCXAddToDatalog("src", "value")\=
MSRCXSendSerial("first", "count")\=
MSRCXRemote("cmd")\=
MSRCXEvent("src", "value")\=
MSRCXPlayTone("freq", "duration")\=
MSRCXSelectDisplay("src", "value")\=
MSRCXPollMemory("address", "count")\=
MSRCXSetEvent("evt", "src", "type")\=
MSRCXSetGlobalOutput("outputs", "mode")\=
MSRCXSetGlobalDirection("outputs", "dir")\=
MSRCXSetMaxPower("outputs", "pwrsrc", "pwrval")\=
MSRCXEnableOutput("outputs")\=
MSRCXDisableOutput("outputs")\=
MSRCXInvertOutput("outputs")\=
MSRCXObvertOutput("outputs")\=
MSRCXCalibrateEvent("evt", "low", "hi", "hyst")\=
MSRCXSetVar("varnum", "src", "value")\=
MSRCXSumVar("varnum", "src", "value")\=
MSRCXSubVar("varnum", "src", "value")\=
MSRCXDivVar("varnum", "src", "value")\=
MSRCXMulVar("varnum", "src", "value")\=
MSRCXSgnVar("varnum", "src", "value")\=
MSRCXAbsVar("varnum", "src", "value")\=
MSRCXAndVar("varnum", "src", "value")\=
MSRCXOrVar("varnum", "src", "value")\= 
MSRCXSet("dstsrc", "dstval", "src", "value")\=
MSRCXUnlock()\=
MSRCXReset()\=
MSRCXBoot()\= 
MSRCXSetUserDisplay("src", "value", "precision")\=
MSRCXIncCounter("counter")\=
MSRCXDecCounter("counter")\=
MSRCXClearCounter("counter")\=
MSRCXSetPriority("port")\=
MSRCXSetMessage("msg")\=
MSScoutCalibrateSensor()\=
MSScoutMuteSound()\=
MSScoutUnmuteSound()\=
MSScoutSelectSounds("grp")\=
MSScoutSetLight("x")\=
MSScoutSetCounterLimit("ctr", "src", "value")\=
MSScoutSetTimerLimit("tmr", "src", "value")\=
MSScoutSetSensorClickTime("src", "value")\=
MSScoutSetSensorHysteresis("src", "value")\=
MSScoutSetSensorLowerLimit("src", "value")\=
MSScoutSetSensorUpperLimit("src", "value")\=
MSScoutSetEventFeedback("src", "value")\=
MSScoutSendVLL("src", "value")\=
MSScoutSetScoutRules("m", "t", "l", "tm", "fx")\=
MSScoutSetScoutMode("mode")\=
